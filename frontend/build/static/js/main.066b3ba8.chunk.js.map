{"version":3,"sources":["components/Navbar/NavbarElements.js","assets/complex-logo.png","components/Navbar/index.js","pages/landing.js","pages/about.js","pages/learn.js","assets/logo-bg.png","assets/strawberry-slider-big.png","pages/contact.js","assets/vase.png","assets/basket.png","assets/swan.png","assets/fig.PNG","models/VaseStore.js","models/PxModel.js","models/RowModel.js","models/DrawingSectionModel.js","models/ColoringForm.js","models/BasketStore.js","models/FigurineStore.js","models/SwanStore.js","models/RootStore.js","models/RootStoreContext.js","pages/create.js","pages/gallery.js","pages/browse.js","assets/transparent.png","pages/login.js","assets/paper.PNG","components/Wing/index.js","components/Swan/index.js","pages/create-swan.js","components/Vase/index.js","pages/create-vase.js","components/Basket/index.js","pages/create-basket.js","components/Figurine/index.js","pages/create-figurine.js","components/ResultVase/index.js","components/ResultFigurine/index.js","components/ResultBasket/index.js","assets/upper-banner.png","assets/lower-banner.png","pages/result.js","pages/index.js","components/Pixel/index.js","components/SpecialPixel/index.js","components/Row/index.js","components/SpecialRow/index.js","components/UntrackedPixel/index.js","components/UntrackedRow/index.js","components/TriangleSection/index.js","components/DrawingSection/index.js","components/OrigamiObject/index.js","assets/rim.png","assets/halfRim.png","assets/neck.png","components/Rim/index.js","components/UntrackedDrawingSection/index.js","components/UntrackedOrigamiObject/index.js","components/Bottom/index.js","components/Arm/index.js","components/BunnyOrHandle/index.js","components/Sphere/index.js","components/Appendages/index.js","pages/colouring.js","components/App.jsx","index.js"],"names":["Nav","styled","nav","NavLink","Link","PlainLink","NavMenu","FaBars","div","NavBtn","NavBtnLink","Navbar","to","style","height","margin","float","src","logo","alt","letterSpacing","marginRight","color","Landing","display","justifyContent","alignItems","About","Learn","Contact","backgroundImage","bg","backgroundPosition","className","straw","href","target","getCurvePointsNew","_pts","tension","numOfSegments","x","y","t1x","t2x","t1y","t2y","c1","c2","c3","c4","st","t","i","res","first_x","first_y","last_x","last_y","unshift","push","length","Math","pow","max","VaseStore","types","model","cm","dtop","d3","d2","d1","dbottom","dtop_h","d3_h","d2_h","d1_h","dbottom_h","top_rim","bottom_rim","flat_bottom","scale_h","default_color","tot_rows_per_section","optional","array","number","subsections","textures","string","modelDimensions","arms","ears","lid","top_handle","side_handles","actions","self","update_top_rim","update_bottom_rim","update_flat_bottom","update_units","units","update_height","update_dtop","update_d3","update_d2","update_d1","update_dbottom","update_d_heights","vals","storePic","picData","clearTextures","setDefaultColor","getDimensions","maxWidth","updateCurvedPts","broken","s_dtop_h","s_dbottom_h","scale_factor","s_dtop","s_dbottom","s_d1","s_d1_h","s_d2","s_d2_h","s_d3","s_d3_h","myPoints","points","new_pts","h","r","THREE","section_pts","broken_pts","broken_pts_three","lo","hi","temp","slice","curr_idx","j","slice_size","round","k","views","PxModel","pixelColor","oldColor","canChangeColor","inverted","setPixelColor","col","setOldColor","setCanChangeColor","val","setInverted","RowModel","rowData","offset","width","displayRowNum","preColor","addPx","create","setOffset","setWidth","setDisplayRowNum","DrawingSectionModel","drawingSectionData","increasing","addRow","setWidthHeight","w","setIncreasing","DEFAULT_PNG","fileName","type","html2CanvasOptions","saveAs","uri","filename","link","document","createElement","download","body","appendChild","click","removeChild","window","open","ColoringForm","selectedColor","defaultColor","oldDefault","preload","clear","mode","size","canvasPic","appendPic","swan_two_wings","coloringFormData","counter","totPcs","doneDefualt","msg","resultMsg","storeAppendPic","setColor","setModel","swan_one_wing","setMsg","result","preloadDefaultColor","clearAll","unsetClear","setMode","setPreload","exportComponent","node","appendage","current","Error","element","ReactDOM","findDOMNode","html2canvas","scrollY","useCORS","imageTimeout","backgroundColor","then","canvas","toDataURL","saveDiagram","addDrawingSection","addPc","clearColoringForm","updateCounter","oldCol","newCol","done","curr_val","parseInt","splice","String","updateCounterDefault","init","count","idx","getCurvePointsBasket","BasketStore","diameter","update_top_handle","update_side_handles","update_lid","update_diameter","s_diameter","s_diameter_h","FigurineStore","body_scale","body_height","tot_rows_head","update_ears","update_arms","d","getBrokenHeadPts","tot_theta_len","theta_start","theta_len","divisions","s_dtop_bottom","getCurvePointsFigurine","SwanStore","top_scale","bottom_scale","height_scale","wings","texture","update_wings","swanBodyPts","s_bottom","s_top","getCurvePointsSwan","RootStore","props","vaseStore","coloringFormStore","basketStore","figStore","swanStore","RootStoreContext","React","createContext","RootStoreProvider","Provider","useStores","useContext","Create","useEffect","flexDirection","fig","vase","basket","swan","Gallery","Browse","delay","clickAction","console","log","replace","Login","observer","vertices","purpose","my_vertices","useMemo","map","v","faces","onUpdate","geometry","computeFaceNormals","computeVertexNormals","z","verticesNeedUpdate","normalsNeedUpdate","image","grid","load","swan_pts","swan_body","args","PI","side","specular","shininess","bottom","rim_mesh","position","rotation","getX","angle","radius","cos","getY","sin","bottomRad","midRad","midHeight","topHeight","big_vertices","F_vertices","big_F_vertices","L_vertices","B_vertices","y_pos_wing","one_wing","shape","param","moveTo","lineTo","quadraticCurveTo","rad","depth","extrudeSettings","steps","bevelEnabled","neck_mesh","diameter_marker","useState","x_rot","changeXrot","y_rot","changeYrot","z_rot","changeZrot","dist","changeDist","handleKeyDown","event","key","min","preventDefault","addEventListener","removeEventListener","railStyle","borderRadius","Handle","handle","id","value","percent","getHandleProps","left","marginLeft","marginTop","zIndex","textAlign","cursor","fontFamily","fontSize","slider_diameter","rootStyle","domain","step","values","getRailProps","handles","bottom_rim_switch","onChange","options","label","selectedBackgroundColor","initialSelectedIndex","fontColor","optionBorderRadius","wings_switch","units_switch","background","camera","fov","aspect","near","far","intensity","overflow","marginBottom","onClick","top_rim_mesh","bottom_rim_mesh","flat_bottom_mesh","getInputMarker","dtop_marker","dbottom_marker","d1_marker","d2_marker","d3_marker","sliderStyle","MultiHandle","sliderHeight","slider_dtop","slider_d3","slider_d2","slider_d1","slider_dbottom","dSlider","top_rim_switch","flat_bottom_switch","curved_bottom","phi_len","CustomCircleCurve","scale","ty","tz","multiplyScalar","this","tube_scale","path","tube_rad","percent_lid","rad_lid","lid_dist","tan","deco_r","deco_dist","percent_sphere","rad_bottom","bottom_dist","lid_switch","bottom_switch","top_handle_switch","side_handles_switch","head_rad","head","bunny_ears","cat_ears","sphere_ears","bear_ears","tx","y_pos","half_side_len","bshape","ear_rad","arm_rad","x_pos","arms_switch","ears_switch","indexOf","itemsRef","useRef","insideRef","len","_","ref","el","texture_body","divs","broken_head","modelStore","canvasRef","context","getContext","px_size","defaultCol","sec_width","sec_height","fillStyle","fillRect","last_idx","c","ResultFigurine","upperbanner","lowerbanner","Home","component","CreateSwan","CreateVase","CreateBasket","CreateFigurine","formObject","borderColor","substring","applyColor","onMouseEnter","onMouseLeave","onMouseOver","borderStyle","SpecialPixel","on","num","markerNum","rounded","paddingLeft","paddingRight","pixels","SpecialRow","specialTop","specialBottom","my_dict","wing","numPx","caption","elevation","firstRowDisplay","panelRef","rows","var_offset","displayNum","swanUpper","wing_width","remainder","chest_width","ceil","back_width","floor","wing1","wing2","chest","back","dimensions","objectRef","Array","fill","sTopCurr","sBottomCurr","curr","diff","distribute","spacing","0","1","2","spacing_arr","sections","Rim","full","circ","rim_image","half_rim_image","neck_image","arm","bunny","end_width","num_rows","Bottom","flat","object","Arm","BunnyOrHandle","sz","w_sz","input_sz","Sphere","bottoms","rims","showInfo","setShowInfo","showPicker","setShowPicker","showPickerDefault","setShowPickerDefault","colorPaletteIdx","setColorIdx","dColorPaletteIdx","setDColorIdx","colorPalette","setColorPalette","dColorPalette","setDColorPalette","diagramRef","appendagesRef","myDimensions","absolute","myHeight","colorPicker","colors","triangle","onChangeComplete","search","hex","toString","toUpperCase","includes","new_palette","defaultColorPicker","paintByPixel","sprayPaint","logoObject","exportComponentAsPNG","backButton","nextButton","info","stats","sheets","sheetsString","pieces","colorEntry","innerZ","overflowX","overflowY","rootStore","App","Component","render","getElementById"],"mappings":"25FAIO,IAAMA,EAAMC,IAAOC,IAAV,KAeHC,EAAUF,YAAOG,UAAPH,CAAH,KAgCPI,EAAYJ,YAAOG,UAAPH,CAAH,KAmBTK,GAfOL,YAAOM,IAAPN,CAAH,KAeMA,IAAOO,IAAV,MAiBPC,EAASR,IAAOC,IAAV,KAeNQ,EAAaT,YAAOG,UAAPH,CAAH,KCtGR,MAA0B,yCCsD1BU,EA1CA,WACb,OACE,mCACE,eAACX,EAAD,WACE,cAACK,EAAD,CAAWO,GAAG,IAAd,SAAkB,qBAAKC,MAAO,CAACC,OAAQ,GAAIC,OAAQ,GAAIC,MAAO,QAAQC,IAAKC,EAAMC,IAAI,WACrF,cAACd,EAAD,CAAWO,GAAG,IAAd,SACE,mBAAGC,MAAQ,CAACO,cAAe,EAAGC,YAAa,IAAKC,MAAM,QAASN,MAAO,QAAtE,oBAGF,eAACV,EAAD,WACE,cAACH,EAAD,CAASS,GAAG,SAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,qBAEF,cAACjB,EAAD,CAASS,GAAG,SAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,qBAEF,cAACjB,EAAD,CAASS,GAAG,UAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,sBAEF,cAACjB,EAAD,CAASS,GAAG,UAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,sBAEF,cAACjB,EAAD,CAASS,GAAG,WAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,uBAEF,cAACjB,EAAD,CAASS,GAAG,WAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,uBAEF,cAACjB,EAAD,CAASS,GAAG,SAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,8BCxBGG,EAfC,WACd,OACE,qBACEV,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQE,4CCKSa,EAfD,WACZ,OACE,qBACEd,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQE,0CCKSc,EAfD,WACZ,OACE,qBACEf,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQE,0CCZS,MAA0B,oCCA1B,MAA0B,kDCoC1Be,G,MA9BC,WACd,OACE,qBACEhB,MAAO,CACLC,OAAQ,QACRgB,gBAAgB,OAAD,OAASC,EAAT,KACfC,mBAAoB,OAJxB,SAOE,sBAAKC,UAAU,WAAf,UACE,qBAAKhB,IAAKiB,EAAOf,IAAK,GAAIc,UAAW,YACrC,qBAAKhB,IAAKiB,EAAOf,IAAK,GAAIc,UAAW,YACrC,qBAAKhB,IAAKiB,EAAOf,IAAK,GAAIc,UAAW,YACrC,oBAAGA,UAAY,WAAf,iBAA8B,uBAA9B,uBACA,mBAAGA,UAAY,OAAf,uCACA,sBAAKA,UAAU,OAAf,UACE,mBAAGE,KAAK,qCAAqCC,OAAO,SAASH,UAAU,OAAvE,sBACA,uBACA,mBAAGE,KAAK,uEAAuEC,OAAO,SAASH,UAAU,OAAzG,uBAEF,sBAAKA,UAAU,QAAf,UACE,mBAAGE,KAAK,4BAA4BC,OAAO,SAASH,UAAU,OAA9D,oBACA,uBACA,mBAAGE,KAAK,kCAAkCC,OAAO,SAASH,UAAU,OAApE,6BC7BK,MAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,gC,8BCIzC,SAASI,EAAkBC,EAAMC,EAASC,GAEtC,IACIC,EAAGC,EACHC,EAAKC,EAAKC,EAAKC,EACfC,EAAIC,EAAIC,EAAIC,EACZC,EAAIC,EAAGC,EAJPC,EAAM,GAMJC,EAAUjB,EAAK,GACfkB,EAAUlB,EAAK,GACfmB,EAASnB,EAAK,GACdoB,EAASpB,EAAK,GAOpB,IALAA,EAAKqB,QAAQH,GACblB,EAAKqB,QAAQJ,GACbjB,EAAKsB,KAAKH,GACVnB,EAAKsB,KAAKF,GAELL,EAAE,EAAGA,EAAKf,EAAKuB,OAAS,EAAIR,GAAG,EAChC,IAAKD,EAAE,EAAGA,GAAKZ,EAAeY,IAG1BT,GAAOL,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCK,GAAON,EAAKe,EAAE,GAAKf,EAAKe,IAAMd,EAE9BM,GAAOP,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCO,GAAOR,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAGhCY,EAAKC,EAAIZ,EAGTO,EAAO,EAAIe,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAK,EACpDH,GAAO,EAAIc,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAC/CF,EAAWa,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAKA,EACpDD,EAAWY,KAAKC,IAAIZ,EAAI,GAAUW,KAAKC,IAAIZ,EAAI,GAG/CV,EAAIM,EAAKT,EAAKe,GAAQL,EAAKV,EAAKe,EAAE,GAAKJ,EAAKN,EAAMO,EAAKN,EACvDF,EAAIK,EAAKT,EAAKe,EAAE,GAAML,EAAKV,EAAKe,EAAE,GAAKJ,EAAKJ,EAAMK,EAAKJ,EAGvDQ,EAAIM,KAAKnB,GACTa,EAAIM,KAAKE,KAAKE,IAAItB,EAAG,KAI7B,OAAOY,EA4EX,IA8JeW,EA9JGC,IACfC,MAAM,OAAQ,CACbC,IAAI,EACJC,KAAM,GACNC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,QAAS,GACTC,OAAQ,IACRC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,UAAW,EACXhE,OAAQ,GACRiE,SAAS,EACTC,YAAY,EACZC,aAAa,EACbC,QAAS,GACTC,cAAe,UACfC,qBAAsBlB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMqB,QAAS,CAAC,GAAG,EAAE,GAAG,GAAG,KAC5EC,YAAatB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,KAGrFE,SAAUvB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMwB,QAAS,IACpDC,gBAAiBzB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAU,CAAC,CAAC,GAAI,IAAK,CAAC,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAI,CAAC,GAAG,IAAK,CAAC,GAAG,KAEzHK,MAAM,EACNC,KAAM,GACNC,KAAK,EACLC,YAAY,EACZC,cAAc,IAEfC,SAAQ,SAAAC,GAAI,MAAK,CAChBC,eADgB,SACDpB,GACXmB,EAAKnB,QAAUA,GAEnBqB,kBAJgB,SAIEpB,GACdkB,EAAKlB,WAAaA,GAEtBqB,mBAPgB,SAOGpB,GACfiB,EAAKjB,YAAcA,GAEvBqB,aAVgB,SAUHC,GACTL,EAAK9B,GAAKmC,GAEdC,cAbgB,SAaF1F,GACVoF,EAAKpF,OAASA,GAElB2F,YAhBgB,SAgBJpC,GACR6B,EAAK7B,KAAOA,GAEhBqC,UAnBgB,SAmBNpC,GACN4B,EAAK5B,GAAKA,GAEdqC,UAtBgB,SAsBNpC,GACN2B,EAAK3B,GAAKA,GAEdqC,UAzBgB,SAyBNpC,GACN0B,EAAK1B,GAAKA,GAEdqC,eA5BgB,SA4BDpC,GACXyB,EAAKzB,QAAUA,GAEnBqC,iBA/BgB,SA+BCC,GACbb,EAAKvB,KAAOoC,EAAK,GACjBb,EAAKtB,KAAOmC,EAAK,GACjBb,EAAKrB,KAAOkC,EAAK,IAErBC,SApCgB,SAoCPC,GACLf,EAAKT,SAAS7B,KAAKqD,IAGvBC,cAxCgB,WAyCZhB,EAAKT,SAAW,IAEpB0B,gBA3CgB,SA2CA7F,GACZ4E,EAAKf,cAAgB7D,GAEzB8F,cA9CgB,WAgDZ,OADAlB,EAAKmB,SAAW,GACTnB,EAAKP,iBAEhB2B,gBAlDgB,WAwEZ,IAtB0B,IAAdC,EAAa,wDACnBC,EAAWtB,EAAKhB,QAAQ,EACxBuC,GAAe,EAAID,EACnBE,EAAexB,EAAKhB,QAAQgB,EAAKpF,OAEjC6G,EAASzB,EAAK7B,KAAOqD,EACrBE,EAAY1B,EAAKzB,QAAUiD,EAE3BG,EAAO3B,EAAK1B,GAAKkD,EACjBI,EAAU5B,EAAKrB,KAAK,IAAOqB,EAAKhB,QAAUsC,EAE1CO,EAAO7B,EAAK3B,GAAKmD,EACjBM,EAAU9B,EAAKtB,KAAK,IAAOsB,EAAKhB,QAAUsC,EAE1CS,EAAO/B,EAAK5B,GAAKoD,EACjBQ,EAAUhC,EAAKvB,KAAK,IAAOuB,EAAKhB,QAAUsC,EAE5CW,EAAW,CAACV,EAAYG,EAAU,EAAGE,EAAOD,EAAK,EAAEG,EAAOD,EAAK,EAAGG,EAAOD,EAAK,EAAGT,EAASG,EAAO,GACjGpF,EAAU,GACVC,EAAgB,EAChB4F,EAAS,GACPC,EAAUhG,EAAkB8F,EAAU5F,EAASC,GAC5Ca,EAAE,EAAGA,EAAEgF,EAAQxE,OAAQR,GAAG,EAAE,CACjC,IAAMiF,EAAID,EAAQhF,GACZkF,EAAIF,EAAQhF,EAAE,GACpB+E,EAAOxE,KAAM,IAAI4E,UAAcD,EAAGD,IAEtC,GAAKf,EACD,CAMA,IALA,IAAIkB,EAAc,GACdC,EAAa,GACbC,EAAmB,GACnBC,EAAK,EACLC,EAAK,EACFA,EAAG,EAAIR,EAAQxE,QAAO,CACzB,GAAIwE,EAAQQ,KAAQR,EAAQQ,EAAG,IAAMR,EAAQQ,EAAG,KAAOR,EAAQQ,EAAG,GAAG,CACjE,IAAMC,EAAOT,EAAQU,MAAMH,EAAGC,EAAG,GACjCJ,EAAY7E,KAAKkF,GACjBF,EAAKC,EAAK,EAEdA,GAAM,EAEVJ,EAAY7E,KAAKyE,EAAQU,MAAMH,EAAGP,EAAQxE,SAC1C,IAAK,IAAIR,EAAE,EAAGA,EAAE,EAAGA,GAAG,EAElB,IADA,IAAI2F,EAAW,EACNC,EAAE,EAAGA,EAAE/C,EAAKV,YAAYnC,GAAGQ,OAAQoF,GAAG,EAC3C,GAAI/C,EAAKV,YAAYnC,GAAGQ,OAAS,EAAE,CAE/B,IAAIqF,EAAapF,KAAKqF,MAAOjD,EAAKP,gBAAgBO,EAAKV,YAAYnC,GAAG4F,IAAI,GAAK/C,EAAKd,qBAAqB/B,IAAOoF,EAAYpF,GAAGQ,OAAO,IACtIqF,GAA0B,EAC1B,IAAMH,EAAQN,EAAYpF,GAAG0F,MAAMC,EAASA,EAAWE,EAAW,GAClEF,GAAYE,EACZR,EAAW9E,KAAKmF,QAGhBL,EAAW9E,KAAK6E,EAAYpF,IAIxC,IAAI,IAAI4F,EAAE,EAAGA,EAAEP,EAAW7E,OAAQoF,GAAI,EAAE,CAEpC,IADA,IAAIH,EAAO,GACHM,EAAI,EAAGA,EAAIV,EAAWO,GAAGpF,OAAQuF,GAAK,EAAE,CAC5C,IAAMd,EAAII,EAAWO,GAAGG,GAClBb,EAAIG,EAAWO,GAAGG,EAAE,GAC1BN,EAAKlF,KAAM,IAAI4E,UAAcD,EAAGD,IAEpCK,EAAiB/E,KAAKkF,GAG1B,OAAOH,EA1CE,OAAOP,OA8CzBiB,OAAM,SAAAnD,GAAI,MAAK,M,kBChQHoD,EAxBCpF,IACbC,MAAM,UAAW,CAChBoF,WAAY,UACZC,SAAU,UACVC,gBAAgB,EAChBC,UAAU,IAEXzD,SAAQ,SAAAC,GAAI,MAAK,CAChByD,cADgB,SACFC,GACZ1D,EAAKqD,WAAaK,GAEpBC,YAJgB,SAIJD,GACV1D,EAAKsD,SAAWI,GAElBE,kBAPgB,SAOEC,GAChB7D,EAAKuD,eAAiBM,GAExBC,YAVgB,WAUM,IAAVD,IAAS,yDACnB7D,EAAKwD,SAAWK,OAGnBV,OAAM,SAAAnD,GAAI,MAAK,MCOH+D,EA3BE/F,IACdC,MAAM,WAAY,CACjB+F,QAAShG,IAAMmB,SAASnB,IAAMoB,MAAMgE,GAAU,IAC9Ca,OAAQ,EACRC,MAAO,EACPC,cAAe,EACfC,SAAU,YAEXrE,SAAQ,SAAAC,GAAI,MAAK,CAChBqE,MADgB,WAEdrE,EAAKgE,QAAQtG,KAAK0F,EAAQkB,OAAO,CAAChB,SAAUtD,EAAKoE,SAAUf,WAAYrD,EAAKoE,aAE9EG,UAJgB,WAIM,IAAZV,EAAW,uDAAL,KACd7D,EAAKiE,OAASJ,GAEhBW,SAPgB,SAOPX,GACP7D,EAAKkE,MAAQL,GAEfY,iBAVgB,SAUCZ,GACf7D,EAAKmE,cAAgBN,OAGxB9D,SAAQ,SAAAC,GAAI,MAAK,MAEjBmD,OAAM,SAAAnD,GAAI,MAAK,MCDH0E,EAvBa1G,IACzBC,MAAM,sBAAuB,CAC5B0G,mBAAoB3G,IAAMmB,SAASnB,IAAMoB,MAAM2E,GAAW,IAC1DG,MAAO,EACPtJ,OAAQ,EACRgK,YAAY,EACZR,SAAU,YAEXrE,SAAQ,SAAAC,GAAI,MAAK,CAChB6E,OADgB,WAEd7E,EAAK2E,mBAAmBjH,KAAKqG,EAASO,OAAO,CAACF,SAAUpE,EAAKoE,aAE/DU,eAJgB,SAIDC,EAAG3C,GAChBpC,EAAKkE,MAAQa,EACb/E,EAAKpF,OAASwH,GAEhB4C,cARgB,SAQFnB,GACZ7D,EAAK4E,WAAaf,OAGrBV,OAAM,SAAAnD,GAAI,MAAK,MCZZiF,EAAc,CAClBC,SAAU,kBACVC,KAPK,YAQLC,mBAAoB,IAGhBC,GAAS,SAACC,EAAKC,GACnB,IAAMC,EAAOC,SAASC,cAAc,KAEP,kBAAlBF,EAAKG,UACZH,EAAKvJ,KAAOqJ,EACZE,EAAKG,SAAWJ,EAChBE,SAASG,KAAKC,YAAYL,GAC1BA,EAAKM,QACLL,SAASG,KAAKG,YAAYP,IAE1BQ,OAAOC,KAAKX,IA8LHY,GA1LMlI,IAClBC,MAAM,eAAgB,CACrBkI,cAAe,UACfC,aAAc,UACdC,WAAY,UACZC,SAAS,EACTC,OAAO,EACPC,MAAM,EACNrF,SAAU,GACVsF,KAAM,GACNC,UAAW,GACXC,UAAW,GACX1I,MAAO,OACPuF,UAAU,EACVoD,gBAAgB,EAChBC,iBAAkB7I,IAAMmB,SAASnB,IAAMoB,MAAMsF,GAAsB,IACnEoC,QAAS9I,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMwB,SAAU,IAChEuH,OAAQ,EACRC,aAAa,EACbC,IAAK,QACLC,UAAW,UAEZnH,SAAQ,SAAAC,GAAI,MAAK,CAChBc,SADgB,SACPC,GACPf,EAAK0G,UAAY3F,GAGnBoG,eALgB,SAKDpG,GACbf,EAAK2G,UAAY5F,OAIpBhB,SAAQ,SAAAC,GAAI,MAAK,CAChBoH,SADgB,SACP1D,GACP1D,EAAKuG,OAAQ,EACbvG,EAAKmG,cAAgBzC,GAEvB2D,SALgB,SAKPpJ,EAAOqJ,GACdtH,EAAK/B,MAAQA,EACC,SAAVA,IACF+B,EAAK4G,eAAiBU,IAG1BC,OAXgB,WAWkB,IAA3BC,EAA0B,wDAAZP,EAAY,uDAAR,QAClBO,EACAxH,EAAKkH,UAAYD,EADTjH,EAAKiH,IAAMA,GAG1BQ,oBAfgB,SAeI/D,GAClB1D,EAAKoG,aAAe1C,EACpB1D,EAAKqG,WAAa3C,GAEpBzC,gBAnBgB,SAmBAyC,GACd1D,EAAKgH,aAAc,EACnBhH,EAAKuG,OAAQ,EACbvG,EAAKqG,WAAarG,EAAKoG,aACvBpG,EAAKoG,aAAe1C,GAEtBgE,SAzBgB,WA0Bd1H,EAAKgH,aAAc,EACO,YAAtBhH,EAAKoG,cACPpG,EAAKqG,WAAa,UAClBrG,EAAKoG,aAAe,YAGpBpG,EAAKqG,WAAa,UAClBrG,EAAKoG,aAAe,WAEtBpG,EAAKuG,OAAQ,GAEfoB,WArCgB,WAsCd3H,EAAKuG,OAAQ,GAEfqB,QAxCgB,SAwCR/D,GACN7D,EAAKuG,OAAQ,EACbvG,EAAKwG,KAAO3C,GAEdC,YA5CgB,WA4CM,IAAVD,IAAS,yDACnB7D,EAAKwD,SAAWK,GAElBgE,WA/CgB,WA+CK,IAAVhE,IAAS,yDAClB7D,EAAKsG,QAAUzC,GAEjBiE,gBAlDgB,SAkDCC,GAAwB,IAAlBC,EAAiB,wDACtC,IAAID,EAAKE,QACL,MAAM,IAAIC,MAAM,8BAEpB,IAAMC,EAAUC,IAASC,YAAYN,EAAKE,SAC1C,OAAOK,IAAYH,EAAS,CACxBI,SAAUvC,OAAOuC,QACjBC,SAAS,EAETC,aAAc,EACdC,gBAAiB,YAClBC,MAAK,SAAAC,GAEJZ,EAAWhI,EAAKmH,eAAeyB,EAAOC,UAAU5D,EAAa,KAAOjF,EAAKc,SAAS8H,EAAOC,UAAU5D,EAAa,SAGtH6D,YAlEgB,WAmEdzD,GAAOrF,EAAK0G,UAAW,eACvBrB,GAAOrF,EAAK2G,UAAW,0BACvB3G,EAAKkH,UAAY,SAEnB6B,kBAvEgB,WAwEd/I,EAAK6G,iBAAiBnJ,KAAKgH,EAAoBJ,OAAO,CAACF,SAAUpE,EAAKoG,iBAExE4C,MA1EgB,WA2EdhJ,EAAK+G,QAAU,GAEjBkC,kBA7EgB,WA8EdjJ,EAAK6G,iBAAmB,GACxB7G,EAAK8G,QAAU,GACf9G,EAAK+G,OAAS,EACd/G,EAAKmG,cAAgB,UACrBnG,EAAKoG,aAAe,UACpBpG,EAAKqG,WAAa,UAClBrG,EAAKwG,MAAO,EACZxG,EAAKgH,aAAc,EACnBhH,EAAK0G,UAAY,GACjB1G,EAAK2G,UAAY,GACjB3G,EAAKwD,UAAW,EAChBxD,EAAK4G,gBAAiB,EACtB5G,EAAKsG,SAAU,GAMjB4C,cAhGgB,SAgGFC,EAAQC,GAEpB,IADA,IAAIC,GAAO,EACFlM,EAAI,EAAGA,EAAI6C,EAAK8G,QAAQnJ,OAAQR,IAAI,CAC3C,IAAMmM,EAAWC,SAASvJ,EAAK8G,QAAQ3J,GAAG,IACtC6C,EAAK8G,QAAQ3J,GAAG,KAAOgM,IACrBG,GAAY,EACdtJ,EAAK8G,QAAQ0C,OAAOrM,EAAE,GAEnB6C,EAAK8G,QAAQ3J,GAAG,GAAKsM,OAAOH,EAAW,IAGhD,IAAK,IAAInM,EAAI,EAAGA,EAAI6C,EAAK8G,QAAQnJ,OAAQR,IAAI,CAC3C,IAAMmM,EAAWC,SAASvJ,EAAK8G,QAAQ3J,GAAG,IACtC6C,EAAK8G,QAAQ3J,GAAG,KAAOiM,IACzBC,GAAO,EACPrJ,EAAK8G,QAAQ3J,GAAG,GAAKsM,OAAOH,EAAW,IAGtCD,GACHrJ,EAAK8G,QAAQpJ,KAAK,CAAC0L,EAAQ,OAG/BM,qBAtHgB,WAsH8B,IAAzBC,EAAwB,wDAAZpD,EAAY,wDAC3C,IAAIvG,EAAKgH,YAAT,CACA,GAAI2C,EAGF,OAFA3J,EAAK8G,QAAS,CAAC,CAAC9G,EAAKoG,aAAcqD,OAAOzJ,EAAK+G,eAC3CR,IAAOvG,EAAKgH,aAAc,IAIhC,IADA,IAAIqC,GAAO,EACFlM,EAAI,EAAGA,EAAI6C,EAAK8G,QAAQnJ,OAAQR,IACnC6C,EAAK8G,QAAQ3J,GAAG,KAAO6C,EAAKqG,aAC9BrG,EAAK8G,QAAQ3J,GAAG,GAAK6C,EAAKoG,aAC1BiD,GAAO,GAIX,GADArJ,EAAKgH,aAAc,EACdqC,EAGL,IAFA,IAAIO,EAAQ,EACRC,EAAM,EACD1M,EAAI,EAAGA,EAAI6C,EAAK8G,QAAQnJ,OAAQR,IACnC6C,EAAK8G,QAAQ3J,GAAG,KAAO6C,EAAKoG,eAEhB,KADdwD,GAAS,GAEPC,EAAM1M,EAEW,IAAVyM,IACP5J,EAAK8G,QAAQ+C,GAAK,GAAKJ,OAAOF,SAASvJ,EAAK8G,QAAQ+C,GAAK,IAAMN,SAASvJ,EAAK8G,QAAQ3J,GAAG,KACxF6C,EAAK8G,QAAQ0C,OAAOrM,EAAE,WAO/BgG,OAAM,SAAAnD,GAAI,MAAK,M,SClNlB,SAAS8J,GAAqB1N,EAAMC,EAASC,GAEzC,IACIC,EAAGC,EACHC,EAAKC,EAAKC,EAAKC,EACfC,EAAIC,EAAIC,EAAIC,EACZC,EAAIC,EAAGC,EAJPC,EAAM,GAMJC,EAAUjB,EAAK,GACfkB,EAAUlB,EAAK,GACfmB,EAASnB,EAAK,GACdoB,EAASpB,EAAK,GAOpB,IALAA,EAAKqB,QAAQH,GACblB,EAAKqB,QAAQJ,GACbjB,EAAKsB,KAAKH,GACVnB,EAAKsB,KAAKF,GAELL,EAAE,EAAGA,EAAKf,EAAKuB,OAAS,EAAIR,GAAG,EAChC,IAAKD,EAAE,EAAGA,GAAKZ,EAAeY,IAG1BT,GAAOL,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCK,GAAON,EAAKe,EAAE,GAAKf,EAAKe,IAAMd,EAE9BM,GAAOP,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCO,GAAOR,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAGhCY,EAAKC,EAAIZ,EAGTO,EAAO,EAAIe,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAK,EACpDH,GAAO,EAAIc,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAC/CF,EAAWa,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAKA,EACpDD,EAAWY,KAAKC,IAAIZ,EAAI,GAAUW,KAAKC,IAAIZ,EAAI,GAG/CV,EAAIM,EAAKT,EAAKe,GAAQL,EAAKV,EAAKe,EAAE,GAAKJ,EAAKN,EAAMO,EAAKN,EACvDF,EAAIK,EAAKT,EAAKe,EAAE,GAAML,EAAKV,EAAKe,EAAE,GAAKJ,EAAKJ,EAAMK,EAAKJ,EAGvDQ,EAAIM,KAAKnB,GACTa,EAAIM,KAAKE,KAAKE,IAAI,GAAKtB,IAI/B,OAAOY,EAGX,IAiJe2M,GAjJK/L,IACjBC,MAAM,SAAU,CACfC,IAAI,EACJtD,OAAQ,GACRoP,SAAU,GACV7L,KAAM,GACNI,QAAS,GACTM,SAAS,EACTC,YAAY,EACZc,KAAK,EACLC,YAAY,EACZC,cAAc,EACdd,QAAS,GACTD,aAAa,EACbE,cAAe,UACfC,qBAAsBlB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMqB,QAAS,CAAC,GAAG,KACpEC,YAAatB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,KAG/EE,SAAUvB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMwB,QAAS,IACpDC,gBAAiBzB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAU,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,KAE5GK,MAAM,EACNC,KAAM,KAEPI,SAAQ,SAAAC,GAAI,gBACXC,eADW,SACIpB,GACXmB,EAAKnB,QAAUA,GAEnBqB,kBAJW,SAIOpB,GACdkB,EAAKlB,WAAaA,GAEtBmL,kBAPW,SAOOpK,GACdG,EAAKH,WAAaA,GAEtBqK,oBAVW,SAUSpK,GAChBE,EAAKF,aAAeA,GAExBqK,WAbW,SAaAvK,GACPI,EAAKJ,IAAMA,GAEfQ,aAhBW,SAgBEC,GACTL,EAAK9B,GAAKmC,GAEdC,cAnBW,SAmBG1F,GACVoF,EAAKpF,OAASA,GAElBwP,gBAtBW,SAsBKJ,GACZhK,EAAKgK,SAAWA,GAEpBzJ,YAzBW,SAyBCpC,GACR6B,EAAK7B,KAAOA,GAEhBwC,eA5BW,SA4BIpC,GACXyB,EAAKzB,QAAUA,GAEnB4B,mBA/BW,SA+BQ0D,GACf7D,EAAKjB,YAAc8E,GAEvB5C,gBAlCW,SAkCK7F,GACZ4E,EAAKf,cAAgB7D,GAEzB8F,cArCW,WAuCP,OADAlB,EAAKmB,SAAW,GACTnB,EAAKP,iBAEhBqB,SAzCW,SAyCFC,GACLf,EAAKT,SAAS7B,KAAKqD,IAEvBC,cA5CW,WA6CPhB,EAAKT,SAAW,KA7CT,2CA+CKnE,GACZ4E,EAAKf,cAAgB7D,KAhDd,6CAkEP,IAhB0B,IAAdiG,EAAa,wDACnBC,EAAWtB,EAAKhB,QAAQ,EACxBuC,GAAe,EAAID,EACnBE,EAAexB,EAAKhB,QAAQgB,EAAKpF,OAEjC6G,EAASzB,EAAK7B,KAAOqD,EACrBE,EAAY1B,EAAKzB,QAAUiD,EAE3B6I,EAAarK,EAAKgK,SAAWxI,EAC7B8I,EAAe,EAEjBrI,EAAW,CAACV,EAAYG,EAAU,EAAG4I,EAAaD,EAAW,EAAG/I,EAASG,EAAO,GAChFpF,EAAU,GACVC,EAAgB,GAChB4F,EAAS,GACPC,EAAU2H,GAAqB7H,EAAU5F,EAASC,GAC/Ca,EAAE,EAAGA,EAAEgF,EAAQxE,OAAQR,GAAG,EAAE,CACjC,IAAMiF,EAAID,EAAQhF,GACZkF,EAAIF,EAAQhF,EAAE,GACpB+E,EAAOxE,KAAM,IAAI4E,UAAcD,EAAGD,IAEtC,GAAKf,EACD,CAMA,IALA,IAAIkB,EAAc,GACdC,EAAa,GACbC,EAAmB,GACnBC,EAAK,EACLC,EAAK,EACFA,EAAG,EAAIR,EAAQxE,QAAO,CACzB,GAAIwE,EAAQQ,IAAOR,EAAQQ,EAAG,IAAMR,EAAQQ,EAAG,IAAMR,EAAQQ,EAAG,GAAG,CAC/D,IAAMC,EAAOT,EAAQU,MAAMH,EAAGC,EAAG,GACjCJ,EAAY7E,KAAKkF,GACjBF,EAAKC,EAAK,EAEdA,GAAM,EAEVJ,EAAY7E,KAAKyE,EAAQU,MAAMH,EAAGP,EAAQxE,SAC1C,IAAK,IAAIR,EAAE,EAAGA,EAAE,EAAGA,GAAG,EAElB,IADA,IAAI2F,EAAW,EACNC,EAAE,EAAGA,EAAE/C,EAAKV,YAAYnC,GAAGQ,OAAQoF,GAAG,EAC3C,GAAI/C,EAAKV,YAAYnC,GAAGQ,OAAS,EAAE,CAE/B,IAAIqF,EAAapF,KAAKqF,MAAOjD,EAAKP,gBAAgBO,EAAKV,YAAYnC,GAAG4F,IAAI,GAAK/C,EAAKd,qBAAqB/B,IAAOoF,EAAYpF,GAAGQ,OAAO,IACtIqF,GAA0B,EAC1B,IAAMH,EAAQN,EAAYpF,GAAG0F,MAAMC,EAASA,EAAWE,EAAW,GAClEF,GAAYE,EACZR,EAAW9E,KAAKmF,QAGhBL,EAAW9E,KAAK6E,EAAYpF,IAIxC,IAAI,IAAI4F,EAAE,EAAGA,EAAEP,EAAW7E,OAAQoF,GAAI,EAAE,CAEpC,IADA,IAAIH,EAAO,GACHM,EAAI,EAAGA,EAAIV,EAAWO,GAAGpF,OAAQuF,GAAK,EAAE,CAC5C,IAAMd,EAAII,EAAWO,GAAGG,GAClBb,EAAIG,EAAWO,GAAGG,EAAE,GAC1BN,EAAKlF,KAAM,IAAI4E,UAAcD,EAAGD,IAEpCK,EAAiB/E,KAAKkF,GAG1B,OAAOH,EA1CE,OAAOP,KAvEb,KAqHZiB,OAAM,SAAAnD,GAAI,MAAK,MC9IlB,IAoFeuK,GApFOvM,IACnBC,MAAM,WAAY,CACjBC,IAAI,EACJ8L,SAAU,GACVtK,MAAM,EACNC,KAAM,OACN6K,WAAY,GACZC,YAAa,IACbxL,cAAe,UACfM,SAAUvB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMwB,QAAS,IACpDkL,cAAe,GACfjL,gBAAiBzB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAU,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,MAErGN,aAAa,EACbF,SAAS,EACTC,YAAY,EACZc,KAAK,EACLC,YAAY,EACZC,cAAc,IAEfC,SAAQ,SAAAC,GAAI,MAAK,CAChB2K,YADgB,SACJ9G,GACR7D,EAAKL,KAAOkE,GAEhB+G,YAJgB,SAIJ/G,GACR7D,EAAKN,KAAOmE,GAEhBzD,aAPgB,SAOHC,GACTL,EAAK9B,GAAKmC,GAEd+J,gBAVgB,SAUAS,GACZ7K,EAAKgK,SAAWa,GAEpB3J,cAbgB,WAeZ,OADAlB,EAAKmB,SAAW,GACTnB,EAAKP,iBAEhBqB,SAjBgB,SAiBPC,GACLf,EAAKT,SAAS7B,KAAKqD,IAEvBC,cApBgB,WAqBZhB,EAAKT,SAAW,IAEpB0B,gBAvBgB,SAuBA7F,GACZ4E,EAAKf,cAAgB7D,GAEzB0P,iBA1BgB,SA0BCC,GAIb,IAHA,IAAIC,EAAc,EACdC,EAAY,EACZC,EAAY,GACP/N,EAAI,EAAGA,EAAI6C,EAAKP,gBAAgB9B,OAAO,EAAGR,IAAI,CAGnD8N,EAFiBjL,EAAKP,gBAAgBtC,GAAG,GAClB6C,EAAK0K,cACRK,EACpBG,EAAUxN,KAAK,CAACsN,EAAaC,IAC7BD,GAAeC,EAEnB,OAAOC,GAEX9J,gBAvCgB,WAqDZ,IAbA,IAAME,EAAWtB,EAAKgK,SAAWhK,EAAKyK,YAChClJ,GAAe,EAAID,EAEnB6J,EAAgBnL,EAAKgK,SAAWhK,EAAKwK,WAQvCtI,EAAS,GACPC,EA1Hd,SAAgC/F,EAAMC,EAASC,GAE3C,IACIC,EAAGC,EACHC,EAAKC,EAAKC,EAAKC,EACfC,EAAIC,EAAIC,EAAIC,EACZC,EAAIC,EAAGC,EAJPC,EAAM,GAMJC,EAAUjB,EAAK,GACfkB,EAAUlB,EAAK,GACfmB,EAASnB,EAAK,GACdoB,EAASpB,EAAK,GAOpB,IALAA,EAAKqB,QAAQH,GACblB,EAAKqB,QAAQJ,GACbjB,EAAKsB,KAAKH,GACVnB,EAAKsB,KAAKF,GAELL,EAAE,EAAGA,EAAKf,EAAKuB,OAAS,EAAIR,GAAG,EAChC,IAAKD,EAAE,EAAGA,GAAKZ,EAAeY,IAG1BT,GAAOL,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCK,GAAON,EAAKe,EAAE,GAAKf,EAAKe,IAAMd,EAE9BM,GAAOP,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCO,GAAOR,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAGhCY,EAAKC,EAAIZ,EAGTO,EAAO,EAAIe,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAK,EACpDH,GAAO,EAAIc,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAC/CF,EAAWa,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAKA,EACpDD,EAAWY,KAAKC,IAAIZ,EAAI,GAAUW,KAAKC,IAAIZ,EAAI,GAG/CV,EAAIM,EAAKT,EAAKe,GAAQL,EAAKV,EAAKe,EAAE,GAAKJ,EAAKN,EAAMO,EAAKN,EACvDF,EAAIK,EAAKT,EAAKe,EAAE,GAAML,EAAKV,EAAKe,EAAE,GAAKJ,EAAKJ,EAAMK,EAAKJ,EAGvDQ,EAAIM,KAAKnB,GACTa,EAAIM,KAAKE,KAAKE,IAAI,GAAKtB,IAI/B,OAAOY,EA2EagO,CAJD,CAAC7J,EAAY4J,EAAc,EAFrB,EADFnL,EAAKgK,SAG6C,EAAG1I,EAAS6J,EAAc,GACjF,IACM,IAGXhO,EAAE,EAAGA,EAAEgF,EAAQxE,OAAQR,GAAG,EAAE,CACjC,IAAMiF,EAAID,EAAQhF,GACZkF,EAAIF,EAAQhF,EAAE,GACpB+E,EAAOxE,KAAM,IAAI4E,UAAcD,EAAGD,IAEtC,OAAOF,OAGZiB,OAAM,SAAAnD,GAAI,MAAK,MCjFlB,IA2EeqL,GA3EGrN,IACfC,MAAM,OAAQ,CACbC,IAAI,EACJ8L,SAAU,GACVS,YAAa,IACba,UAAW,EACXC,aAAa,GACbC,aAAc,GACdvM,cAAe,UACfwM,OAAO,EACP3M,YAAY,EACZ4M,QAAS,GACTjM,gBAAiBzB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAU,CAAC,CAAC,EAAG,KAE7EN,aAAa,EACbF,SAAS,EACTa,MAAM,EACNC,KAAM,GACNC,KAAK,EACLC,YAAY,EACZC,cAAc,IAEfC,SAAQ,SAAAC,GAAI,MAAK,CAChBI,aADgB,SACHC,GACTL,EAAK9B,GAAKmC,GAEdsL,aAJgB,SAIH9H,GACT7D,EAAKyL,MAAQ5H,GAEjB3D,kBAPgB,SAOE2D,GACd7D,EAAKlB,WAAa+E,GAEtBuG,gBAVgB,SAUAS,GACZ7K,EAAKgK,SAAWa,GAEpB/J,SAbgB,SAaPC,GACLf,EAAK0L,QAAU3K,GAEnBC,cAhBgB,WAiBZhB,EAAK0L,QAAU,IAEnBzK,gBAnBgB,SAmBA7F,GACZ4E,EAAKf,cAAgB7D,GAEzB8F,cAtBgB,WAyBZ,OAFAlB,EAAKmB,SAAW,GAETnB,EAAKP,iBAEhBmM,YA3BgB,WA0CZ,IAdA,IAAMtK,EAAWtB,EAAKgK,SAAWhK,EAAKwL,aAChCjK,GAAe,EAAID,EAAW,GAE9BuK,EAAW7L,EAAKgK,SAAWhK,EAAKuL,aAChCO,EAAQ9L,EAAKgK,SAAWhK,EAAKsL,UAQ/BpJ,EAAS,GACPC,EAjHd,SAA4B/F,EAAMC,EAASC,GAEvC,IACIC,EAAGC,EACHC,EAAKC,EAAKC,EAAKC,EACfC,EAAIC,EAAIC,EAAIC,EACZC,EAAIC,EAAGC,EAJPC,EAAM,GAMJC,EAAUjB,EAAK,GACfkB,EAAUlB,EAAK,GACfmB,EAASnB,EAAK,GACdoB,EAASpB,EAAK,GAOpB,IALAA,EAAKqB,QAAQH,GACblB,EAAKqB,QAAQJ,GACbjB,EAAKsB,KAAKH,GACVnB,EAAKsB,KAAKF,GAELL,EAAE,EAAGA,EAAKf,EAAKuB,OAAS,EAAIR,GAAG,EAChC,IAAKD,EAAE,EAAGA,GAAKZ,EAAeY,IAG1BT,GAAOL,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCK,GAAON,EAAKe,EAAE,GAAKf,EAAKe,IAAMd,EAE9BM,GAAOP,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCO,GAAOR,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAGhCY,EAAKC,EAAIZ,EAGTO,EAAO,EAAIe,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAK,EACpDH,GAAO,EAAIc,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAC/CF,EAAWa,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAKA,EACpDD,EAAWY,KAAKC,IAAIZ,EAAI,GAAUW,KAAKC,IAAIZ,EAAI,GAG/CV,EAAIM,EAAKT,EAAKe,GAAQL,EAAKV,EAAKe,EAAE,GAAKJ,EAAKN,EAAMO,EAAKN,EACvDF,EAAIK,EAAKT,EAAKe,EAAE,GAAML,EAAKV,EAAKe,EAAE,GAAKJ,EAAKJ,EAAMK,EAAKJ,EAGvDQ,EAAIM,KAAKnB,GACTa,EAAIM,KAAKE,KAAKE,IAAI,GAAKtB,IAI/B,OAAOY,EAkEa2O,CAJD,CAACxK,EAAYsK,EAAS,EAFhB,EADF7L,EAAKgK,SAGwC,EAAG1I,EAASwK,EAAM,GACpE,IACM,IAGX3O,EAAE,EAAGA,EAAEgF,EAAQxE,OAAQR,GAAG,EAAE,CACjC,IAAMiF,EAAID,EAAQhF,GACZkF,EAAIF,EAAQhF,EAAE,GACpB+E,EAAOxE,KAAM,IAAI4E,UAAcD,EAAGD,IAEtC,OAAOF,OAGZiB,OAAM,SAAAnD,GAAI,MAAK,MC3GHgM,GARGhO,IAAMC,MAAM,aAAagO,MAAM,CAC/CC,UAAWlO,IAAMmB,SAASpB,EAAW,IACrCoO,kBAAmBnO,IAAMmB,SAAS+G,GAAc,IAChDkG,YAAapO,IAAMmB,SAAS4K,GAAa,IACzCsC,SAAUrO,IAAMmB,SAASoL,GAAe,IACxC+B,UAAWtO,IAAMmB,SAASkM,GAAW,MCSjCkB,GAAmBC,IAAMC,gBAElBC,GAAoBH,GAAiBI,SASrCC,GAAY,kBAAMJ,IAAMK,WAAWN,KCsBjCO,GA7CA,WAEbC,qBAAU,WACRZ,EAAkB5E,QAAO,EAAM,SAC/B4E,EAAkBlD,sBACjB,IALgB,IAOZkD,EAAqBS,KAArBT,kBAEP,OACE,gCACE,sBAAKpQ,UAAU,YAAf,UACA,qBAAKhB,IAAKiB,EAAOf,IAAK,GAAIc,UAAW,UACrC,mBAAGA,UAAU,cAAb,4BACA,qBAAKhB,IAAKiB,EAAOf,IAAK,GAAIc,UAAW,cAErC,qBACEpB,MAAO,CACLqS,cAAe,MACfpS,OAAQ,QAHZ,SAME,sBAAKmB,UAAY,SAAjB,UACE,eAAC5B,EAAD,CAAWO,GAAG,mBAAd,UACE,qBAAKO,IAAK,GAAIF,IAAKkS,EAAKlR,UAAU,gBAClC,mBAAGA,UAAU,cAAb,uCAEF,eAAC5B,EAAD,CAAWO,GAAG,eAAd,UACE,qBAAKO,IAAK,GAAIF,IAAKmS,EAAMnR,UAAU,gBACnC,mBAAGA,UAAU,cAAb,mCAEF,eAAC5B,EAAD,CAAWO,GAAG,iBAAd,UACE,qBAAKO,IAAK,GAAIF,IAAKoS,EAAQpR,UAAU,gBACrC,mBAAGA,UAAU,cAAb,qCAEF,eAAC5B,EAAD,CAAWO,GAAG,eAAd,UACE,qBAAKO,IAAK,GAAIF,IAAKqS,EAAMrR,UAAU,gBACnC,mBAAGA,UAAU,cAAb,4CCjCGsR,GAfC,WACd,OACE,qBACE1S,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQE,4C,oBCqBS0S,GA5BA,WAAO,IAAD,EACoBV,KADpB,EACZT,kBADY,EACOG,UAW1B,OACE,qBACE3R,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQA,cAAC,KAAD,CAAW2S,MAAO,EAAG7S,GAAG,aAAa8S,YAAaC,QAAQC,IAAI,MAAOC,SAAS,EAA9E,SACE,6CC3BS,OAA0B,wCCsB1BC,GAlBD,WACZ,OACE,qBACEjT,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQE,gCACE,qBAAKmB,UAAU,mBAAmBhB,IAAKC,GAAMC,IAAI,KACjD,mBAAGc,UAAU,mBAAb,+B,kBChBO,OAA0B,kC,kBCoG1B8R,gBA/FF,SAAC5B,GAAW,IACd6B,EAAqB7B,EAArB6B,SAAUC,EAAW9B,EAAX8B,QACXC,EAAcC,mBAAQ,kBAAMH,EAASI,KAAI,SAAAC,GAAC,oBAAQ7L,UAAR,aAAyB6L,SAAK,IAExEC,EAAQ,GAqFd,MApFe,QAAXL,EACAK,EAAM1Q,KACF,IAAI4E,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,EAAG,GAAI,GAEvB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IAGZ,cAAXyL,EACLK,EAAM1Q,KACF,IAAI4E,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,IAIV,YAAXyL,GACLK,EAAM1Q,KACF,IAAI4E,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,IAuC1B,aADA,CACA,YAAUwL,SAAUE,EAAaI,MAAOA,EAAOC,SAdnD,SAAgBC,GACZA,EAASC,qBACTD,EAASE,uBACT,IAAK,IAAIrR,EAAI,EAAGA,EAAImR,EAASR,SAASnQ,OAAQR,IAC1CmR,EAASR,SAAS3Q,GAAGZ,EAAIuR,EAAS3Q,GAAG,GACrCmR,EAASR,SAAS3Q,GAAGX,EAAIsR,EAAS3Q,GAAG,GACrCmR,EAASR,SAAS3Q,GAAGsR,EAAIX,EAAS3Q,GAAG,GAEzCmR,EAASI,oBAAqB,EAC9BJ,EAASK,mBAAoB,QC0LtBd,gBA/QF,SAAC5B,GAAW,IACdK,EAAqBL,EAArBK,UAAW9E,EAAUyE,EAAVzE,OACZoH,EAAQpH,EAAS8E,EAAUZ,QAAUmD,GACrCnD,EAAUuC,mBAAQ,kBAAM,IAAI3L,iBAAsBwM,KAAKF,KAAQ,IAWrE,IAAMG,EAAWzC,EAAUV,cAErBoD,EACN,kCACI,iCACI,+BAAeC,KAAM,CAACF,EAAU,GAAI,EAAG,EAAEnR,KAAKsR,MAC9C,mCAAmBhB,IAAOxC,EAAUyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE/F,iCACI,+BAAeJ,KAAM,CAACF,EAAU,GAAI,EAAG,EAAEnR,KAAKsR,MAC9C,mCAAmBhB,IAAOxC,EAAUyD,KAAQ7M,mBAI9CgN,EAAShD,EAAUtC,SAAWsC,EAAUd,aAAe,IAAO,EAC9D+D,EAAW,uBAAMC,SAAY,CAAC,EAAEF,EAAO,GAAI,GAAIG,SAAY,CAAC,KAAK,EAAE,GAAxD,UACjB,+BAAeR,KAAM,CAAE3C,EAAUtC,SAAWsC,EAAUf,aAAa,EAAG,GAAKe,EAAUtC,SAAS,GAAI,GAAI,MACtG,mCAAmB5O,MAAOoM,EAAQ8E,EAAUrN,cAAgB,eAG5D,SAASyQ,EAAKC,EAAOC,GACjB,OAAQA,EAAShS,KAAKiS,IAAIF,GAG9B,SAASG,EAAKH,EAAOC,GACjB,OAAOA,EAAShS,KAAKmS,IAAIJ,GAqE7B,IAlEA,IAAMK,EAAY1D,EAAUtC,SAAWsC,EAAUhB,UAAY,GACvD2E,EAAS3D,EAAUtC,SAAWsC,EAAUhB,UAAY,GAAM,IAC1D4E,EAAY5D,EAAUtC,SAAWsC,EAAUd,aAAe,IAAM,GAChE2E,EAAY7D,EAAUtC,SAAWsC,EAAUd,aAAe,IAE1DsC,EACN,CAEI,CAAC4B,EAAK9R,KAAKsR,GAAG,IAAKc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,IAAKc,IACpD,CAACN,EAAK9R,KAAKsR,GAAG,IAAKc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,IAAKc,IACpD,CAACN,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,EAAGc,IAChD,CAACN,EAAK9R,KAAKsR,GAAG,GAAIc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,GAAIc,IAClD,CAACN,EAAK,EAAGM,GAAY,EAAGF,EAAK,EAAGE,IAChC,CAACN,EAAK9R,KAAKsR,GAAG,GAAIc,GAAY,GAAIF,EAAKlS,KAAKsR,GAAG,GAAIc,IACnD,CAACN,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,GAAIF,EAAKlS,KAAKsR,GAAG,EAAGc,IACjD,CAACN,EAAK9R,KAAKsR,GAAG,IAAKc,GAAY,GAAIF,EAAKlS,KAAKsR,GAAG,IAAKc,IACrD,CAACN,EAAK9R,KAAKsR,GAAG,IAAKc,GAAY,GAAIF,EAAKlS,KAAKsR,GAAG,IAAKc,IAErD,CAACN,EAAK9R,KAAKsR,GAAG,IAAKe,GAASC,EAAWJ,EAAKlS,KAAKsR,GAAG,IAAKe,IACzD,CAACP,EAAK9R,KAAKsR,GAAG,IAAKe,GAASC,EAAWJ,EAAKlS,KAAKsR,GAAG,IAAKe,IACzD,CAACP,EAAK9R,KAAKsR,GAAG,EAAGe,GAASC,EAAWJ,EAAKlS,KAAKsR,GAAG,EAAGe,IACrD,CAACP,EAAK9R,KAAKsR,GAAG,GAAIe,GAASC,EAAWJ,EAAKlS,KAAKsR,GAAG,GAAIe,IACvD,CAACP,EAAK,EAAGO,GAASC,EAAWJ,EAAK,EAAGG,IACrC,CAACP,EAAK9R,KAAKsR,GAAG,GAAIe,GAASC,GAAYJ,EAAKlS,KAAKsR,GAAG,GAAIe,IACxD,CAACP,EAAK9R,KAAKsR,GAAG,EAAGe,GAASC,GAAYJ,EAAKlS,KAAKsR,GAAG,EAAGe,IACtD,CAACP,EAAK9R,KAAKsR,GAAG,IAAKe,GAASC,GAAYJ,EAAKlS,KAAKsR,GAAG,IAAKe,IAC1D,CAACP,EAAK9R,KAAKsR,GAAG,IAAKe,GAASC,GAAYJ,EAAKlS,KAAKsR,GAAG,IAAKe,IAE1D,CAACD,EAAU,EAAGG,EAAW,IAGvBC,EACN,CACI,EAAEV,GAAM9R,KAAKsR,GAAG,EAAGc,GAAY,GAAIF,GAAMlS,KAAKsR,GAAG,EAAGc,IACpD,EAAEN,EAAK,EAAGM,GAAY,GAAIF,EAAK,EAAGE,IAClC,EAAEN,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,GAAIF,EAAKlS,KAAKsR,GAAG,EAAGc,IAClD,EAAEN,EAAK,EAAE9R,KAAKsR,GAAG,GAAIc,GAAY,GAAIF,EAAK,EAAElS,KAAKsR,GAAG,GAAIc,IACxD,CAACN,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,GAAIF,EAAKlS,KAAKsR,GAAG,EAAGc,IACjD,CAACN,EAAK,EAAE9R,KAAKsR,GAAG,GAAIc,GAAY,GAAIF,EAAK,EAAElS,KAAKsR,GAAG,GAAIc,IACvD,CAACN,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,GAAIF,EAAKlS,KAAKsR,GAAG,EAAGc,IACjD,CAACN,EAAK,EAAGM,GAAY,GAAIF,EAAK,EAAGE,IACjC,CAACN,GAAM9R,KAAKsR,GAAG,EAAGc,GAAY,GAAIF,GAAMlS,KAAKsR,GAAG,EAAGc,IACnD,CAAC,EAAa,IAAVG,EAA0B,MAAVH,IAGlBK,EAAa,CAEf,EAAEX,EAAK9R,KAAKsR,GAAG,IAAKc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,IAAKc,IACrD,EAAEN,EAAK9R,KAAKsR,GAAG,IAAKc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,IAAKc,IACrD,CAACN,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,EAAGc,IAChD,CAACN,EAAK9R,KAAKsR,GAAG,IAAKc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,IAAKc,IACpD,CAACN,EAAK9R,KAAKsR,GAAG,IAAKc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,IAAKc,IACpD,CAAC,EAAGG,EAAU,EAAGH,EAAU,MAGzBM,EAAiB,CAEnB,EAAEZ,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,EAAGc,IACjD,EAAEN,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,EAAGc,IACjD,CAACN,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,EAAGc,IAChD,CAACN,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,EAAGc,IAChD,CAACN,EAAK9R,KAAKsR,GAAG,EAAGc,GAAY,EAAGF,EAAKlS,KAAKsR,GAAG,EAAGc,IAChD,CAAC,EAAGG,EAAU,IAAKH,EAAU,MAG3BO,EAAa,GACVpT,EAAI,EAAGA,EAAI2Q,EAASnQ,OAAQR,IAAI,CACrC,IAAIyF,EAAO,GACXA,EAAKlF,MAAM,EAAIoQ,EAAS3Q,GAAG,GAAG2Q,EAAS3Q,GAAG,GAAG2Q,EAAS3Q,GAAG,IACzDoT,EAAW7S,KAAKkF,GAIpB,IADA,IAAM4N,EAAa,GACVrT,EAAI,EAAGA,EAAIkT,EAAW1S,OAAO,EAAGR,IAAI,CACzC,IAAIyF,EAAO,GACXA,EAAKlF,KAAK2S,EAAWlT,GAAG,GAAGkT,EAAWlT,GAAG,IAAK,EAAIkT,EAAWlT,GAAG,IAChEqT,EAAW9S,KAAKkF,GAEpB4N,EAAW9S,KAAK,CAAC,EAAGyS,EAAU,EAAgB,KAAZH,IAElC,IAAMS,EAAanE,EAAUtC,SAAWsC,EAAUd,aAC5CC,EACN,kCACI,uBAAM+D,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUA,EAAUC,QAAS,SACnC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUA,EAAUC,QAAS,SACnC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,gBAEhF,uBAAMkN,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUyC,EAAYxC,QAAS,SACrC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUyC,EAAYxC,QAAS,SACrC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,gBAEhF,uBAAMkN,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUuC,EAAYtC,QAAS,eACrC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUuC,EAAYtC,QAAS,eACrC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,gBAEhF,uBAAMkN,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAU0C,EAAYzC,QAAS,eACrC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAU0C,EAAYzC,QAAS,eACrC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,mBAI9EoO,EAAW,kCACb,uBAAMlB,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUsC,EAAcrC,QAAS,aACvC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUsC,EAAcrC,QAAS,aACvC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,gBAEhF,uBAAMkN,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUwC,EAAgBvC,QAAS,eACzC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUwC,EAAgBvC,QAAS,eACzC,mCAAmB3S,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,mBAI9EqO,EAAQ1C,mBAAS,kBAAM,IAAI3L,UAAe,CAACgK,EAAUtC,WACrD4G,EAA6B,GAArBtE,EAAUtC,SAClB9M,EAAY,GAAR0T,EACVD,EAAME,OAAO,EAAU,KAAND,GACjBD,EAAMG,OAAa,GAANF,EAAW,GACxBD,EAAMI,iBAAiBH,EAAQA,EAAM,EAAS,IAANA,EAAU,EAAEA,EAAe,IAARA,GAC3DD,EAAMI,iBAAiBH,EAAM,EAAW,IAARA,GAAcA,EAAM,EAAEA,GACtDD,EAAMG,QAAQF,EAAM,IAAKA,EAAS,IAAI1T,GACtCyT,EAAMI,iBAAiBH,EAAM,EAAa,IAARA,EAAe1T,EAAG0T,EAAO1T,EAAE,IAAe,IAAR0T,EAAe1T,EAAE,KACrFyT,EAAMI,iBAAkBH,EAAQA,EAAM,IAAM1T,EAAE,IAAY,IAAN0T,EAAU,EAAK1T,EAAE,IAAK0T,EAAO1T,EAAE,IAAKA,EAAE,KAE1F,IAxLwB8T,EAAKpW,EAwLvBqW,EAAQL,EAAM,EAEdM,EAAkB,CACpBC,MAAO,IACPF,MAAOA,EACPG,cAAc,GAIZnN,EAASqI,EAAUtC,SAAWsC,EAAUd,aAAsB,IAANoF,EAAeT,EAAU,EAAK,EACtFkB,EAAY,uBAAM7B,SAAU,EAAEyB,EAAM,EAAEhN,EAAQ+L,EAAU,GAAKP,SAAU,CAAC,EAAG7R,KAAKsR,GAAG,EAAG,GAA1E,UACd,iCAAiBD,KAAM,CAAC0B,EAAOO,KAC/B,mCAAmB9V,MAAOoM,EAAQ8E,EAAUrN,cAAe,UAAWkQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAI3HiC,GAxMkBN,EAwMgB1E,EAAUtC,SAAS,EAAK,GAxMnCpP,EAwMwC,EAtM7D,uBAAM4U,SAAY,CAAC,EAAE5U,EAAO,GAA5B,UACI,kCAAkBqU,KAAM,CAAC+B,EAAKA,EAAK,IAAM,GAAI,GAAG,EAAK,EAAa,EAAVpT,KAAKsR,MAC7D,mCAAmB9T,MAAM,YATjB,EA+MKmW,mBAAS,GA/Md,oBA+MfC,EA/Me,KA+MTC,EA/MS,OAgNKF,mBAAS,GAhNd,oBAgNfG,EAhNe,KAgNTC,EAhNS,OAiNKJ,mBAAS,GAjNd,oBAiNfK,EAjNe,KAiNTC,EAjNS,QAkNIN,mBAAS,GAlNb,sBAkNfO,GAlNe,MAkNVC,GAlNU,MAoNdC,GAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,GAAOlU,KAAKE,IAAIgU,GAAO,GAAG,KAC1BC,GAAWD,IACX,MACR,IAAK,IACGA,GAAOlU,KAAKuU,IAAIL,GAAO,EAAE,IACzBC,GAAWD,IACX,MACR,IAAK,IACGG,EAAMG,iBAENV,EAAQ,EACRE,EAAQ,EACRE,GAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,EAAWD,GACXG,GAAWD,MAe3B,OATAtF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOqM,iBAAiB,UAAWL,IAG5B,WACHhM,OAAOsM,oBAAoB,UAAWN,OAE3C,IAGC,wBAAOxC,SAAU,CAAC,GAAG,EAAEsC,IAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAArD,UACK5C,GACC1C,EAAUb,OAASiF,EACpBpE,EAAUb,OAASA,GAClBjE,GAAU8J,EACXhF,EAAUxN,YAAcyQ,EACxB8B,Q,6BCnEExD,gBA/LI,WAAO,IAAD,EAEkBjB,KAAjCN,EAFe,EAEfA,UAAWH,EAFI,EAEJA,kBAEnBY,qBAAU,WACRZ,EAAkB5E,QAAO,EAAM,SAC/B4E,EAAkBlD,oBAClBkD,EAAkB9E,SAAS,OAAQiF,EAAUb,SAC5C,CAACa,EAAUb,QAEd,IA2CM8G,EAAY,CAChB/C,SAAU,WACVtL,MAAO,OACPtJ,OAAQ,EAER4X,aAAc,EACd9J,gBAAiB,QAGnB,SAAS+J,EAAT,GAGI,IAAD,IAFDC,OAAUC,EAET,EAFSA,GAAIC,EAEb,EAFaA,MAAOC,EAEpB,EAFoBA,QACrBC,EACC,EADDA,eAEA,OACE,6CAAK/W,UAAY,QACfpB,MAAO,CACLoY,KAAK,GAAD,OAAKF,EAAL,KACJrD,SAAU,WACVwD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,YAENN,EAAeH,IAVrB,aAYE,qBAAKhY,MAAO,CAAE0Y,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGxD,SAAS,WAAY0D,OAAQ,EAAG9X,MAAO,QAAtH,SACGwX,OAMT,IAAMW,EAAkB,eAAC,KAAD,CAAQC,UAxCZ,CAClBhE,SAAU,WACVtL,MAAO,OACPtJ,OAAQ,IAqC8C6Y,OAAQ,CAAC,EAAG,IAAKC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACrH,EAAUtC,UAAWqE,SAAU,SAACxK,GAAD,OAASyI,EAAUlC,gBAAgBvG,EAAI,KAAlJ,UACtB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUpBmB,EAAoB,qBAAK/X,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SAC1B,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASyI,EAAUpM,kBAAkB2D,IAC/CmQ,QAxFc,CACd,CACIC,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,YAiF7BC,qBAAsB7H,EAAUxN,WAAa,EAAI,EACjD4J,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAIlBC,EAAe,qBAAKvY,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SACrB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASyI,EAAUX,aAAa9H,IAC1CmQ,QA/GmB,CACnB,CACIC,MAAO,gBACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,SACPrB,OAAO,EACPsB,wBAAyB,YAwG7BC,qBAAsB7H,EAAUb,MAAO,EAAI,EAC3C/C,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAIhBE,EAAe,qBAAKxY,UAAU,SAASpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAApD,SACjB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASyI,EAAUlM,aAAayD,IAC1CmQ,QAlGY,CAClB,CACIC,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,YA2FvBC,qBAAsB7H,EAAUjM,MAAQ,EAAI,EAC5CqI,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAI5B,OACE,mCACE,sBAAKtY,UAAU,YAAYpB,MAAO,CAAC6Z,WAAY,UAAWlZ,QAAS,OAAQ0R,cAAc,MAAO9I,MAAO,OAAQtJ,OAAQ,QAAvH,UACE,sBAAKmB,UAAU,gBAAgBpB,MAAO,CAAC6Z,WAAY,UAAWtQ,MAAO,MAAOtJ,OAAQ,OAAOE,MAAM,QAAjG,UACE,eAAC,KAAD,CAAQ2Z,OAAQ,CAACjF,SAAS,CAAC,EAAG,EAAG,IAAKkF,IAAI,GAAIC,OAAQ,IAAI,IAAKC,KAAM,GAAIC,IAAK,KAAOla,MAAO,CAAC6Z,WAAY,OAAQ5Z,OAAQ,QAAS4X,aAAa,GAAIS,UAAU,KAAMD,WAAW,KAAK9O,MAAM,OAAzL,UACE,2BAAWsL,SAAU,EAAE,IAAK,IAAK,IAAKsF,UAAa,MACnD,2BAAWtF,SAAU,CAAC,GAAI,GAAI,IAAKsF,UAAa,MAChD,2BAAWtF,SAAU,EAAE,KAAM,IAAK,KAAMsF,UAAa,KACrD,2BAAWtF,SAAU,CAAC,KAAM,IAAK,KAAMsF,UAAW,KAClD,2BAAWtF,SAAU,EAAE,GAAI,EAAG,IAAKsF,UAAW,KAC9C,cAAC,GAAD,CAAMxI,UAAWA,EAAW9E,QAAQ,OAEtC,sBAAKzL,UAAU,uBAAf,UACE,qBAAKpB,MAAO,CAACC,OAAQ,MACrB,uCAAS,qCAAT,MAA0B,qCAA1B,UAA+C,qCAA/C,0BAAoF,uBAAK,qCAAzF,QAA4G,qCAA5G,yBAAgJ,uBAAhJ,OAAyJ,yCAAzJ,kCACA,qBAAKD,MAAO,CAACC,OAAQ,YAGzB,sBAAKmB,UAAU,iBAAiBpB,MAAO,CAACuJ,MAAO,MAAOtJ,OAAQ,OAAQma,SAAU,UAAWja,MAAM,SAAjG,UACE,uBACA,uBACA,uBACA,mBAAGiB,UAAU,aAAb,mBACCwY,EACD,uBACA,mBAAGxY,UAAU,OAAb,2BACA,qBAAKpB,MAAO,CAACuJ,MAAM,MAAO8O,WAAW,MAArC,SACGO,IAEH,uBACA,sBAAK5Y,MAAO,CAACW,QAAS,eAAgB4I,MAAO,OAA7C,UACA,mBAAGnI,UAAU,OAAb,mBACCuY,KAED,sBAAK3Z,MAAO,CAACW,QAAS,eAAgB4I,MAAO,OAA7C,UACA,mBAAGnI,UAAU,OAAb,wBACC+X,KAED,qBAAK/X,UAAU,cAAcpB,MAAO,CAACuJ,MAAO,GAAI8Q,aAAa,IAA7D,SACE,cAACza,EAAD,UACE,cAACC,EAAD,CAAYG,MAAO,CAAC6Z,WAAY,WAAYS,QAAS,kBAAM9I,EAAkB5E,UAAU7M,GAAG,aAA1F,SACE,mBAAGqB,UAAY,aAAf,mCClDD8R,gBA1IF,SAAC5B,GAAW,IACdiB,EAAQjB,EAARiB,KACDxB,EAAUuC,mBAAQ,kBAAM,IAAI3L,iBAAsBwM,KAAKD,MAAO,IAK9DvN,EAAW4L,EAAKlO,QAAQ,EACxBuC,GAAe,EAAID,EACnBE,EAAe0L,EAAKlO,QAAQkO,EAAKtS,OAEjC6G,EAAS7D,KAAKE,IAAI,EAAEoP,EAAK/O,KAAOqD,GAChCE,EAAY9D,KAAKE,IAAI,EAAEoP,EAAK3O,QAAUiD,GAEtCG,EAAO/D,KAAKE,IAAI,EAAGoP,EAAK5O,GAAKkD,GAC7BI,EAAUsL,EAAKvO,KAAK,IAAOuO,EAAKlO,QAAUsC,EAE1CO,EAAOjE,KAAKE,IAAI,EAAGoP,EAAK7O,GAAKmD,GAC7BM,EAAUoL,EAAKxO,KAAK,IAAOwO,EAAKlO,QAAUsC,EAE1CS,EAAOnE,KAAKE,IAAI,EAAEoP,EAAK9O,GAAKoD,GAC5BQ,EAAUkL,EAAKzO,KAAK,IAAOyO,EAAKlO,QAAUsC,EAE5C4T,EAAe,yBACfC,EAAkB,yBAClBC,EAAmB,yBAEvB,SAASC,EAAerE,EAAKpW,GACzB,OACI,uBAAM4U,SAAY,CAAC,EAAE5U,EAAO,GAA5B,UACI,kCAAkBqU,KAAM,CAAC+B,EAAKA,EAAK,IAAM,GAAI,GAAG,EAAK,EAAa,EAAVpT,KAAKsR,MAC7D,mCAAmB9T,MAAM,WAKrC,IAAMka,EAAcpI,EAAKrO,QAAUwW,EAAgB5T,EAAO,EAAK,GAAKH,GAAY+T,EAAgB5T,EAAO,EAAK,GAAKH,GAC3GiU,EAAiBrI,EAAKpO,WAAauW,EAAgB3T,EAAU,EAAK,GAAKH,GAAe8T,EAAgB3T,EAAU,EAAK,GAAKH,GAC1HiU,EAAYH,EAAgB1T,EAAK,EAAK,GAAKC,GAC3C6T,EAAYJ,EAAgBxT,EAAK,EAAK,GAAKC,GAC3C4T,EAAYL,EAAgBtT,EAAK,EAAK,GAAKC,GAE7CkL,EAAKrO,UACLqW,EAAe,uBAAM1F,SAAY,CAAC,EAAElO,EAAS,GAAI,GAAImO,SAAY,CAAC,KAAK,EAAE,GAA1D,UACf,+BAAeR,KAAM,CAAExN,EAAO,EAAG,GAAI,GAAI,GAAG,MAC5C,mCAAmBrG,MAAM,gBAGzB8R,EAAKpO,aACLqW,EAAkB,uBAAM3F,SAAY,CAAC,EAAEjO,EAAY,GAAI,GAAIkO,SAAY,CAAC,KAAK,EAAE,GAA7D,UAClB,+BAAeR,KAAM,CAAEvN,EAAU,EAAG,GAAK,GAAK,GAAI,MAClD,mCAAmBtG,MAAM,gBAI7B,IAAM8G,EAASgL,EAAK9L,kBAvDA,EAyDKmQ,mBAAS,GAzDd,oBAyDfC,EAzDe,KAyDTC,EAzDS,OA0DKF,mBAAS,GA1Dd,oBA0DfG,EA1De,KA0DTC,EA1DS,OA2DKJ,mBAAS,GA3Dd,oBA2DfK,EA3De,KA2DTC,EA3DS,OA4DIN,mBAAS,GA5Db,oBA4DfO,EA5De,KA4DVC,EA5DU,KA8DhB7E,EAAKnO,cACLqW,EAAmB,uBAAM5F,SAAY,CAAC,EAAEjO,EAAY,GAAjC,UACf,kCAAkB0N,KAAM,CAACvN,EAAU,EAAGA,EAAU,EAAG,GAAK,MACxD,mCAAoBwM,IAAKxC,QAIjC,IAAMsG,EAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,EAAOlU,KAAKE,IAAIgU,EAAO,GAAG,KAC1BC,EAAWD,GACX,MACR,IAAK,IACGA,EAAOlU,KAAKuU,IAAIL,EAAO,EAAE,IACzBC,EAAWD,GACX,MACR,IAAK,IACGG,EAAMG,iBAENV,EAAQ,EACRE,EAAQ,EACRE,EAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,EAAWD,GACXG,EAAWD,KAe3B,OATAtF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOqM,iBAAiB,UAAWL,GAG5B,WACHhM,OAAOsM,oBAAoB,UAAWN,MAE3C,IAGC,wBAAOxC,SAAU,CAAC,EAAE,EAAEsC,GAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAApD,UACI,iCACI,+BAAe3C,KAAM,CAAC/M,EAAQ,GAAI,EAAG,EAAEtE,KAAKsR,MAC5C,mCAAmBhB,IAAOxC,EAAUyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE/F,iCACI,+BAAeJ,KAAM,CAAC/M,EAAQ,GAAI,EAAG,EAAEtE,KAAKsR,MAC5C,mCAAmBhB,IAAOxC,EAAUyD,KAAQ7M,gBAE/C4K,EAAKrO,SAAWqW,EAChBhI,EAAKpO,YAAcqW,EACnBjI,EAAKnO,aAAeqW,EACpBG,EACAC,EACAC,EACAC,EACAJ,QCgQEzH,gBA/XI,WAAO,IAAD,EAEiBjB,KAAhCV,EAFe,EAEfA,UAAWC,EAFI,EAEJA,kBAEnBY,qBAAU,WACRZ,EAAkB5E,QAAO,EAAM,SAC/B4E,EAAkBlD,oBAClBkD,EAAkB9E,SAAS,UAC1B,IAEH,IAAMsO,EAAc,CAClBnG,SAAU,WACVtL,MAAO,OACPtJ,OAAQ,IAIJ2X,EAAY,CAChB/C,SAAU,WACVtL,MAAO,OACPtJ,OAAQ,EAER4X,aAAc,EACd9J,gBAAiB,QAGnB,SAAS+J,EAAT,GAGI,IAAD,IAFDC,OAAUC,EAET,EAFSA,GAAIC,EAEb,EAFaA,MAAOC,EAEpB,EAFoBA,QACrBC,EACC,EADDA,eAEA,OACE,6CAAK/W,UAAY,QACfpB,MAAO,CACLoY,KAAK,GAAD,OAAKF,EAAL,KACJrD,SAAU,WACVwD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,YAENN,EAAeH,IAVrB,aAYE,qBAAKhY,MAAO,CAAE0Y,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGxD,SAAS,WAAY0D,OAAQ,EAAG9X,MAAO,QAAtH,SACGwX,OAMT,SAASgD,EAAT,GAGI,IAAD,IAFDlD,OAAUC,EAET,EAFSA,GAAIC,EAEb,EAFaA,MAAOC,EAEpB,EAFoBA,QACrBC,EACC,EADDA,eAEA,MAAU,QAANH,GAAsB,QAANA,EAEhB,qBAAK5W,UAAY,QACfpB,MAAO,CACLoY,KAAK,GAAD,OAAKF,EAAL,KACJrD,SAAU,WACVwD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,WARZ,SAWE,qBAAKzY,MAAO,CAAE0Y,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGxD,SAAS,WAAY0D,OAAQ,EAAG9X,MAAO,QAAtH,SACGwX,MAML,6CAAK7W,UAAY,QACfpB,MAAO,CACLoY,KAAK,GAAD,OAAKF,EAAL,KACJrD,SAAU,WACVwD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,YAENN,EAAeH,IAVrB,aAYE,qBAAKhY,MAAO,CAAE0Y,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGxD,SAAS,WAAY0D,OAAQ,EAAG9X,MAAO,QAAtH,SACGwX,OAOX,IAAMiD,EAAe,eAAC,KAAD,CAAQrC,UAAWmC,EAAalC,OAAQ,CAAC,GAAI,KAAMC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACzH,EAAUtR,QAASyT,SAAU,SAACxK,GAAD,OAASqI,EAAU5L,cAAcuD,EAAI,KAAhJ,UACnB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBmD,EAAc,eAAC,KAAD,CAAQtC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACzH,EAAU/N,MAAOkQ,SAAU,SAACxK,GAAD,OAASqI,EAAU3L,YAAYsD,EAAI,KAA3I,UAClB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBoD,EAAY,eAAC,KAAD,CAAQvC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACzH,EAAU9N,IAAKiQ,SAAU,SAACxK,GAAD,OAASqI,EAAU1L,UAAUqD,EAAI,KAAvI,UAChB,cAAC,KAAD,UACC,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG7B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBqD,EAAY,eAAC,KAAD,CAAQxC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACzH,EAAU7N,IAAKgQ,SAAU,SAACxK,GAAD,OAASqI,EAAUzL,UAAUoD,EAAI,KAAvI,UAChB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBsD,EAAY,eAAC,KAAD,CAAQzC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACzH,EAAU5N,IAAK+P,SAAU,SAACxK,GAAD,OAASqI,EAAUxL,UAAUmD,EAAI,KAAvI,UAChB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBuD,EAAiB,eAAC,KAAD,CAAQ1C,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACzH,EAAU3N,SAAU8P,SAAU,SAACxK,GAAD,OAASqI,EAAUvL,eAAekD,EAAI,KAAjJ,UACrB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBwD,EAAU,eAAC,KAAD,CAChB3C,UAAWmC,EACXlC,OAAQ,CAAC,EAAG,KACZjN,KAAM,EACNmN,OAAQ,CAAC,EAAGzH,EAAUvN,KAAMuN,EAAUxN,KAAMwN,EAAUzN,KAAM,KAC5D4P,SAAU,SAACxK,GAAD,OAAOqI,EAAUtL,iBAAiBiD,IAC5C6P,KAAM,EANU,UAQhB,qBAAK/Y,MAAO4X,IACZ,cAAC,KAAD,UACG,gBAAGsB,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACkD,EAAD,CAEElD,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUhBqB,EAAU,CACd,CACIC,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,YAgBzBkC,EAAiB,qBAAKra,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SACnB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASqI,EAAUjM,eAAe4D,IAC5CmQ,QAASA,EACTG,qBAAsBjI,EAAUrN,QAAU,EAAI,EAC9C6J,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAItBP,EAAoB,qBAAK/X,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SACtB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASqI,EAAUhM,kBAAkB2D,IAC/CmQ,QAASA,EACTG,qBAAsBjI,EAAUpN,WAAa,EAAI,EACjD4J,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAItBgC,EAAqB,qBAAKta,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SACvB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASqI,EAAU/L,mBAAmB0D,IAChDmQ,QAASA,EACTG,qBAAsBjI,EAAUnN,YAAc,EAAI,EAClD2J,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAItBE,EAAe,qBAAKxY,UAAU,SAASpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAApD,SACjB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASqI,EAAU9L,aAAayD,IAC1CmQ,QAhDY,CAClB,CACIC,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,YAyCvBC,qBAAsBjI,EAAU7L,MAAQ,EAAI,EAC5CqI,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAI5B,OACE,mCACE,sBAAKtY,UAAU,YAAYpB,MAAO,CAAC6Z,WAAY,UAAWlZ,QAAS,OAAQ0R,cAAc,MAAO9I,MAAO,OAAQtJ,OAAQ,QAAvH,UACE,sBAAKmB,UAAU,gBAAgBpB,MAAO,CAAC6Z,WAAY,UAAWtQ,MAAO,MAAOtJ,OAAQ,OAAOE,MAAM,QAAjG,UACE,eAAC,KAAD,CAAQ2Z,OAAQ,CAACjF,SAAS,CAAC,EAAG,EAAG,KAAMkF,IAAI,GAAIC,OAAQ,IAAI,IAAKC,KAAM,GAAIC,IAAK,KAAOla,MAAO,CAAC6Z,WAAY,OAAQ5Z,OAAQ,MAAO4X,aAAa,GAAIS,UAAU,KAAMD,WAAW,KAAK9O,MAAM,OAAxL,UAEE,2BAAWsL,SAAU,EAAE,IAAK,IAAK,IAAKsF,UAAa,MACnD,2BAAWtF,SAAU,CAAC,IAAK,GAAI,IAAKsF,UAAa,MACjD,2BAAWtF,SAAU,EAAE,KAAM,IAAK,KAAMsF,UAAa,KACrD,2BAAWtF,SAAU,CAAC,KAAM,IAAK,KAAMsF,UAAW,KAClD,2BAAWtF,SAAU,EAAE,GAAI,EAAG,IAAKsF,UAAW,KAG9C,cAAC,GAAD,CAAM5H,KAAMhB,OAEd,sBAAKnQ,UAAU,mBAAf,UACE,uBACA,uCAAS,qCAAT,MAA0B,qCAA1B,UAA+C,qCAA/C,0BAAoF,uBAAK,qCAAzF,QAA4G,qCAA5G,yBAAgJ,uBAAhJ,OAAyJ,yCAAzJ,wCAGJ,sBAAKA,UAAU,iBAAiBpB,MAAO,CAAC6Z,WAAY,UAAWtQ,MAAO,MAAOtJ,OAAQ,OAAQma,SAAU,UAAWja,MAAM,SAAxH,UACE,uBACA,mBAAGiB,UAAU,aAAb,mBACCwY,EACD,sBAAK5Z,MAAO,CAACW,QAAQ,eAAgB4I,MAAO,QAA5C,UACE,sBAAKvJ,MAAO,CAAC6Z,WAAY,UAAWtQ,MAAO,QAASpJ,MAAO,OAAQka,aAAa,GAAIhC,WAAW,GAAIC,UAAU,IAA7G,UACE,mBAAGlX,UAAU,OAAb,oBACC8Z,EACD,mBAAG9Z,UAAU,OAAb,0BACCga,EACD,mBAAGha,UAAU,OAAb,0BACCka,KAEH,sBAAKtb,MAAO,CAAC6Z,WAAY,UAAWtQ,MAAO,QAASpJ,MAAO,QAASka,aAAa,GAAI7Z,YAAY,GAAI8X,UAAU,IAA/G,UACE,mBAAGlX,UAAU,OAAb,0BACC+Z,EACD,mBAAG/Z,UAAU,OAAb,0BACCia,EACD,mBAAGja,UAAU,OAAb,6BACCma,QAGL,mBAAGna,UAAU,OAAb,oCACA,qBAAKpB,MAAO,CAACuJ,MAAM,MAAO8O,WAAW,MAArC,SACGmD,IAEH,sBAAKxb,MAAO,CAACG,MAAO,OAAQoJ,MAAO,QAAS6Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAGjZ,UAAU,aAAb,qBACCqa,KAEH,sBAAKzb,MAAO,CAACG,MAAO,OAAQoJ,MAAO,QAAS6Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAGjZ,UAAU,aAAb,wBACC+X,KAEH,sBAAKnZ,MAAO,CAACG,MAAO,QAASoJ,MAAO,QAAS6Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA5F,UACE,mBAAGjZ,UAAU,aAAb,0BACCsa,KAEH,qBAAK1b,MAAO,CAACuJ,MAAO,GAAI8Q,aAAa,GAAI1Z,QAAQ,eAAgB2X,UAAW,IAA5E,SACE,cAAC1Y,EAAD,UACE,cAACC,EAAD,CAAYG,MAAO,CAAC6Z,WAAY,WAAYS,QAAS,kBAAM9I,EAAkB5E,UAAU7M,GAAG,aAA1F,SACE,mBAAGqB,UAAY,aAAf,mCCxJD8R,gBArOA,SAAC5B,GAAW,IAChBG,EAAeH,EAAfG,YACDV,EAAUuC,mBAAQ,kBAAM,IAAI3L,iBAAsBwM,KAAKD,MAAO,IAE9DvN,EAAW8K,EAAYpN,QAAQ,EAC/BuC,GAAe,EAAID,EACnBE,EAAe4K,EAAYpN,QAAQoN,EAAYxR,OAE/C6G,EAAS7D,KAAKE,IAAI,EAAEsO,EAAYjO,KAAOqD,GACvCE,EAAY9D,KAAKE,IAAI,EAAEsO,EAAY7N,QAAUiD,GAE7C6I,EAAazM,KAAKE,IAAI,EAAGsO,EAAYpC,SAAWxI,GAKlD0T,EAAe,yBACfC,EAAkB,yBAClBzC,EAAS,yBACT9S,EAAM,yBACNE,EAAe,yBACfsV,EAAmB,yBACnBkB,EAAgB,yBAepB,GAbIlK,EAAYvN,UACZqW,EAAe,uBAAM1F,SAAY,CAAC,EAAElO,EAAS,GAAI,GAAImO,SAAY,CAAC,KAAK,EAAE,GAA1D,UACf,+BAAeR,KAAM,CAAExN,EAAO,EAAG,IAAK,IAAK,GAAG,MAC9C,mCAAmBrG,MAAM,gBAGzBgR,EAAYtN,aACZqW,EAAkB,uBAAM3F,SAAY,CAAC,EAAEjO,EAAY,GAAI,GAAIkO,SAAY,CAAC,KAAK,EAAE,GAA7D,UAClB,+BAAeR,KAAM,CAAEvN,EAAU,EAAG,IAAM,IAAM,GAAI,MACpD,mCAAmBtG,MAAM,gBAIzBgR,EAAYvM,WAAW,CACvB,IAAM0W,EAAoB,EAAV3Y,KAAKsR,GACfjE,EAAY,GAAMrN,KAAKsR,GACvBlE,EAAwB,IAAVpN,KAAKsR,GAEzBwD,EACA,kCACI,uBAAMlD,SAAU,CAAC,EAAElO,EAAS,GAAImO,SAAU,EAAE7R,KAAKsR,GAAG,EAAE,EAAE,GAAxD,UACI,gCAAgBD,KAAM,CAACxN,EAAO,EAAG,GAAI,GAAI,EAAG8U,EAASvL,EAAaC,KAClE,mCAAmBiD,IAAOxC,EAAUyD,KAAQ7M,iBAEhD,uBAAMkN,SAAU,CAAC,EAAElO,EAAS,GAAKmO,SAAU,EAAE7R,KAAKsR,GAAG,EAAE,EAAE,GAAzD,UACI,gCAAgBD,KAAM,CAACxN,EAAO,EAAG,GAAI,GAAI,EAAG8U,EAASvL,EAAaC,KAClE,mCAAmBiD,IAAOxC,EAAUyD,KAAQ7M,mBAKpD8J,EAAYrN,cACZqW,EAAmB,uBAAM5F,SAAY,CAAC,EAAEjO,EAAY,GAAjC,UACf,kCAAkB0N,KAAM,CAACvN,EAAU,EAAGA,EAAU,EAAG,GAAK,MACxD,mCAAoBwM,IAAKxC,QA1DX,IA8DhB8K,EA9DgB,kDA+DlB,WAAYC,GAAQ,IAAD,8BACjB,gBACKA,MAAQA,EAFI,EA/DD,qDAmETvZ,GACP,IACMwZ,EAAK9Y,KAAKE,KAAK,GAAKF,KAAKmS,IAAI,EAAInS,KAAKsR,GAAKhS,IAC3CyZ,EAAK/Y,KAAKiS,IAAI,EAAIjS,KAAKsR,GAAKhS,GAClC,OAAO,IAAIoF,UAHA,EAGkBoU,EAAIC,GAAIC,eAAeC,KAAKJ,WAvEzC,GA8DUnU,SAahC,GAAI8J,EAAYtM,aAAa,CACzB,IAAMgX,EAAarV,EAAO,EACpBsV,EAAO,IAAIP,EAAkBM,GAE7BE,EAAWpZ,KAAKuU,IAAI,GAAK2E,EAAW,IAI1ChX,EACA,kCACA,uBAAM0P,SAAU,EAAG/N,EAAO,EAAa,EAATuV,EAAa1V,EAAW0V,EAAY,GAAIF,EAAa,GAAnF,UACI,8BAAc7H,KAAM,CAAC8H,EARZ,GAQwBC,EANpB,EACF,SAMX,mCAAmB9I,IAAOxC,EAAUyD,KAAQ7M,iBAEhD,uBAAMkN,SAAU,CAAE/N,EAAO,EAAa,EAATuV,EAAa1V,EAAW0V,EAAY,GAAIF,EAAa,GAAlF,UACI,8BAAc7H,KAAM,CAAC8H,EAZZ,GAYwBC,EAVpB,EACF,SAUX,mCAAmB9I,IAAOxC,EAAUyD,KAAQ7M,oBAKpD,GAAI8J,EAAYxM,IAAI,CAChB,IACMqX,EAAc,IACdC,EAFY,EAEDzV,EAAmB,EAAK7D,KAAKmS,IAAInS,KAAKsR,GAAK+H,GACtDE,EAAW7V,EAHC,EAGWG,EAAkB,EAAK7D,KAAKwZ,IAAIxZ,KAAKsR,GAAK+H,GACjEI,EAASH,EAAQ,GACjBI,EAAYH,EAAWD,EAAUG,EAAS,GAEhDzX,EACA,kCACI,uBAAM4P,SAAU,CAAC,EAAE2H,EAAS,GAAI,GAAhC,UACI,gCAAgBlI,KAAM,CAACiI,EAAS,GAAI,GAAI,EAAa,EAAVtZ,KAAKsR,GAAQ,EAAGtR,KAAKsR,GAAK+H,KACrE,mCAAmB/I,IAAOxC,EAAUyD,KAAQ7M,iBAEhD,uBAAMkN,SAAU,CAAC,EAAE2H,EAAS,GAA5B,UACI,gCAAgBlI,KAAM,CAACiI,EAAS,GAAI,GAAI,EAAa,EAAVtZ,KAAKsR,GAAQ,EAAGtR,KAAKsR,GAAK+H,KACrE,mCAAmB/I,IAAOxC,EAAUyD,KAAQ7M,gBAEhD,uBAAMkN,SAAU,CAAC,EAAE8H,EAAU,GAA7B,UACI,gCAAgBrI,KAAM,CAACoI,EAAQ,GAAI,MACnC,mCAAmBnJ,IAAOxC,EAAUyD,KAAQ7M,oBAKxD,IAAK8J,EAAYrN,YAAY,CACzB,IAAMwY,EAAiB,GACjBC,EAAc9V,EAAU,EAAK9D,KAAKmS,IAAInS,KAAKsR,GAAKqI,GAChDE,EAAclW,EAAeG,EAAU,EAAK9D,KAAKwZ,IAAIxZ,KAAKsR,GAAKqI,GAErEjB,EAAgB,kCAChB,uBAAM9G,SAAU,CAAC,EAAEiI,EAAY,GAAI,GAAnC,UACI,gCAAgBxI,KAAM,CAACuI,EAAY,GAAI,GAAI,EAAa,EAAV5Z,KAAKsR,GAAQ,EAAGtR,KAAKsR,GAAKqI,KACxE,mCAAmBrJ,IAAOxC,EAAUyD,KAAM7M,iBAE9C,uBAAMkN,SAAU,CAAC,EAAEiI,EAAY,GAAI,GAAnC,UACI,gCAAgBxI,KAAM,CAACuI,EAAY,GAAI,GAAI,EAAa,EAAV5Z,KAAKsR,GAAQ,EAAGtR,KAAKsR,GAAKqI,KACxE,mCAAmBrJ,IAAOxC,EAAUyD,KAAQ7M,mBAKpD,SAAS+S,EAAerE,EAAKpW,GACzB,OACI,uBAAM4U,SAAY,CAAC,EAAE5U,EAAO,GAA5B,UACI,kCAAkBqU,KAAM,CAAC+B,EAAKA,EAAK,IAAM,GAAI,GAAG,EAAK,EAAa,EAAVpT,KAAKsR,MAC7D,mCAAmB9T,MAAM,WAKrC,IAAMka,EAAclJ,EAAYvN,QAAUwW,EAAgB5T,EAAO,EAAK,GAAKH,GAAY+T,EAAgB5T,EAAO,EAAK,GAAKH,GAClHiU,EAAiBnJ,EAAYtN,WAAauW,EAAgB3T,EAAU,EAAK,GAAKH,GAAe8T,EAAgB3T,EAAU,EAAK,GAAKH,GACjI+P,EAAkB+D,EAAgBhL,EAAW,EAAK,GAzInC,GA2IfnI,EAASkK,EAAYhL,kBAvJL,EAyJGmQ,mBAAS,GAzJZ,oBAyJjBC,EAzJiB,KAyJXC,EAzJW,OA0JGF,mBAAS,GA1JZ,oBA0JjBG,EA1JiB,KA0JXC,EA1JW,OA2JGJ,mBAAS,GA3JZ,oBA2JjBK,GA3JiB,KA2JXC,GA3JW,QA4JEN,mBAAS,GA5JX,sBA4JjBO,GA5JiB,MA4JZC,GA5JY,MA8JhBC,GAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,GADAD,IAAgB,IAEhB,MACR,IAAK,IACGE,GAAOlU,KAAKE,IAAIgU,GAAO,GAAG,KAC1BC,GAAWD,IACX,MACR,IAAK,IACGA,GAAOlU,KAAKuU,IAAIL,GAAO,EAAE,IACzBC,GAAWD,IACX,MACR,IAAK,IACGG,EAAMG,iBAENV,EAAQ,EACRE,GAAQ,EACRE,GAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,GAAWD,IACXG,GAAWD,MAe3B,OATAtF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOqM,iBAAiB,UAAWL,IAG5B,WACHhM,OAAOsM,oBAAoB,UAAWN,OAE3C,IAGC,wBAAOxC,SAAU,CAAC,GAAG,EAAEsC,IAAOrC,SAAU,CAAC+B,EAAME,EAAME,IAArD,UACI,iCACI,+BAAe3C,KAAM,CAAC/M,EAAQ,GAAI,EAAG,EAAEtE,KAAKsR,MAC5C,mCAAmBhB,IAAOxC,EAAUyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE/F,iCACI,+BAAeJ,KAAM,CAAC/M,EAAQ,GAAI,EAAG,EAAEtE,KAAKsR,MAC5C,mCAAmBhB,IAAOxC,EAAUyD,KAAQ7M,gBAE/C8J,EAAYxM,KAAOA,EACnBwM,EAAYvN,SAAWqW,EACvB9I,EAAYtN,YAAcqW,EAC1B7D,EACAgE,EACAC,EACAnJ,EAAYvM,YAAc6S,EAC1BtG,EAAYtM,cAAgBA,EAC5BsM,EAAYrN,aAAeqW,GAC1BhJ,EAAYrN,aAAeuX,QC2F1BzI,gBAnTM,WAAO,IAAD,EAEiBjB,KAAlCR,EAFiB,EAEjBA,YAAaD,EAFI,EAEJA,kBAErBY,qBAAU,WACRZ,EAAkB5E,QAAO,EAAM,SAC/B4E,EAAkBlD,oBAClBkD,EAAkB9E,SAAS,YAC1B,IAEH,IAAM2M,EAAU,CACd,CACIC,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,YAgBzByB,EAAc,CAClBnG,SAAU,WACVtL,MAAO,OACPtJ,OAAQ,IAIJ2X,EAAY,CAChB/C,SAAU,WACVtL,MAAO,OACPtJ,OAAQ,EAER4X,aAAc,EACd9J,gBAAiB,QAGnB,SAAS+J,EAAT,GAGI,IAAD,IAFDC,OAAUC,EAET,EAFSA,GAAIC,EAEb,EAFaA,MAAOC,EAEpB,EAFoBA,QACrBC,EACC,EADDA,eAEA,OACE,6CAAK/W,UAAY,QACfpB,MAAO,CACLoY,KAAK,GAAD,OAAKF,EAAL,KACJrD,SAAU,WACVwD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,YAENN,EAAeH,IAVrB,aAYE,qBAAKhY,MAAO,CAAE0Y,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGxD,SAAS,WAAY0D,OAAQ,EAAG9X,MAAO,QAAtH,SACGwX,OAMT,IAAMiD,EAAe,eAAC,KAAD,CAAQrC,UAAWmC,EAAalC,OAAQ,CAAC,GAAI,KAAMC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACvH,EAAYxR,QAASyT,SAAU,SAACxK,GAAD,OAASuI,EAAY9L,cAAcuD,EAAI,KAApJ,UACnB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBY,EAAkB,eAAC,KAAD,CAAQC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACvH,EAAYpC,UAAWqE,SAAU,SAACxK,GAAD,OAASuI,EAAYhC,gBAAgBvG,EAAI,KAAvJ,UACtB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBuD,EAAiB,eAAC,KAAD,CAAQ1C,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACvH,EAAY7N,SAAU8P,SAAU,SAACxK,GAAD,OAASuI,EAAYzL,eAAekD,EAAI,KAArJ,UACvB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUhBmD,EAAc,eAAC,KAAD,CAAQtC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACvH,EAAYjO,MAAOkQ,SAAU,SAACxK,GAAD,OAASuI,EAAY7L,YAAYsD,EAAI,KAA/I,UACpB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUhByD,EAAiB,qBAAKra,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SACnB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASuI,EAAYnM,eAAe4D,IAC9CmQ,QAASA,EACTG,qBAAsB/H,EAAYvN,QAAU,EAAI,EAChD6J,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAItBP,EAAoB,qBAAK/X,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SACtB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASuI,EAAYlM,kBAAkB2D,IACjDmQ,QAASA,EACTG,qBAAsB/H,EAAYtN,WAAa,EAAI,EACnD4J,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAItBqD,EAAa,qBAAK3b,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SACf,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASuI,EAAYjC,WAAWtG,IAC1CmQ,QAASA,EACTG,qBAAsB/H,EAAYxM,IAAM,EAAI,EAC5C8I,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAItBsD,EAAgB,qBAAK5b,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SACtB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASuI,EAAYjM,oBAAoB0D,IACnDmQ,QAASA,EACTG,qBAAsB/H,EAAYrN,YAAc,EAAI,EACpD2J,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAIlBuD,EAAoB,qBAAK7b,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SAC1B,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASuI,EAAYnC,kBAAkBpG,IACjDmQ,QAASA,EACTG,qBAAsB/H,EAAYvM,WAAa,EAAI,EACnD6I,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAIlBwD,EAAsB,qBAAK9b,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SAC5B,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASuI,EAAYlC,oBAAoBrG,IACnDmQ,QAASA,EACTG,qBAAsB/H,EAAYtM,aAAe,EAAI,EACrD4I,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAIlBE,EAAe,qBAAKxY,UAAU,SAASpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAApD,SACjB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASuI,EAAYhM,aAAayD,IAC5CmQ,QA7MY,CAClB,CACIC,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,YAsMvBC,qBAAsB/H,EAAY/L,MAAQ,EAAI,EAC9CqI,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAI5B,OACE,mCACE,sBAAKtY,UAAU,YAAYpB,MAAO,CAAC6Z,WAAY,UAAWlZ,QAAS,OAAQ0R,cAAc,MAAO9I,MAAO,OAAQtJ,OAAQ,SAAvH,UACE,sBAAKmB,UAAU,gBAAgBpB,MAAO,CAAC6Z,WAAY,UAAWtQ,MAAO,MAAOtJ,OAAQ,OAAOE,MAAM,QAAjG,UACE,eAAC,KAAD,CAAQ2Z,OAAQ,CAACjF,SAAS,CAAC,EAAG,EAAG,KAAMkF,IAAI,GAAIC,OAAQ,IAAI,IAAKC,KAAM,GAAIC,IAAK,KAAOla,MAAO,CAAC6Z,WAAY,OAAQ5Z,OAAQ,MAAO4X,aAAa,GAAIS,UAAU,KAAMD,WAAW,KAAK9O,MAAM,OAAxL,UACE,2BAAWsL,SAAU,EAAE,IAAK,IAAK,IAAKsF,UAAa,MACnD,2BAAWtF,SAAU,CAAC,GAAI,GAAI,IAAKsF,UAAa,MAChD,2BAAWtF,SAAU,EAAE,KAAM,IAAK,KAAMsF,UAAa,KACrD,2BAAWtF,SAAU,CAAC,KAAM,IAAK,KAAMsF,UAAW,KAClD,2BAAWtF,SAAU,EAAE,GAAI,EAAG,IAAKsF,UAAW,KAC9C,cAAC,GAAD,CAAQ1I,YAAaA,OAEvB,sBAAKrQ,UAAU,mBAAf,UACE,uBACA,uCAAS,qCAAT,MAA0B,qCAA1B,UAA+C,qCAA/C,0BAAoF,uBAAK,qCAAzF,QAA4G,qCAA5G,yBAAgJ,uBAAhJ,OAAyJ,yCAAzJ,wCAGJ,sBAAKA,UAAU,iBAAiBpB,MAAO,CAACuJ,MAAO,MAAOtJ,OAAQ,OAAQma,SAAU,UAAWja,MAAM,SAAjG,UACE,uBACA,mBAAGiB,UAAU,aAAb,mBACCwY,EACD,sBAAK5Z,MAAO,CAACW,QAAQ,eAAgB4I,MAAO,QAA5C,UACE,sBAAKvJ,MAAO,CAAC6Z,WAAY,UAAWtQ,MAAO,QAASpJ,MAAO,OAAQka,aAAa,GAAIhC,WAAW,GAAIC,UAAU,IAA7G,UACE,mBAAGlX,UAAU,OAAb,oBACC8Z,EACD,mBAAG9Z,UAAU,OAAb,0BACC+Z,KAEH,sBAAKnb,MAAO,CAAC6Z,WAAY,UAAWtQ,MAAO,QAASpJ,MAAO,QAASka,aAAa,GAAI7Z,YAAY,GAAI8X,UAAU,IAA/G,UACE,mBAAGlX,UAAU,OAAb,6BACCwX,EACD,mBAAGxX,UAAU,OAAb,6BACCma,QAGL,sBAAKvb,MAAO,CAACG,MAAO,OAAQoJ,MAAO,QAAS6Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAGjZ,UAAU,aAAb,qBACCqa,KAEH,sBAAKzb,MAAO,CAACG,MAAO,OAAQoJ,MAAO,QAAS6Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAGjZ,UAAU,aAAb,2BACC4b,KAEH,sBAAKhd,MAAO,CAACG,MAAO,OAAQoJ,MAAO,QAAS6Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAGjZ,UAAU,aAAb,wBACC+X,KAEH,sBAAKnZ,MAAO,CAACG,MAAO,OAAQoJ,MAAO,QAAS6Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAGjZ,UAAU,aAAb,wBACC6b,KAEH,sBAAKjd,MAAO,CAACG,MAAO,OAAQoJ,MAAO,QAAS6Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAGjZ,UAAU,aAAb,iBACC2b,KAEH,sBAAK/c,MAAO,CAACG,MAAO,OAAQoJ,MAAO,QAAS6Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAGjZ,UAAU,aAAb,0BACC8b,KAEH,qBAAK9b,UAAU,cAAcpB,MAAO,CAACuJ,MAAO,GAAI8Q,aAAa,GAAI1Z,QAAQ,eAAgB2X,UAAW,IAApG,SACE,cAAC1Y,EAAD,UACE,cAACC,EAAD,CAAYG,MAAO,CAAC6Z,WAAY,WAAYS,QAAS,kBAAM9I,EAAkB5E,UAAU7M,GAAG,aAA1F,SACE,mBAAGqB,UAAY,aAAf,mCC/DD8R,gBAlPE,SAAC5B,GAAW,IAClBI,EAAYJ,EAAZI,SACDX,EAAUuC,mBAAQ,kBAAM,IAAI3L,iBAAsBwM,KAAKD,MAAO,IAE9DxE,EAAagC,EAASrC,SAY5B,IAAMiB,EAAY,GAEZ6M,EADYzL,EAASrC,SAAWqC,EAAS7B,WAAY,EACjC5M,KAAKmS,KAAK,EAAE9E,GAAarN,KAAKsR,IAClDjL,EAAS6T,EAASla,KAAKiS,KAAK,EAAE5E,GAAarN,KAAKsR,IAAM,GAEtD6I,EACN,kCACI,uBAAMvI,SAAU,CAAC,EAAGnD,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAO,GAAvE,UACI,gCAAgBgL,KAAM,CAAC6I,EAAU,GAAI,GAAI,EAAG,EAAIla,KAAKsR,GAAI,EAAGtR,KAAKsR,GAAKjE,KACtE,mCAAmBiD,IAAOxC,EAAUyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE/F,uBAAMG,SAAU,CAAC,EAAGnD,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAO,GAAvE,UACI,gCAAgBgL,KAAM,CAAC6I,EAAU,GAAI,GAAI,EAAG,EAAIla,KAAKsR,GAAI,EAAGtR,KAAKsR,GAAKjE,KACtE,mCAAmBiD,IAAOxC,EAAUyD,KAAM7M,mBAI9C0V,EAAa,yBACbC,EAAW,yBACXC,EAAc,yBACdC,EAAY,yBACZzY,EAAO,yBAEL8W,EAvCkB,kDAwCpB,WAAYC,GAAQ,IAAD,8BACjB,gBACKA,MAAQA,EAFI,EAxCC,qDA4CXvZ,GACP,IAAMkb,EAAKxa,KAAKiS,IAAI,EAAIjS,KAAKsR,GAAKhS,GAC5BwZ,EAAK9Y,KAAKE,KAAK,GAAKF,KAAKmS,IAAI,EAAInS,KAAKsR,GAAKhS,IAEjD,OAAO,IAAIoF,UAAc8V,EAAI1B,EADlB,GAC0BE,eAAeC,KAAKJ,WAhDvC,GAuCQnU,SAahC,GAAqB,SAAlB+J,EAAS1M,KAAgB,CACxB,IAAMmX,EAAagB,EAAS,EACtBf,EAAO,IAAIP,EAAkBM,GAE7BE,EAAWpZ,KAAKuU,IAAI,GAAK2E,EAAW,GAGpCuB,EAAShM,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAS6S,EAAW,EAAKgB,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAEhHiJ,EACA,kCACA,uBAAM3I,SAAU,GAAGsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAK4H,EAAW,GAAGuB,EAAM,GAAI5I,SAAU,CAAC,EAAE,EAAE7R,KAAKsR,GAAG,GAAnG,UACI,8BAAcD,KAAM,CAAC8H,EATZ,GASwBC,EAPpB,EACF,SAOX,mCAAmB9I,IAAKxC,EAASyD,KAAQ7M,iBAE7C,uBAAMkN,SAAU,CAAEsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAK4H,EAAW,EAAGuB,EAAM,GAAI5I,SAAU,CAAC,EAAE,GAAG7R,KAAKsR,GAAG,GAAnG,UACI,8BAAcD,KAAM,CAAC8H,EAbZ,GAawBC,EAXpB,EACF,SAWX,mCAAoB9I,IAAKxC,EAASyD,KAAQ7M,oBAKlD,GAAqB,QAAlB+J,EAAS1M,KAAe,CACvB,IAAMgR,EAAQ,IAAIrO,QACZ+V,EAAShM,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAU6T,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAC3FoJ,EAAiBR,EAAS,IAAK,EACrCnH,EAAME,QAAQyH,EAAc,GAC5B3H,EAAMI,kBAAkBuH,EAAc,IAAqB,IAAhBA,EAAqB,EAAkB,IAAhBA,GAClE3H,EAAMI,iBAAiBuH,EAAc,IAAqB,IAAhBA,EAAqBA,EAAc,GAC7E3H,EAAMG,QAAQwH,EAAc,GAE5B,IAAMpH,EAAkB,CACpBC,MAAO,EACPF,MAAO,EACPG,cAAc,GAGlB6G,EACA,kCACA,uBAAMzI,SAAU,CAAEsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAKoJ,EAAc,EAAGD,EAAM,GAAI5I,SAAU,CAAC,EAAE,GAAG7R,KAAKsR,GAAG,KAAtG,UACI,iCAAiBD,KAAM,CAAC0B,EAAOO,KAC/B,mCAAoBhD,IAAKxC,EAASyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE7F,uBAAMG,SAAU,GAAGsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAKoJ,EAAc,GAAGD,EAAM,GAAI5I,SAAU,CAAC,EAAE,EAAE7R,KAAKsR,GAAG,KAAtG,UACI,iCAAiBD,KAAM,CAAC0B,EAAOO,KAC/B,mCAAoBhD,IAAKxC,EAASyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,WAMjG,GAAqB,UAAlBhD,EAAS1M,KAAiB,CACzB,IAAM4Y,EAAS,IAAIjW,QACb+V,EAAShM,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAU6T,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAC3FoJ,EAAiBR,EAAS,EAAG,EACnCS,EAAO1H,QAAQyH,EAAc,GAC7BC,EAAOzH,QAAQwH,EAA+B,EAAhBA,GAC9BC,EAAOxH,kBAAkBuH,EAAc,EAAoB,EAAhBA,EAAoB,EAAkB,EAAhBA,GACjEC,EAAOxH,iBAAiBuH,EAAc,EAAmB,EAAhBA,EAAmBA,EAA+B,EAAhBA,GAC3EC,EAAOzH,OAAOwH,EAAc,GAE5B,IAAMpH,EAAkB,CACpBC,MAAO,EACPF,MAAO,EACPG,cAAc,GAGlB4G,EACA,kCACA,uBAAMxI,SAAU,CAAEsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAKoJ,EAAc,EAAGD,EAAM,GAAI5I,SAAU,CAAC,EAAE,GAAG7R,KAAKsR,GAAG,GAAtG,UACI,iCAAiBD,KAAM,CAACsJ,EAAQrH,KAChC,mCAAoBhD,IAAKxC,EAASyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE7F,uBAAMG,SAAU,GAAGsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAKoJ,EAAc,GAAGD,EAAM,GAAI5I,SAAU,CAAC,EAAE,EAAE7R,KAAKsR,GAAG,GAAtG,UACI,iCAAiBD,KAAM,CAACsJ,EAAQrH,KAChC,mCAAoBhD,IAAKxC,EAASyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,WAKjG,GAAqB,WAAlBhD,EAAS1M,KAAkB,CAC1B,IAAM6Y,EAAUV,EAAS,IACnBO,EAAShM,EAASrC,SAAWqC,EAAS5B,YAAexG,EAASuU,EAAWV,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAC3GgJ,EACA,kCACI,uBAAM1I,SAAU,EAAGsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAImJ,EAAM,GAAI5I,SAAU,CAAC,EAAE,EAAE7R,KAAKsR,GAAG,GAApF,UACI,gCAAgBD,KAAM,CAACuJ,EAAS,GAAI,GAAI,EAAG,EAAI5a,KAAKsR,GAAI,EAAGtR,KAAKsR,MAChE,mCAAoBhB,IAAKxC,EAASyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE7F,uBAAMG,SAAU,CAAEsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAImJ,EAAM,GAAI5I,SAAU,CAAC,EAAE,GAAG7R,KAAKsR,GAAG,GAApF,UACI,gCAAgBD,KAAM,CAACuJ,EAAS,GAAI,GAAI,EAAG,EAAI5a,KAAKsR,GAAI,EAAGtR,KAAKsR,MAChE,mCAAoBhB,IAAKxC,EAASyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,WAKrG,GAAIhD,EAAS3M,KAAK,CACd,IAAM+Y,EAAUpM,EAASrC,SAAS,EAC5BqO,EAAShM,EAASrC,SAAWqC,EAAS5B,YAAa,EACnDiO,EAASrM,EAASrC,SAAWqC,EAAS7B,WAAY,EAAY,IAARiO,EAC5D/Y,EACA,kCACI,uBAAM8P,SAAU,EAAGkJ,EAAOL,EAAM,GAAI5I,SAAU,CAAC,EAAE,EAAE7R,KAAKsR,GAAG,MAA3D,UACI,kCAAkBD,KAAM,CAACwJ,EAASA,EAAiB,IAARA,EAAa,MACxD,mCAAoBvK,IAAKxC,EAASyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE7F,uBAAMG,SAAU,CAACkJ,EAAML,EAAM,GAAI5I,SAAU,CAAC,EAAE,GAAG7R,KAAKsR,GAAG,MAAzD,UACI,kCAAkBD,KAAM,CAACwJ,EAASA,EAAiB,IAARA,EAAa,MACxD,mCAAoBvK,IAAKxC,EAASyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,WAKrG,IA9JwB2B,EAAKpW,EA8JvBsH,EAASmK,EAASjL,kBAClBkQ,GA/JkBN,EA+JgB3G,EAAW,EAAK,GA/J3BzP,EAFR,EAIb,uBAAM4U,SAAY,CAAC,EAAE5U,EAAO,GAA5B,UACI,kCAAkBqU,KAAM,CAAC+B,EAAKA,EAAK,IAAM,GAAI,GAAG,EAAK,EAAa,EAAVpT,KAAKsR,MAC7D,mCAAmB9T,MAAM,YAXb,EAwKCmW,mBAAS,GAxKV,oBAwKnBC,EAxKmB,KAwKbC,EAxKa,OAyKCF,mBAAS,GAzKV,oBAyKnBG,EAzKmB,KAyKbC,EAzKa,OA0KCJ,mBAAS,GA1KV,oBA0KnBK,EA1KmB,KA0KbC,GA1Ka,QA2KAN,mBAAS,GA3KT,sBA2KnBO,GA3KmB,MA2KdC,GA3Kc,MA6KlBC,GAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,GADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,GAAOlU,KAAKE,IAAIgU,GAAO,GAAG,KAC1BC,GAAWD,IACX,MACR,IAAK,IACGA,GAAOlU,KAAKuU,IAAIL,GAAO,EAAE,IACzBC,GAAWD,IACX,MACR,IAAK,IACGG,EAAMG,iBAENV,EAAQ,EACRE,EAAQ,EACRE,GAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,GAAWD,GACXG,GAAWD,MAgB3B,OATAtF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOqM,iBAAiB,UAAWL,IAG5B,WACHhM,OAAOsM,oBAAoB,UAAWN,OAE3C,IAGC,wBAAOxC,SAAU,CAAC,GAAG,EAAEsC,IAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAArD,UACI,iCACI,+BAAe3C,KAAM,CAAC/M,EAAQ,GAAI,EAAG,EAAEtE,KAAKsR,MAC5C,mCAAmBhB,IAAOxC,EAAUyD,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE/F,iCACI,+BAAeJ,KAAM,CAAC/M,EAAQ,GAAI,EAAG,EAAEtE,KAAKsR,MAC5C,mCAAmBhB,IAAOxC,EAAUyD,KAAQ7M,gBAE/CyV,EACAzG,EACkB,SAAlBjF,EAAS1M,MAAmBwY,EACV,UAAlB9L,EAAS1M,MAAoBqY,EACX,QAAlB3L,EAAS1M,MAAkBsY,EACT,WAAlB5L,EAAS1M,MAAqBuY,EAC9B7L,EAAS3M,MAAQA,QC7BfmO,gBAvMQ,WAAO,IAAD,EAEYjB,KAA/BP,EAFmB,EAEnBA,SAAUF,EAFS,EAETA,kBAElBY,qBAAU,WACRZ,EAAkB5E,QAAO,EAAM,SAC/B4E,EAAkBlD,oBAClBkD,EAAkB9E,SAAS,SAC1B,IAEH,IAqDMkL,EAAY,CAChB/C,SAAU,WACVtL,MAAO,OACPtJ,OAAQ,EAER4X,aAAc,EACd9J,gBAAiB,QAGnB,SAAS+J,EAAT,GAGI,IAAD,IAFDC,OAAUC,EAET,EAFSA,GAAIC,EAEb,EAFaA,MAAOC,EAEpB,EAFoBA,QACrBC,EACC,EADDA,eAEA,OACE,6CAAK/W,UAAY,QACfpB,MAAO,CACLoY,KAAK,GAAD,OAAKF,EAAL,KACJrD,SAAU,WACVwD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,YAENN,EAAeH,IAVrB,aAYE,qBAAKhY,MAAO,CAAE0Y,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGxD,SAAS,WAAY0D,OAAQ,EAAG9X,MAAO,QAAtH,SACGwX,OAMT,IAAMW,EAAkB,eAAC,KAAD,CAAQC,UAxCZ,CAClBhE,SAAU,WACVtL,MAAO,OACPtJ,OAAQ,IAqC8C6Y,OAAQ,CAAC,EAAG,IAAKC,KAAM,EAAGlN,KAAM,EAAGmN,OAAQ,CAACtH,EAASrC,UAAWqE,SAAU,SAACxK,GAAD,OAASwI,EAASjC,gBAAgBvG,EAAI,KAAhJ,UACtB,cAAC,KAAD,UACG,gBAAG+P,EAAH,EAAGA,aAAH,OACC,iCAAKjZ,MAAO4X,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAK/W,UAAU,iBAAf,SACG8X,EAAQ3F,KAAI,SAAAwE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAWlBgG,EAAc,qBAAK5c,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SACpB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASwI,EAASzB,YAAY/G,IACxCmQ,QA/GY,CACd,CACIC,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,YAwG3BC,qBAAsB9H,EAAS3M,KAAO,EAAI,EAC1CgJ,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAKpBuE,EAAc,qBAAK7c,UAAU,SAAUpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAArD,SACpB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASwI,EAAS1B,YAAY9G,IACxCmQ,QA/GmB,CACnB,CACIC,MAAO,gBACPrB,MAAO,OACPsB,wBAAyB,WACzB,CACAD,MAAO,gBACPrB,MAAO,SACPsB,wBAAyB,WACzB,CACAD,MAAO,gBACPrB,MAAO,MACPsB,wBAAyB,WACzB,CACAD,MAAO,gBACPrB,MAAO,QACPsB,wBAAyB,YAgG7BC,qBA5FW,CAAC,OAAQ,SAAU,MAAO,SA4FV0E,QAAL,UAAgBxM,EAAS1M,OAC/C+I,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,GACpBf,SAAU,OAINiB,EAAe,qBAAKxY,UAAU,SAASpB,MAAO,CAACuJ,MAAO,IAAKtJ,OAAQ,IAApD,SACjB,cAAC,KAAD,CACImZ,SAAU,SAAClQ,GAAD,OAASwI,EAASjM,aAAayD,IACzCmQ,QArGY,CAClB,CACIC,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,YA8FvBC,qBAAsB9H,EAAShM,MAAQ,EAAI,EAC3CqI,gBAAiB,UACjB0L,UAAW,UACXC,mBAAoB,OAI5B,OACE,mCACE,sBAAKtY,UAAU,YAAYpB,MAAO,CAAC6Z,WAAY,UAAWlZ,QAAS,OAAQ0R,cAAc,MAAO9I,MAAO,OAAQtJ,OAAQ,QAAvH,UACE,sBAAKmB,UAAU,gBAAgBpB,MAAO,CAAC6Z,WAAY,UAAWtQ,MAAO,MAAOtJ,OAAQ,OAAOE,MAAM,QAAjG,UACE,eAAC,KAAD,CAAQ2Z,OAAQ,CAACjF,SAAS,CAAC,EAAG,EAAG,IAAKkF,IAAI,GAAIC,OAAQ,IAAI,IAAKC,KAAM,GAAIC,IAAK,KAAOla,MAAO,CAAC6Z,WAAY,OAAQ5Z,OAAQ,QAAS4X,aAAa,GAAIS,UAAU,KAAMD,WAAW,KAAK9O,MAAM,OAAzL,UACE,2BAAWsL,SAAU,EAAE,IAAK,IAAK,IAAKsF,UAAa,MACnD,2BAAWtF,SAAU,CAAC,GAAI,GAAI,IAAKsF,UAAa,MAChD,2BAAWtF,SAAU,EAAE,KAAM,IAAK,KAAMsF,UAAa,KACrD,2BAAWtF,SAAU,CAAC,KAAM,IAAK,KAAMsF,UAAW,KAClD,2BAAWtF,SAAU,EAAE,GAAI,EAAG,IAAKsF,UAAW,KAC9C,cAAC,GAAD,CAAUzI,SAAUA,OAEtB,sBAAKtQ,UAAU,uBAAf,UACE,qBAAKpB,MAAO,CAACC,OAAQ,MACrB,uCAAS,qCAAT,MAA0B,qCAA1B,UAA+C,qCAA/C,0BAAoF,uBAAK,qCAAzF,QAA4G,qCAA5G,yBAAgJ,uBAAhJ,OAAyJ,yCAAzJ,kCACA,qBAAKD,MAAO,CAACC,OAAQ,YAGzB,sBAAKmB,UAAU,iBAAiBpB,MAAO,CAACuJ,MAAO,MAAOtJ,OAAQ,OAAQma,SAAU,UAAWja,MAAM,SAAjG,UACE,uBACA,mBAAGiB,UAAU,aAAb,mBACCwY,EACD,uBACA,mBAAGxY,UAAU,OAAb,2BACA,qBAAKpB,MAAO,CAACuJ,MAAM,MAAO8O,WAAW,MAArC,SACGO,IAEH,uBACA,mBAAGxX,UAAU,OAAb,kBACC4c,EACD,uBACA,mBAAG5c,UAAU,OAAb,kBACC6c,EACD,qBAAK7c,UAAU,cAAcpB,MAAO,CAACuJ,MAAO,GAAI8Q,aAAa,IAA7D,SACE,cAACza,EAAD,UACE,cAACC,EAAD,CAAYG,MAAO,CAAC6Z,WAAY,WAAYS,QAAS,kBAAM9I,EAAkB5E,UAAU7M,GAAG,aAA1F,SACE,mBAAGqB,UAAY,aAAf,mCCvED8R,gBAhII,SAAC5B,GAAW,IACpBC,EAAaD,EAAbC,UACD4M,EAAWC,iBAAO,IAClBC,EAAYD,iBAAO,IAEzBhM,qBAAU,WACN+L,EAAS7Q,QAAU6Q,EAAS7Q,QAAQpF,MAAM,EAAGqJ,EAAUzM,gBAAgB9B,QACvEqb,EAAU/Q,QAAU+Q,EAAU/Q,QAAQpF,MAAM,EAAGqJ,EAAUzM,gBAAgB9B,UACzE,IAEJoP,qBAAU,WAEN,IADA,IAAMkM,EAAM/M,EAAUzM,gBAAgB9B,OAC9BR,EAAI,EAAGA,EAAI8b,EAAK9b,GAAK,EACzB2b,EAAS7Q,QAAQ9K,GAAG+Q,KAAM,IAAI5L,iBAAsBwM,KAAK5C,EAAU3M,SAAS0Z,EAAI9b,EAAE,IAClF6b,EAAU/Q,QAAQ9K,GAAG+Q,KAAM,IAAI5L,iBAAsBwM,KAAK5C,EAAU3M,SAAS0Z,EAAI9b,EAAE,MAGxF,IAGH,IAAMmE,EAAW4K,EAAUlN,QAAQ,EAC7BuC,GAAe,EAAID,EACnBE,EAAe0K,EAAUlN,QAAQkN,EAAUtR,OAE3C6G,EAASyK,EAAU/N,KAAOqD,EAC1BE,EAAYwK,EAAU3N,QAAUiD,EAElC0T,EAAe,yBACfC,EAAkB,yBAClBC,EAAmB,yBAEnBlJ,EAAUrN,UACVqW,EAAe,uBAAM1F,SAAY,CAAC,EAAElO,EAAS,GAAI,GAAImO,SAAY,CAAC,KAAK,EAAE,GAA1D,UACf,+BAAeR,KAAM,CAAExN,EAAO,EAAG,GAAI,GAAI,GAAG,MAC5C,mCAAmBrG,MAAO8Q,EAAUjN,oBAGpCiN,EAAUpN,aACVqW,EAAkB,uBAAM3F,SAAY,CAAC,EAAEjO,EAAY,GAAI,GAAIkO,SAAY,CAAC,KAAK,EAAE,GAA7D,UAClB,+BAAeR,KAAM,CAAEvN,EAAU,EAAG,GAAK,GAAK,GAAI,MAClD,mCAAmBtG,MAAO8Q,EAAUjN,oBAIxC,IAAMiD,EAAS+L,mBAAQ,kBAAM/B,EAAU9K,iBAAgB,KAAO,CAAC8K,EAAUhO,KA5C/C,EA8CDqT,mBAAS,GA9CR,oBA8CrBC,EA9CqB,KA8CfC,EA9Ce,OA+CDF,mBAAS,GA/CR,oBA+CrBG,EA/CqB,KA+CfC,EA/Ce,OAgDDJ,mBAAS,GAhDR,oBAgDrBK,EAhDqB,KAgDfC,EAhDe,OAiDFN,mBAAS,GAjDP,oBAiDrBO,EAjDqB,KAiDhBC,EAjDgB,KAmDtB7F,EAAUnN,cACVqW,EAAmB,uBAAM5F,SAAY,CAAC,EAAEjO,EAAY,GAAjC,UACf,kCAAkB0N,KAAM,CAACvN,EAAU,EAAGA,EAAU,EAAG,GAAK,MACxD,mCAAmBtG,MAAO8Q,EAAUjN,oBAI5C,IAAM+S,EAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,EAAOlU,KAAKE,IAAIgU,EAAO,GAAG,KAC1BC,EAAWD,GACX,MACR,IAAK,IACGA,EAAOlU,KAAKuU,IAAIL,EAAO,EAAE,IACzBC,EAAWD,GACX,MACR,IAAK,IACGG,EAAMG,iBAENV,EAAQ,EACRE,EAAQ,EACRE,EAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,EAAWD,GACXG,EAAWD,KAe3B,OATAtF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOqM,iBAAiB,UAAWL,GAG5B,WACHhM,OAAOsM,oBAAoB,UAAWN,MAE3C,IAGC,wBAAOxC,SAAU,CAAC,EAAE,EAAEsC,GAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAApD,UACI,kCACC1P,EAAOgM,KAAI,SAACgL,EAAG/b,GAAJ,OACR,iCACI,+BAAe8R,KAAM,CAAC/M,EAAO/E,GAAI,GAAI,EAAG,EAAES,KAAKsR,MAC/C,mCAAmBiK,IAAK,SAAAC,GAAE,OAAIN,EAAS7Q,QAAQ9K,GAAKic,GAAIjK,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,OAFxGlS,MAKd+E,EAAOgM,KAAI,SAACgL,EAAG/b,GAAJ,OACR,iCACI,+BAAe8R,KAAM,CAAC/M,EAAO/E,GAAI,GAAI,EAAG,EAAES,KAAKsR,MAC/C,qCAAqBiK,IAAK,SAAAC,GAAE,OAAIJ,EAAU/Q,QAAQ9K,GAAKic,GAAIjK,KAAQ7M,eAF5DnF,SAMd+O,EAAUrN,SAAWqW,EACrBhJ,EAAUpN,YAAcqW,EACxBjJ,EAAUnN,aAAeqW,QCgIvBvH,gBA3PE,SAAC5B,GAAW,IAClBI,EAAYJ,EAAZI,SACDyM,EAAWC,iBAAO,IAClBC,EAAYD,iBAAO,IAEzBhM,qBAAU,WACN+L,EAAS7Q,QAAU6Q,EAAS7Q,QAAQpF,MAAM,EAAGwJ,EAAS5M,gBAAgB9B,OAAO,GAC7Eqb,EAAU/Q,QAAU+Q,EAAU/Q,QAAQpF,MAAM,EAAGwJ,EAAS5M,gBAAgB9B,OAAO,KAC/E,IAEJoP,qBAAU,WAEN,IADA,IAAMkM,EAAM5M,EAAS5M,gBAAgB9B,OAAO,EACpCR,EAAI,EAAGA,EAAI8b,EAAK9b,GAAK,EACzB2b,EAAS7Q,QAAQ9K,GAAG+Q,KAAM,IAAI5L,iBAAsBwM,KAAKzC,EAAS9M,SAASpC,IAC3E6b,EAAU/Q,QAAQ9K,GAAG+Q,KAAM,IAAI5L,iBAAsBwM,KAAKzC,EAAS9M,SAASpC,MAGjF,IAEH,IAAMkc,EAAepL,mBAAQ,kBAAM,IAAI3L,iBAAsBwM,KAAKzC,EAAS9M,SAAS8M,EAAS9M,SAAS5B,OAAO,MAAK,IAI5Gma,EADYzL,EAASrC,SAAWqC,EAAS7B,WAAY,EACjC5M,KAAKmS,KAAK,EAFlB,IAEiCnS,KAAKsR,IAClDjL,EAAS6T,EAASla,KAAKiS,KAAK,EAHhB,IAG+BjS,KAAKsR,IAAM,GAEtDoK,EAAOjN,EAASvB,iBALJ,GAKqBlN,KAAKsR,IAEtCqK,EACN,kCACKD,EAAKpL,KAAI,SAACgL,EAAG/b,GAAJ,OACN,uBAAcqS,SAAU,CAAC,EAAGnD,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAO,GAA/E,UACI,gCAAgBgL,KAAM,CAAC6I,EAAU,GAAI,GAAI,EAAG,EAAIla,KAAKsR,GAAIoK,EAAKnc,GAAG,GAAImc,EAAKnc,GAAG,MAC7E,mCAAmBgc,IAAK,SAAAC,GAAE,OAAIN,EAAS7Q,QAAQ9K,GAAKic,GAAIjK,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,OAFxGlS,MAKdmc,EAAKpL,KAAI,SAACgL,EAAG/b,GAAJ,OACN,uBAAcqS,SAAU,CAAC,EAAGnD,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAO,GAA/E,UACI,gCAAgBgL,KAAM,CAAC6I,EAAU,GAAI,GAAI,EAAG,EAAIla,KAAKsR,GAAIoK,EAAKnc,GAAG,GAAImc,EAAKnc,GAAG,MAC7E,mCAAmBgc,IAAK,SAAAC,GAAE,OAAIJ,EAAU/Q,QAAQ9K,GAAKic,GAAIjK,KAAM7M,eAFxDnF,SAOf6a,EAAa,yBACbC,EAAW,yBACXC,EAAc,yBACdC,EAAY,yBACZzY,EAAO,yBAEL8W,EAlDkB,kDAmDpB,WAAYC,GAAQ,IAAD,8BACjB,gBACKA,MAAQA,EAFI,EAnDC,qDAuDXvZ,GACP,IAAMkb,EAAKxa,KAAKiS,IAAI,EAAIjS,KAAKsR,GAAKhS,GAC5BwZ,EAAK9Y,KAAKE,KAAK,GAAKF,KAAKmS,IAAI,EAAInS,KAAKsR,GAAKhS,IAEjD,OAAO,IAAIoF,UAAc8V,EAAI1B,EADlB,GAC0BE,eAAeC,KAAKJ,WA3DvC,GAkDQnU,SAahC,GAAqB,SAAlB+J,EAAS1M,KAAgB,CACxB,IAAMmX,EAAagB,EAAS,EACtBf,EAAO,IAAIP,EAAkBM,GAE7BE,EAAWpZ,KAAKuU,IAAI,GAAK2E,EAAW,GAGpCuB,EAAShM,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAS6S,EAAW,EAAKgB,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAEhHiJ,EACA,kCACA,uBAAM3I,SAAU,GAAGsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAK4H,EAAW,GAAGuB,EAAM,GAAI5I,SAAU,CAAC,EAAE,EAAE7R,KAAKsR,GAAG,GAAnG,UACI,8BAAcD,KAAM,CAAC8H,EATZ,GASwBC,EAPpB,EACF,SAOX,mCAAmB5b,MAAOiR,EAASpN,cAAekQ,KAAQ7M,iBAE9D,uBAAMkN,SAAU,CAAEsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAK4H,EAAW,EAAGuB,EAAM,GAAI5I,SAAU,CAAC,EAAE,GAAG7R,KAAKsR,GAAG,GAAnG,UACI,8BAAcD,KAAM,CAAC8H,EAbZ,GAawBC,EAXpB,EACF,SAWX,mCAAoB5b,MAAOiR,EAASpN,cAAekQ,KAAQ7M,oBAKnE,GAAqB,QAAlB+J,EAAS1M,KAAe,CACvB,IAAMgR,EAAQ,IAAIrO,QACZ+V,EAAShM,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAU6T,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAC3FoJ,EAAiBR,EAAS,IAAK,EACrCnH,EAAME,QAAQyH,EAAc,GAC5B3H,EAAMI,kBAAkBuH,EAAc,IAAqB,IAAhBA,EAAqB,EAAkB,IAAhBA,GAClE3H,EAAMI,iBAAiBuH,EAAc,IAAqB,IAAhBA,EAAqBA,EAAc,GAC7E3H,EAAMG,QAAQwH,EAAc,GAE5B,IAAMpH,EAAkB,CACpBC,MAAO,EACPF,MAAO,EACPG,cAAc,GAGlB6G,EACA,kCACA,uBAAMzI,SAAU,CAAEsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAKoJ,EAAc,EAAGD,EAAM,GAAI5I,SAAU,CAAC,EAAE,GAAG7R,KAAKsR,GAAG,KAAtG,UACI,iCAAiBD,KAAM,CAAC0B,EAAOO,KAC/B,mCAAoB9V,MAAOiR,EAASpN,cAAekQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE9G,uBAAMG,SAAU,GAAGsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAKoJ,EAAc,GAAGD,EAAM,GAAI5I,SAAU,CAAC,EAAE,EAAE7R,KAAKsR,GAAG,KAAtG,UACI,iCAAiBD,KAAM,CAAC0B,EAAOO,KAC/B,mCAAoB9V,MAAOiR,EAASpN,cAAekQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,WAMlH,GAAqB,UAAlBhD,EAAS1M,KAAiB,CACzB,IAAM4Y,EAAS,IAAIjW,QACb+V,EAAShM,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAU6T,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAC3FoJ,EAAiBR,EAAS,EAAG,EACnCS,EAAO1H,QAAQyH,EAAc,GAC7BC,EAAOzH,QAAQwH,EAA+B,EAAhBA,GAC9BC,EAAOxH,kBAAkBuH,EAAc,EAAoB,EAAhBA,EAAoB,EAAkB,EAAhBA,GACjEC,EAAOxH,iBAAiBuH,EAAc,EAAmB,EAAhBA,EAAmBA,EAA+B,EAAhBA,GAC3EC,EAAOzH,OAAOwH,EAAc,GAE5B,IAAMpH,EAAkB,CACpBC,MAAO,EACPF,MAAO,EACPG,cAAc,GAGlB4G,EACA,kCACA,uBAAMxI,SAAU,CAAEsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAKoJ,EAAc,EAAGD,EAAM,GAAI5I,SAAU,CAAC,EAAE,GAAG7R,KAAKsR,GAAG,GAAtG,UACI,iCAAiBD,KAAM,CAACsJ,EAAQrH,KAChC,mCAAoB9V,MAAOiR,EAASpN,cAAekQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE9G,uBAAMG,SAAU,GAAGsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAKoJ,EAAc,GAAGD,EAAM,GAAI5I,SAAU,CAAC,EAAE,EAAE7R,KAAKsR,GAAG,GAAtG,UACI,iCAAiBD,KAAM,CAACsJ,EAAQrH,KAChC,mCAAoB9V,MAAOiR,EAASpN,cAAekQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,WAKlH,GAAqB,WAAlBhD,EAAS1M,KAAkB,CAC1B,IAAM6Y,EAAUV,EAAS,IACnBO,EAAShM,EAASrC,SAAWqC,EAAS5B,YAAexG,EAASuU,EAAWV,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAC3GgJ,EACA,kCACI,uBAAM1I,SAAU,EAAGsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAImJ,EAAM,GAAI5I,SAAU,CAAC,EAAE,EAAE7R,KAAKsR,GAAG,GAApF,UACI,gCAAgBD,KAAM,CAACuJ,EAAS,GAAI,GAAI,EAAG,EAAI5a,KAAKsR,GAAI,EAAGtR,KAAKsR,MAChE,mCAAoB9T,MAAOiR,EAASpN,cAAekQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE9G,uBAAMG,SAAU,CAAEsI,EAAWla,KAAKiS,IAAIjS,KAAKsR,GAAG,GAAImJ,EAAM,GAAI5I,SAAU,CAAC,EAAE,GAAG7R,KAAKsR,GAAG,GAApF,UACI,gCAAgBD,KAAM,CAACuJ,EAAS,GAAI,GAAI,EAAG,EAAI5a,KAAKsR,GAAI,EAAGtR,KAAKsR,MAChE,mCAAoB9T,MAAOiR,EAASpN,cAAekQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,WAKtH,GAAIhD,EAAS3M,KAAK,CACd,IAAM+Y,EAAUpM,EAASrC,SAAS,EAC5BqO,EAAShM,EAASrC,SAAWqC,EAAS5B,YAAa,EACnDiO,EAASrM,EAASrC,SAAWqC,EAAS7B,WAAY,EAAY,IAARiO,EAC5D/Y,EACA,kCACI,uBAAM8P,SAAU,EAAGkJ,EAAOL,EAAM,GAAI5I,SAAU,CAAC,EAAE,EAAE7R,KAAKsR,GAAG,MAA3D,UACI,kCAAkBD,KAAM,CAACwJ,EAASA,EAAiB,IAARA,EAAa,MACxD,mCAAoBrd,MAAOiR,EAASpN,cAAekQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAE9G,uBAAMG,SAAU,CAACkJ,EAAML,EAAM,GAAI5I,SAAU,CAAC,EAAE,GAAG7R,KAAKsR,GAAG,MAAzD,UACI,kCAAkBD,KAAM,CAACwJ,EAASA,EAAiB,IAARA,EAAa,MACxD,mCAAoBrd,MAAOiR,EAASpN,cAAekQ,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,WAKtH,IAAMnN,EAASmK,EAASjL,kBAhLA,EAkLCmQ,mBAAS,GAlLV,oBAkLnBC,EAlLmB,KAkLbC,EAlLa,OAmLCF,mBAAS,GAnLV,oBAmLnBG,EAnLmB,KAmLbC,EAnLa,OAoLCJ,mBAAS,GApLV,oBAoLnBK,EApLmB,KAoLbC,EApLa,OAqLAN,mBAAS,GArLT,qBAqLnBO,GArLmB,MAqLdC,GArLc,MAuLlBC,GAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,GAAOlU,KAAKE,IAAIgU,GAAO,GAAG,KAC1BC,GAAWD,IACX,MACR,IAAK,IACGA,GAAOlU,KAAKuU,IAAIL,GAAO,EAAE,IACzBC,GAAWD,IACX,MACR,IAAK,IACGG,EAAMG,iBAENV,EAAQ,EACRE,EAAQ,EACRE,GAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,EAAWD,GACXG,GAAWD,MAgB3B,OATAtF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOqM,iBAAiB,UAAWL,IAG5B,WACHhM,OAAOsM,oBAAoB,UAAWN,OAE3C,IAGC,wBAAOxC,SAAU,CAAC,GAAG,EAAEsC,IAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAArD,UACI,iCACI,+BAAe3C,KAAM,CAAC/M,EAAQ,GAAI,EAAG,EAAEtE,KAAKsR,MAC5C,mCAAmBhB,IAAOmL,EAAelK,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,QAEpG,iCACI,+BAAeJ,KAAM,CAAC/M,EAAQ,GAAI,EAAG,EAAEtE,KAAKsR,MAC5C,mCAAmBhB,IAAOmL,EAAelK,KAAQ7M,gBAEpDiX,EACkB,SAAlBlN,EAAS1M,MAAmBwY,EACV,UAAlB9L,EAAS1M,MAAoBqY,EACX,QAAlB3L,EAAS1M,MAAkBsY,EACT,WAAlB5L,EAAS1M,MAAqBuY,EAC9B7L,EAAS3M,MAAQA,QChBfmO,gBAtOM,SAAC5B,GAAW,IACtBG,EAAeH,EAAfG,YACD0M,EAAWC,iBAAO,IAClBC,EAAYD,iBAAO,IAEzBhM,qBAAU,WACN+L,EAAS7Q,QAAU6Q,EAAS7Q,QAAQpF,MAAM,EAAGuJ,EAAY3M,gBAAgB9B,QACzEqb,EAAU/Q,QAAU+Q,EAAU/Q,QAAQpF,MAAM,EAAGuJ,EAAY3M,gBAAgB9B,UAC3E,IAEJoP,qBAAU,WAEN,IADA,IAAMkM,EAAM7M,EAAY3M,gBAAgB9B,OAChCR,EAAI,EAAGA,EAAI8b,EAAK9b,GAAK,EACzB2b,EAAS7Q,QAAQ9K,GAAG+Q,KAAM,IAAI5L,iBAAsBwM,KAAK1C,EAAY7M,SAAS0Z,EAAI9b,EAAE,IACpF6b,EAAU/Q,QAAQ9K,GAAG+Q,KAAM,IAAI5L,iBAAsBwM,KAAK1C,EAAY7M,SAAS0Z,EAAI9b,EAAE,MAG1F,IAEH,IAAMmE,EAAW8K,EAAYpN,QAAQ,EAC/BuC,GAAe,EAAID,EACnBE,EAAe4K,EAAYpN,QAAQoN,EAAYxR,OAE/C6G,EAAS7D,KAAKE,IAAI,EAAEsO,EAAYjO,KAAOqD,GACvCE,EAAY9D,KAAKE,IAAI,EAAEsO,EAAY7N,QAAUiD,GAE/C0T,EAAe,yBACfC,EAAkB,yBAClBzC,EAAS,yBACT9S,EAAM,yBACNE,EAAe,yBACfsV,EAAmB,yBACnBkB,EAAgB,yBAepB,GAbIlK,EAAYvN,UACZqW,EAAe,uBAAM1F,SAAY,CAAC,EAAElO,EAAS,GAAI,GAAImO,SAAY,CAAC,KAAK,EAAE,GAA1D,UACf,+BAAeR,KAAM,CAAExN,EAAO,EAAG,IAAK,IAAK,GAAG,MAC9C,mCAAmBrG,MAAOgR,EAAYnN,oBAGtCmN,EAAYtN,aACZqW,EAAkB,uBAAM3F,SAAY,CAAC,EAAEjO,EAAY,GAAI,GAAIkO,SAAY,CAAC,KAAK,EAAE,GAA7D,UAClB,+BAAeR,KAAM,CAAEvN,EAAU,EAAG,IAAM,IAAM,GAAI,MACpD,mCAAmBtG,MAAOgR,EAAYnN,oBAItCmN,EAAYvM,WAAW,CACvB,IAAM0W,EAAoB,EAAV3Y,KAAKsR,GACfjE,EAAY,GAAMrN,KAAKsR,GACvBlE,EAAwB,IAAVpN,KAAKsR,GAEzBwD,EACA,kCACI,uBAAMlD,SAAU,CAAC,EAAElO,EAAS,GAAImO,SAAU,EAAE7R,KAAKsR,GAAG,EAAE,EAAE,GAAxD,UACI,gCAAgBD,KAAM,CAACxN,EAAO,EAAG,GAAI,GAAI,EAAG8U,EAASvL,EAAaC,KAClE,mCAAmB7P,MAAOgR,EAAYnN,cAAekQ,KAAQ7M,iBAEjE,uBAAMkN,SAAU,CAAC,EAAElO,EAAS,GAAKmO,SAAU,EAAE7R,KAAKsR,GAAG,EAAE,EAAE,GAAzD,UACI,gCAAgBD,KAAM,CAACxN,EAAO,EAAG,GAAI,GAAI,EAAG8U,EAASvL,EAAaC,KAClE,mCAAmB7P,MAAOgR,EAAYnN,cAAekQ,KAAQ7M,mBAKrE8J,EAAYrN,cACZqW,EAAmB,uBAAM5F,SAAY,CAAC,EAAEjO,EAAY,GAAjC,UACf,kCAAkB0N,KAAM,CAACvN,EAAU,EAAGA,EAAU,EAAG,GAAK,MACxD,mCAAmBtG,MAAOgR,EAAYnN,oBApElB,IAwEtBuX,EAxEsB,kDAyExB,WAAYC,GAAQ,IAAD,8BACjB,gBACKA,MAAQA,EAFI,EAzEK,qDA6EfvZ,GACP,IACMwZ,EAAK9Y,KAAKE,KAAK,GAAKF,KAAKmS,IAAI,EAAInS,KAAKsR,GAAKhS,IAC3CyZ,EAAK/Y,KAAKiS,IAAI,EAAIjS,KAAKsR,GAAKhS,GAClC,OAAO,IAAIoF,UAHA,EAGkBoU,EAAIC,GAAIC,eAAeC,KAAKJ,WAjFnC,GAwEInU,SAahC,GAAI8J,EAAYtM,aAAa,CACzB,IAAMgX,EAAarV,EAAO,EACpBsV,EAAO,IAAIP,EAAkBM,GAE7BE,EAAWpZ,KAAKuU,IAAI,GAAK2E,EAAW,IAI1ChX,EACA,kCACA,uBAAM0P,SAAU,EAAG/N,EAAO,EAAa,EAATuV,EAAa1V,EAAW0V,EAAY,GAAIF,EAAa,GAAnF,UACI,8BAAc7H,KAAM,CAAC8H,EARZ,GAQwBC,EANpB,EACF,SAMX,mCAAmB5b,MAAOgR,EAAYnN,cAAekQ,KAAQ7M,iBAEjE,uBAAMkN,SAAU,CAAE/N,EAAO,EAAa,EAATuV,EAAa1V,EAAW0V,EAAY,GAAIF,EAAa,GAAlF,UACI,8BAAc7H,KAAM,CAAC8H,EAZZ,GAYwBC,EAVpB,EACF,SAUX,mCAAmB5b,MAAOgR,EAAYnN,cAAekQ,KAAQ7M,oBAKrE,GAAI8J,EAAYxM,IAAI,CAChB,IACMqX,EAAc,IACdC,EAFY,EAEDzV,EAAmB,EAAK7D,KAAKmS,IAAInS,KAAKsR,GAAK+H,GACtDE,EAAW7V,EAHC,EAGWG,EAAkB,EAAK7D,KAAKwZ,IAAIxZ,KAAKsR,GAAK+H,GACjEI,EAASH,EAAQ,GACjBI,EAAYH,EAAWD,EAAUG,EAAS,GAEhDzX,EACA,kCACI,uBAAM4P,SAAU,CAAC,EAAE2H,EAAS,GAAI,GAAhC,UACI,gCAAgBlI,KAAM,CAACiI,EAAS,GAAI,GAAI,EAAa,EAAVtZ,KAAKsR,GAAQ,EAAGtR,KAAKsR,GAAK+H,KACrE,mCAAmB7b,MAAOgR,EAAYnN,cAAekQ,KAAQ7M,iBAEjE,uBAAMkN,SAAU,CAAC,EAAE2H,EAAS,GAA5B,UACI,gCAAgBlI,KAAM,CAACiI,EAAS,GAAI,GAAI,EAAa,EAAVtZ,KAAKsR,GAAQ,EAAGtR,KAAKsR,GAAK+H,KACrE,mCAAmB7b,MAAOgR,EAAYnN,cAAekQ,KAAQ7M,gBAEjE,uBAAMkN,SAAU,CAAC,EAAE8H,EAAU,GAA7B,UACI,gCAAgBrI,KAAM,CAACoI,EAAQ,GAAI,MACnC,mCAAmBjc,MAAOgR,EAAYnN,cAAekQ,KAAQ7M,oBAKzE,IAAK8J,EAAYrN,YAAY,CACzB,IAAMwY,EAAiB,GACjBC,EAAc9V,EAAU,EAAK9D,KAAKmS,IAAInS,KAAKsR,GAAKqI,GAChDE,EAAclW,EAAeG,EAAU,EAAK9D,KAAKwZ,IAAIxZ,KAAKsR,GAAKqI,GAErEjB,EAAgB,kCAChB,uBAAM9G,SAAU,CAAC,EAAEiI,EAAY,GAAI,GAAnC,UACI,gCAAgBxI,KAAM,CAACuI,EAAY,GAAI,GAAI,EAAa,EAAV5Z,KAAKsR,GAAQ,EAAGtR,KAAKsR,GAAKqI,KACxE,mCAAmBnc,MAAOgR,EAAYnN,cAAekQ,KAAM7M,iBAE/D,uBAAMkN,SAAU,CAAC,EAAEiI,EAAY,GAAI,GAAnC,UACI,gCAAgBxI,KAAM,CAACuI,EAAY,GAAI,GAAI,EAAa,EAAV5Z,KAAKsR,GAAQ,EAAGtR,KAAKsR,GAAKqI,KACxE,mCAAmBnc,MAAOgR,EAAYnN,cAAekQ,KAAQ7M,mBAMrE,IAAMJ,EAAS+L,mBAAQ,kBAAM7B,EAAYhL,iBAAgB,KAAO,CAACgL,EAAYlO,KArJjD,EAuJHqT,mBAAS,GAvJN,oBAuJvBC,EAvJuB,KAuJjBC,EAvJiB,OAwJHF,mBAAS,GAxJN,oBAwJvBG,EAxJuB,KAwJjBC,EAxJiB,OAyJHJ,mBAAS,GAzJN,oBAyJvBK,EAzJuB,KAyJjBC,EAzJiB,OA0JJN,mBAAS,GA1JL,oBA0JvBO,GA1JuB,KA0JlBC,GA1JkB,KA4JtBC,GAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,GAAOlU,KAAKE,IAAIgU,GAAO,GAAG,KAC1BC,GAAWD,IACX,MACR,IAAK,IACGA,GAAOlU,KAAKuU,IAAIL,GAAO,EAAE,IACzBC,GAAWD,IACX,MACR,IAAK,IACGG,EAAMG,iBAENV,EAAQ,EACRE,EAAQ,EACRE,GAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,EAAWD,GACXG,GAAWD,MAe3B,OATAtF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOqM,iBAAiB,UAAWL,IAG5B,WACHhM,OAAOsM,oBAAoB,UAAWN,OAE3C,IAGC,wBAAOxC,SAAU,CAAC,GAAG,EAAEsC,IAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAArD,UACI,kCACC1P,EAAOgM,KAAI,SAACgL,EAAG/b,GAAJ,OACR,iCACI,+BAAe8R,KAAM,CAAC/M,EAAO/E,GAAI,GAAI,EAAG,EAAES,KAAKsR,MAC/C,mCAAmBiK,IAAK,SAAAC,GAAE,OAAIN,EAAS7Q,QAAQ9K,GAAKic,GAAIjK,KAAM7M,YAAiB8M,SAAS,UAAUC,UAAa,OAFxGlS,MAKd+E,EAAOgM,KAAI,SAACgL,EAAG/b,GAAJ,OACR,iCACI,+BAAe8R,KAAM,CAAC/M,EAAO/E,GAAI,GAAI,EAAG,EAAES,KAAKsR,MAC/C,mCAAmBiK,IAAK,SAAAC,GAAE,OAAIJ,EAAU/Q,QAAQ9K,GAAKic,GAAIjK,KAAQ7M,eAF1DnF,SAMdiP,EAAYxM,KAAOA,EACnBwM,EAAYvN,SAAWqW,EACvB9I,EAAYtN,YAAcqW,EAC1B/I,EAAYvM,YAAc6S,EAC1BtG,EAAYtM,cAAgBA,EAC5BsM,EAAYrN,aAAeqW,GAC1BhJ,EAAYrN,aAAeuX,QCrO1B,OAA0B,yCCA1B,OAA0B,yC,SCuG1BzI,gBAzFA,WAAO,IAIhB2L,EAJe,EACsD5M,KAAlET,EADY,EACZA,kBAAmBD,EADP,EACOA,UAAWI,EADlB,EACkBA,UAAWF,EAD7B,EAC6BA,YAAaC,EAD1C,EAC0CA,SAEvDoN,EAAYV,mBAgDlB,MA9CgC,SAA5B5M,EAAkBlO,QAAkBub,EAAatN,GACrB,SAA5BC,EAAkBlO,MAAkBub,EAAalN,EAChB,QAA5BH,EAAkBlO,MAAiBub,EAAanN,EACpB,WAA5BF,EAAkBlO,QAAoBub,EAAapN,GAC5DoN,EAAWvY,gBAAgBkL,EAAkB/F,cAC7CoT,EAAWxY,gBAEX+L,qBAAU,WAUR,IATA,IAAMnE,EAAS6Q,EAAUxR,QACnByR,EAAU9Q,EAAO+Q,WAAW,MAI5BC,EAAU,GAEVC,EAAa1N,EAAkB/F,aAE5BjJ,EAAI,EAAGA,EAAIgP,EAAkBtF,iBAAiBlJ,OAAQR,IAAI,CACjE,IAAM2c,EAAYN,EAAW/Z,gBAAgBtC,GAAG,GAC1C4c,EAAaP,EAAW/Z,gBAAgBtC,GAAG,GACjDyL,EAAO1E,MAAQ4V,EAAYF,EAC3BhR,EAAOhO,OAASmf,EAAaH,EAC7BF,EAAQM,UAAYH,EACpBH,EAAQO,SAAS,EAAG,EAAGrR,EAAO1E,MAAO0E,EAAOhO,QAC5C,IAAK,IAAIyH,EAAI,EAAGA,EAAI0X,EAAY1X,IAAI,CAClC,IAAI4B,EAAS,EACb,GAAIkI,EAAkBtF,iBAAiB1J,GAAGwH,mBAAmBtC,GAAG4B,OAAO,CACrEA,EAbgB2V,GAchB,IAAMM,EAAW/N,EAAkBtF,iBAAiB1J,GAAGwH,mBAAmBtC,GAAG2B,QAAQrG,OACrF+b,EAAQM,UAAY7N,EAAkBtF,iBAAiB1J,GAAGwH,mBAAmBtC,GAAG2B,QAAQkW,EAAS,GAAG7W,WACpGqW,EAAQO,SAAS,EAAGL,EAAUvX,EAhBduX,GAgBgCA,GAElD,IAAK,IAAIO,EAAI,EAAGA,EAAIL,EAAWK,IACzBhO,EAAkBtF,iBAAiB1J,GAAGwH,mBAAmBtC,GAAG2B,QAAQmW,GAAG9W,aAAewW,IAC1FH,EAAQM,UAAY7N,EAAkBtF,iBAAiB1J,GAAGwH,mBAAmBtC,GAAG2B,QAAQmW,GAAG9W,WAC3FqW,EAAQO,SAAUL,EAAUO,EAAKlW,EAAQ2V,EAAUvX,EAAGuX,EAASA,IAGnE,IAAIlO,EAAU9C,EAAOC,UAAU,YAAa,GAC5C2Q,EAAW1Y,SAAS4K,GAEtBS,EAAkB5E,OAAO,WACxB,IAMD,cADA,CACA,OAAKxL,UAAU,YAAYpB,MAAO,CAAC6Z,WAAY,UAAWlZ,QAAS,OAAQ0R,cAAc,MAAO9I,MAAO,OAAQtJ,OAAQ,SAAvH,UACE,sBAAKmB,UAAU,gBAAgBpB,MAAO,CAAC6Z,WAAY,UAAWtQ,MAAO,MAAOtJ,OAAQ,OAAOE,MAAM,QAAjG,UACI,eAAC,KAAD,CAAQ2Z,OAAQ,CAACjF,SAAS,CAAC,EAAG,EAAG,IAAKkF,IAAI,GAAIC,OAAQ,IAAI,IAAKC,KAAM,GAAIC,IAAK,KAAOla,MAAO,CAAC6Z,WAAY,OAAQ5Z,OAAQ,MAAO4X,aAAa,GAAIS,UAAU,KAAMD,WAAW,KAAK9O,MAAM,OAAvL,UACE,2BAAWsL,SAAU,EAAE,IAAK,IAAK,IAAKsF,UAAa,KACnD,2BAAWtF,SAAU,CAAC,IAAK,GAAI,IAAKsF,UAAa,KACjD,2BAAWtF,SAAU,EAAE,KAAM,IAAK,KAAMsF,UAAa,KACrD,2BAAWtF,SAAU,CAAC,KAAM,IAAK,KAAMsF,UAAW,KAClD,2BAAWtF,SAAU,EAAE,GAAI,EAAG,IAAKsF,UAAW,KACjB,SAA5B3I,EAAkBlO,OAAoB,cAAC,GAAD,CAAYiO,UAAWA,IACjC,SAA5BC,EAAkBlO,OAAoB,cAAC,GAAD,CAAMqO,UAAWA,EAAW9E,QAAQ,IAC9C,QAA5B2E,EAAkBlO,OAAmB,cAACmc,GAAD,CAAgB/N,SAAUA,IACnC,WAA5BF,EAAkBlO,OAAsB,cAAC,GAAD,CAAcmO,YAAaA,OAExE,sBAAKrQ,UAAU,mBAAf,UACI,qBAAKpB,MAAO,CAACC,OAAQ,MACrB,uCAAS,qCAAT,MAA0B,qCAA1B,UAA+C,qCAA/C,0BAAoF,uBAAK,qCAAzF,QAA4G,qCAA5G,yBAAgJ,uBAAhJ,OAAyJ,yCAAzJ,kCACA,qBAAKD,MAAO,CAACC,OAAQ,YAG3B,sBAAKmB,UAAU,iBAAiBpB,MAAO,CAACuJ,MAAO,MAAOtJ,OAAQ,OAAQma,SAAU,UAAWja,MAAM,QAASU,WAAW,SAAUD,eAAe,SAAUiU,SAAU,YAAlK,UACE,wBAAQ7U,MAAO,CAACW,QAAQ,QAAS6d,IAAKM,IACtC,qBAAKxe,IAAK,GAAIF,IAAKsf,GAAate,UAAU,SAASpB,MAAO,CAACsY,UAAW,KACtE,qBAAKlX,UAAY,cACfkZ,QAAS,kBAAM9I,EAAkBrD,eADnC,SAEE,oBAAG/M,UAAY,iBAAf,UAAgC,+BAAM,cAAC,KAAD,CAAY0K,KAAM,OAAxD,0BAA2F,+BAAM,cAAC,KAAD,CAAYA,KAAM,YAMrH,qBAAKxL,IAAK,GAAIF,IAAKuf,GAAave,UAAU,sBC/CnCwe,GAhCF,WAAO,IAEXpO,EAAqBS,KAArBT,kBAEP,OACA,sBAAKpQ,UAAU,aAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgb,KAAK,SAASyD,UAAW/e,IAChC,cAAC,IAAD,CAAOsb,KAAK,UAAUyD,UAAW1N,KACjC,cAAC,IAAD,CAAOiK,KAAK,SAASyD,UAAW9e,IAChC,cAAC,IAAD,CAAOqb,KAAK,WAAWyD,UAAW7e,IAClC,cAAC,IAAD,CAAOob,KAAK,WAAWyD,UAAWnN,KAClC,cAAC,IAAD,CAAO0J,KAAK,UAAUyD,UAAWlN,KACjC,cAAC,IAAD,CAAOyJ,KAAK,SAASyD,UAAW5M,KAChC,cAAC,IAAD,CAAOmJ,KAAK,eAAeyD,UAAWC,KACtC,cAAC,IAAD,CAAO1D,KAAK,eAAeyD,UAAWE,KACtC,cAAC,IAAD,CAAO3D,KAAK,iBAAiByD,UAAWG,KACxC,cAAC,IAAD,CAAO5D,KAAK,mBAAmByD,UAAWI,KAE1C,cAAC,IAAD,CAAO7D,KAAK,UAAZ,SACmC,UAAhC5K,EAAkBjF,UAAwB,cAAC,IAAD,CAAUxM,GAAG,YAAc,cAAC,GAAD,MAExE,cAAC,IAAD,CAAOqc,KAAK,IAAIyD,UAAWnf,UAG/B,mBAAGV,MAAO,CAACqa,aAAc,GAAI/B,UAAW,GAAI/X,cAAe,IAAKE,MAAO,UAAWkY,SAAS,IAA3F,+C,UC+BWzF,I,oBAAAA,aAxED,SAAC5B,GAAW,IACjB4O,EAAuB5O,EAAvB4O,WAAYzX,EAAW6I,EAAX7I,QAEnB,SAAS0X,IACP,IAAI1f,EAAQgI,EAAQC,WAAW0X,UAAU,EAAG,GAI5C,MAAc,KAHNxR,SAASnO,EAAM2f,UAAU,EAAG,GAAI,IAGZ,KAFpBxR,SAASnO,EAAM2f,UAAU,EAAG,GAAI,IAEE,KADlCxR,SAASnO,EAAM2f,UAAU,EAAG,GAAI,IACY,GAClD,UAAY,UAmBhB,SAASC,IACPH,EAAWlT,aACXvE,EAAQK,cAAcoX,EAAW1U,eAC7B/C,EAAQC,aAAeD,EAAQE,WACjCuX,EAAW3R,cAAc9F,EAAQE,SAAUF,EAAQC,YACnDD,EAAQO,YAAYP,EAAQC,aAE9BD,EAAQQ,mBAAkB,GAsB5B,OA7CAmJ,qBAAU,WACR8N,EAAW7R,QACX6R,EAAWnR,sBAAqB,KAC/B,IAEHqD,qBAAU,WACJ8N,EAAWtU,OACbsU,EAAWnR,sBAAqB,GAChCtG,EAAQK,cAAcoX,EAAWzU,eAE3BhD,EAAQC,aAAewX,EAAWxU,aACxCwU,EAAWnR,uBACXtG,EAAQK,cAAcoX,EAAWzU,iBAElC,CAACyU,EAAWzU,eAgCb,qBACErK,UAAU,QACVkZ,QAAS+F,EACTC,aAjBJ,WACE7X,EAAQO,YAAYP,EAAQC,YAC5BD,EAAQK,cAAcoX,EAAW1U,gBAgB/B+U,aAbJ,WACM9X,EAAQG,gBACVH,EAAQK,cAAcL,EAAQE,UAGhCF,EAAQQ,mBAAkB,IASxBuX,YAzBJ,WACMN,EAAWrU,MACbwU,KAwBArgB,MAAO,CAAE6Z,WAAYpR,EAAQC,WAAYyX,YAAaA,IAAeM,YAAa,SANpF,SAQGhY,EAAQI,UAAY,qBAAKzH,UAAU,WAAWpB,MAAO,CAACS,MAAO0f,KAAzC,qB,OCnEZ,SAASO,GAAapP,GAAQ,IACpCqP,EAA8CrP,EAA9CqP,GAAIC,EAA0CtP,EAA1CsP,IAAKC,EAAqCvP,EAArCuP,UAAWrX,EAA0B8H,EAA1B9H,cAAesX,EAAWxP,EAAXwP,QAE1C,OAAIH,EACEE,EAEA,qBACEzf,UAAU,iBADZ,SAEC,oBAAGpB,MAAO,CAACsY,WAAY,EAAGK,SAAU,GAAIN,YAAa,IAAKxD,SAAS,WAAYgF,WAAY,UAAWkH,YAAa,IAAKC,aAAa,IAAKnJ,aAAa,EAAGpX,MAAM,SAAhK,cAA4KogB,OAG3KC,EAEA,qBAAK1f,UAAU,iBAMf,qBAAKA,UAAU,mBAOjBoI,EAEA,qBACEpI,UAAU,iBADZ,SAGE,mBAAGpB,MAAO,CAAC2Y,SAAS,EAAGN,WAAY,EAAGC,WAAW,GAAKzD,SAAS,YAA/D,SAA6ErL,MAM/E,qBACEpI,UAAU,kBADZ,SAGE,mBAAGpB,MAAO,CAAC2Y,SAAS,GAAIN,WAAY,EAAGC,WAAY,EAAGzD,SAAS,YAA/D,SAA6E+L,MCpCvF,IAqBe1N,gBArBH,SAAC5B,GAAW,IACf4O,EAAwB5O,EAAxB4O,WAAY9W,EAAYkI,EAAZlI,SACf6X,EAAS,GAIb,GAFAA,EAAOle,KAAK,cAAC2d,GAAD,CAAuBC,IAAI,EAAOnX,cAAeJ,EAASI,gBAAtC,IAED,GAA3BJ,EAASC,QAAQrG,OACnB,IAAK,IAAIR,EAAI,EAAGA,EAAI4G,EAASG,MAAO/G,IAClC4G,EAASM,QAGb,IAAK,IAAIlH,EAAI,EAAGA,EAAI4G,EAASG,MAAO/G,IAC/B0d,EAAWrX,UAAUO,EAASC,QAAQ7G,GAAG2G,cAC5C8X,EAAOle,KAAK,cAAC,GAAD,CAAemd,WAAYA,EAAYzX,QAASW,EAASC,QAAQ7G,IAArDA,IAK1B,OAFAye,EAAOle,KAAK,cAAC2d,GAAD,CAAmCC,IAAI,EAAOnX,cAAeJ,EAASI,eAAnDJ,EAASG,QAEjC,qBAAKvJ,MAAO,CAACqY,WAAYjP,EAASE,QAASlI,UAAU,MAArD,SAA4D6f,O,OCrBtD,SAASC,GAAW5P,GAAQ,IACjC/H,EAA6C+H,EAA7C/H,MAAOD,EAAsCgI,EAAtChI,OAAQ6X,EAA8B7P,EAA9B6P,WAAYC,EAAkB9P,EAAlB8P,cAE/BH,EAAS,GAEPI,EAAUD,GAAgCD,EAC5ClS,EAAQ,EAEZgS,EAAOle,KAAK,cAAC2d,GAAD,CAAuBC,IAAI,EAAOC,IAAK,KAAnB,IAEhC,IAAK,IAAIpe,EAAI,EAAGA,EAAI+G,EAAO/G,IACrBA,KAAK6e,EACW,GAAdA,EAAQ7e,IACVyM,GAAS,EACTgS,EAAOle,KAAK,cAAC2d,GAAD,CAAsBC,IAAI,EAAME,UAAW5R,GAAxBzM,MAET,GAAf6e,EAAQ7e,GACfye,EAAOle,KAAK,cAAC2d,GAAD,CAAsBC,IAAI,EAAMG,SAAS,GAAtBte,IAExBA,GAAK+G,EAAM,GAAmB,GAAd8X,EAAQ7e,GAC/Bye,EAAO,GAAK,cAACP,GAAD,CAAsBC,IAAI,GAAPne,GAG/Bye,EAAOle,KAAK,cAAC2d,GAAD,CAAsBC,IAAI,GAAPne,IAI/Bye,EAAOle,KAAK,cAAC2d,GAAD,CAAsBC,IAAI,EAAOC,IAAOpe,EAAE,GAAvBA,IAIrC,OAAO,qBAAKxC,MAAO,CAACqY,WAAY/O,GAASlI,UAAU,aAA5C,SAA0D6f,IC/BnE,IA6Ee/N,gBA7EQ,SAAC5B,GAAW,IAC1B4O,EAAwB5O,EAAxB4O,WAAYrX,EAAYyI,EAAZzI,SADa,EAGI+N,mBAASsJ,EAAWzU,cAHxB,oBAGzB/C,EAHyB,KAGbI,EAHa,OAIA8N,mBAASlO,GAJT,oBAIzBC,EAJyB,KAIfK,EAJe,OAKY4N,oBAAS,GALrB,oBAKzBhO,EALyB,KAKTK,EALS,KAOhC,SAASkX,IACP,IAAI1f,EAAQiI,EAAW0X,UAAU,EAAG,GAIpC,MAAc,KAHNxR,SAASnO,EAAM2f,UAAU,EAAG,GAAI,IAGZ,KAFpBxR,SAASnO,EAAM2f,UAAU,EAAG,GAAI,IAEE,KADlCxR,SAASnO,EAAM2f,UAAU,EAAG,GAAI,IACY,GAClD,UAAY,UAoBhB,SAASC,IACPH,EAAWlT,aACXlE,EAAcoX,EAAW1U,eACrB9C,GAAcC,IAChBuX,EAAW3R,cAAc5F,EAAUD,GACnCM,EAAYN,IAEdO,GAAkB,GAsBpB,OA9CAmJ,qBAAU,WACR8N,EAAW7R,QACX6R,EAAWnR,sBAAqB,KAC/B,IAEHqD,qBAAU,WACJ8N,EAAWtU,OACbsU,EAAWnR,sBAAqB,GAAM,GACtCjG,EAAcoX,EAAWzU,eAEnB/C,GAAcwX,EAAWxU,aAC/BwU,EAAWnR,uBACXjG,EAAcoX,EAAWzU,iBAE1B,CAACyU,EAAWzU,eAiCb,qBACErK,UAAU,QACVkZ,QAAS+F,EACTC,aAjBJ,WACEtX,EAAYN,GACZI,EAAcoX,EAAW1U,gBAgBvB+U,aAbJ,WACM3X,GACFE,EAAcH,GAGhBM,GAAkB,IAShBuX,YAzBJ,WACMN,EAAWrU,MACbwU,KAwBArgB,MAAO,CAAE6Z,WAAYnR,EAAYa,MAAO,GAAI4W,YAAaA,IAAeM,YAAa,SANvF,SAQG5X,GAAY,qBAAKzH,UAAU,WAAWpB,MAAO,CAACS,MAAO0f,KAAzC,oBCpDJjN,gBAhBM,SAAC5B,GAAW,IACxBgQ,EAAsDhQ,EAAtDgQ,KAAMpB,EAAgD5O,EAAhD4O,WAAYqB,EAAoCjQ,EAApCiQ,MAAOjY,EAA6BgI,EAA7BhI,OAAQ3I,EAAqB2Q,EAArB3Q,QAASkI,EAAYyI,EAAZzI,SAC7CoY,EAAS,GAEVtgB,GAASsgB,EAAOle,KAAK,cAAC2d,GAAD,CAAuBC,IAAI,EAAOnX,cAAe7I,IAA7B,IAE5C,IAAK,IAAI6B,EAAI,EAAGA,EAAI+e,EAAO/e,IACzBye,EAAOle,KAAK,cAAC,GAAD,CAAwBmd,WAAYA,EAAYrX,SAAUA,GAArCrG,IAKnC,OAFK8e,GAAML,EAAOle,KAAK,cAAC2d,GAAD,CAA0BC,IAAI,EAAOnX,cAAe7I,GAAjC4gB,IAEnC,qBAAKvhB,MAAO,CAACqY,WAAY/O,GAASlI,UAAU,MAA5C,SAAmD6f,OCmB7C/N,gBA7BS,SAAC5B,GASvB,IATkC,IAC3BgQ,EAA0EhQ,EAA1EgQ,KAAME,EAAoElQ,EAApEkQ,QAASjY,EAA2D+H,EAA3D/H,MAAO2W,EAAoD5O,EAApD4O,WAAYuB,EAAwCnQ,EAAxCmQ,UAAWC,EAA6BpQ,EAA7BoQ,gBAAiB7Y,EAAYyI,EAAZzI,SAE/D8Y,EAAWvD,mBAEbwD,EAAO,GAIFpf,EAAI,EAAGA,EAAI+G,EAAO/G,IAAK,CAC9B,IAAIqf,EAAc,MAAgBtY,EAAM/G,EAAE,GACtCsf,EAAaL,EAAUlY,EAAM/G,EAC5Bkf,IACClf,EAAI+G,EAAQ,EAAGsY,EAAc,MAAgBtY,EAAM/G,EAAE,GACpDsf,GAAa,GAEpBF,EAAK7e,KAAK,cAAC,GAAD,CAAsBue,KAAMA,EAAMC,MAAO/e,EAAE,EAAG8G,OAAQuY,EAAY3B,WAAYA,EAAYvf,QAASmhB,EAAYjZ,SAAUA,GAAtGrG,IAG/B,OACE,qBAAKwV,GAAG,kBAAR,SACE,sBAAKA,GAAG,SAASwG,IAAKmD,EAAU3hB,MAAO,CAACqa,aAAc,EAAGhC,WAAY,EAAG7X,YAAY,GAApF,UACGghB,GAAW,mBAAGxJ,GAAG,OAAN,SAAcwJ,IACzBI,UCuDM1O,gBA7EQ,SAAC5B,GAAW,IAC1BkQ,EAAuElQ,EAAvEkQ,QAASL,EAA8D7P,EAA9D6P,WAAYC,EAAkD9P,EAAlD8P,cAAelB,EAAmC5O,EAAnC4O,WAAYnW,EAAuBuH,EAAvBvH,oBAEjD4X,EAAWvD,mBAEbwD,EAAO,GACPG,EAAY,GAEhB,GAAyB,SAArB7B,EAAW5c,MACb,GAAI4c,EAAWjU,eAAe,CAC5B,IAAM+V,EAAa,EAAI/e,KAAKqF,MAAM,KAAQyB,EAAoBR,OACxD0Y,EAAYlY,EAAoBR,MAAS,EAAIyY,EAC7CE,EAAcjf,KAAKkf,KAAKF,EAAU,GAClCG,EAAanf,KAAKof,MAAMJ,EAAU,GAClCK,EAAQ,cAAC,GAAD,CAAyBhB,MAAM,EAAM/X,MAAOyY,EAAY9B,WAAYA,EAAYuB,UAAW1X,EAAoB9J,OAAQyhB,iBAAiB,GAAlH,GAC9Ba,EAAQ,cAAC,GAAD,CAAyBjB,MAAM,EAAM/X,MAAOyY,EAAY9B,WAAYA,EAAYuB,UAAW1X,EAAoB9J,QAAzF,GAC9BuiB,EAAQ,cAAC,GAAD,CAAyBlB,MAAM,EAAM/X,MAAO2Y,EAAahC,WAAYA,EAAYuB,UAAW1X,EAAoB9J,QAA1F,GAC9BwiB,EAAO,cAAC,GAAD,CAAyBnB,MAAM,EAAM/X,MAAO6Y,EAAYlC,WAAYA,EAAYuB,UAAW1X,EAAoB9J,OAAQ4I,UAAU,GAA3G,GACnCkZ,EAAUhf,KAAKuf,EAAOE,EAAOD,EAAOE,OAEjC,CACH,IAAMT,EAAa/e,KAAKqF,MAAM,IAAOyB,EAAoBR,OAEnD2Y,EADYnY,EAAoBR,MAAQyY,EACd,EAC1BV,EAAO,cAAC,GAAD,CAAyBA,MAAM,EAAM/X,MAAOyY,EAAY9B,WAAYA,EAAYuB,UAAW1X,EAAoB9J,OAAQyhB,iBAAiB,EAAM7Y,UAAU,GAAlI,GAC7B2Z,EAAQ,cAAC,GAAD,CAAyBlB,MAAM,EAAM/X,MAAO2Y,EAAahC,WAAYA,EAAYuB,UAAW1X,EAAoB9J,OAAQyhB,iBAAiB,GAAnH,GACpCK,EAAUhf,KAAKue,EAAMkB,GAMzB,GAFwB,QAApBtC,EAAW5c,OAAiBse,EAAK7e,KAAK,cAACme,GAAD,CAAqB5X,OAAQ,EAAGC,MAAOQ,EAAoBR,MAAO4X,WAAYA,IAA5D,IAEP,IAAlDpX,EAAoBC,mBAAmBhH,OACxC,IAAK,IAAIR,EAAI,EAAGA,EAAIuH,EAAoB9J,OAAQuC,IAC9CuH,EAAoBG,SAGxB,IAAK,IAAI1H,EAAI,EAAGA,EAAIuH,EAAoB9J,OAAQuC,IAC9CuH,EAAoBC,mBAAmBxH,GAAGqH,SAASE,EAAoBR,OACvEQ,EAAoBC,mBAAmBxH,GAAGsH,iBAAiBC,EAAoB9J,OAAOuC,GAClFA,EAAE,IAAM,GACVuH,EAAoBC,mBAAmBxH,GAAGoH,YAC1CgY,EAAK7e,KAAK,cAAC,GAAD,CAAamd,WAAYA,EAAY9W,SAAUW,EAAoBC,mBAAmBxH,IAA5EA,KAGpBof,EAAK7e,KAAK,cAAC,GAAD,CAAamd,WAAYA,EAAY9W,SAAUW,EAAoBC,mBAAmBxH,IAA5EA,IAmBxB,OAfGuH,EAAoBE,WACjBF,EAAoB9J,OAAO,IAAM,EACnC2hB,EAAK7e,KAAK,cAACme,GAAD,CAA6C5X,OAAQ,KAAMC,MAAOQ,EAAoBR,MAAO6X,cAAeA,GAA3FrX,EAAoB9J,SAE/C2hB,EAAK7e,KAAK,cAACme,GAAD,CAA6C5X,OAAQ,GAAQC,MAAOQ,EAAoBR,MAAO6X,cAAeA,GAA7FrX,EAAoB9J,SAI7C8J,EAAoB9J,OAAO,IAAM,EACnC2hB,EAAK7e,KAAK,cAACme,GAAD,CAA6C5X,OAAQ,EAAGC,MAAOQ,EAAoBR,MAAO6X,cAAeA,GAAxFrX,EAAoB9J,SAE/C2hB,EAAK7e,KAAK,cAACme,GAAD,CAA6C5X,OAAQ,KAAMC,MAAOQ,EAAoBR,MAAO6X,cAAeA,GAA3FrX,EAAoB9J,SAKjD,qBAAK+X,GAAG,iBAAR,SACE,sBAAKA,GAAG,SAASwG,IAAKmD,EAAU3hB,MAAO,CAACqa,aAAc,GAAIhC,WAAY,GAAI7X,YAAa,IAAvF,UACwB,SAArB0f,EAAW5c,OAAoB,qBAAKtD,MAAO,CAACW,QAAQ,OAAQE,WAAW,WAAYwX,WAAY,KAAMgC,aAAc,EAAGzZ,eAAe,cAAtG,SAC7BmhB,IAEFP,GAAW,mBAAGxJ,GAAG,OAAN,SAAcwJ,IACzBI,UCuDM1O,gBApIO,SAAC5B,GAAW,IACvBkQ,EAAmClQ,EAAnCkQ,QAASkB,EAA0BpR,EAA1BoR,WAAYxC,EAAc5O,EAAd4O,WAEtByC,EAAYvE,mBAEdnU,EAAa,GACbkX,EAAa,GACbC,EAAgB,GAEpB,GAAyB,SAArBlB,EAAW5c,MACb6d,EAAayB,MAAMF,EAAW1f,QAAQ6f,KAAK,IAC3CzB,EAAgBwB,MAAMF,EAAW1f,QAAQ6f,KAAK,QAE3C,CACCH,EAAWA,EAAW1f,OAAO,GAAG,GAAG0f,EAAWA,EAAW1f,OAAO,GAAG,GAAK,GAAGkd,EAAW/W,cAE1F,IAAK,IAAI3G,EAAIkgB,EAAW1f,OAAO,EAAGR,GAAK,EAAGA,IAAI,CAC5C,IAAIsgB,EAAW,GACXC,EAAc,GAEZC,EAAON,EAAWlgB,EAAE,GAAG,GAEzBygB,EADSP,EAAWlgB,GAAG,GACXwgB,EAEZE,EAAa,EACbjB,EAAY,EACZkB,EAAU,EACd,GAAa,IAATF,EACF9B,EAAayB,MAAMF,EAAW1f,QAAQ6f,KAAK,IAC3CzB,EAAgBwB,MAAMF,EAAW1f,QAAQ6f,KAAK,SAE3C,GAAII,EAAO,EAAE,CAChBF,EAAe,CAACK,EAAG,EAAGC,EAAG,EAAGC,GAAI,GAEhCrB,GADAiB,EAAaF,EAAQ,EAAIC,IACC,EAAIC,EAAaD,EAAOD,EAAKC,EACvDE,EAAUlgB,KAAKof,MAAMa,EAAWD,GAEhC,IADA,IAAIM,EAAcX,MAAMK,GAAMJ,KAAKM,GAC1B3gB,EAAI,EAAGA,EAAI,EAAGA,IAErB,IADA,IAAI4F,EAAI5F,EACD4F,EAAI6a,GAAQhB,EAAY,GAC7BsB,EAAYnb,IAAM,EAClB6Z,GAAa,EACb7Z,GAAK,EAKT,IAFA,IAAI5F,EAAI,EACJ0M,EAAM,EACJ1M,EAAIygB,GACRH,EAAS5T,GAAO,EAChB4T,EAAS5T,EAAI,IAAM,EACnBA,GAAOqU,EAAY/gB,GAAK,EACxBA,GAAK,EAGP,IADA,IAAI+c,EAAW,EACN/c,EAAI,EAAGA,EAAI+gB,EAAYvgB,OAAO,EAAGR,IACxCugB,EAAYxD,EAAWgE,EAAY/gB,GAAK,GAAK,EAC7CugB,EAAYxD,EAAWgE,EAAY/gB,GAAK,GAAK,EAC7CugB,EAAYxD,EAAWgE,EAAY/gB,GAAK,IAAM,EAC9C+c,EAAWA,EAAWgE,EAAY/gB,GAAK,EAEzC2e,EAAWre,QAAQggB,GACnB1B,EAActe,QAAQigB,GACtB9Y,EAAWnH,SAAQ,OAEhB,CACHigB,EAAc,CAACK,EAAG,EAAGC,GAAI,GAGzBpB,GADAiB,EAAaF,EAAQ,GADrBC,IAAQ,IAEiBA,EACzBE,EAAUlgB,KAAKof,MAAMa,EAAWD,GAEhC,IADA,IAAIM,EAAcX,MAAMK,GAAMJ,KAAKM,GAC1B3gB,EAAI,EAAGA,EAAI,EAAGA,IAErB,IADA,IAAI4F,EAAI5F,EACD4F,EAAI6a,GAAQhB,EAAY,GAC7BsB,EAAYnb,IAAM,EAClB6Z,GAAa,EACb7Z,GAAK,EAKT,IAFA,IAAI5F,EAAI,EACJ0M,EAAM,EACJ1M,EAAIygB,GACRH,EAAS5T,GAAO,EAChB4T,EAAS5T,EAAI,GAAK,EAClB4T,EAAS5T,EAAI,IAAM,EACnBA,GAAOqU,EAAY/gB,GAAK,EACxBA,GAAK,EAGP,IADA,IAAI+c,EAAW,EACN/c,EAAI,EAAGA,EAAI+gB,EAAYvgB,OAAO,EAAGR,IACxCugB,EAAYxD,EAAWgE,EAAY/gB,GAAK,GAAK,EAC7CugB,EAAYxD,EAAWgE,EAAY/gB,GAAK,IAAM,EAC9C+c,EAAWA,EAAWgE,EAAY/gB,GAAK,EAEzC2e,EAAWre,QAAQggB,GACnB1B,EAActe,QAAQigB,GACtB9Y,EAAWnH,SAAQ,IAGE,QAArBod,EAAW5c,QACb6d,EAAWA,EAAWne,OAAO,GAAK,GAClCoe,EAAcA,EAAcpe,OAAO,GAAK,IAE1Cme,EAAWre,QAAQ,IACnBse,EAAcre,KAAK,IACnBkH,EAAWlH,MAAK,GAGlB,IAAIygB,EAAW,GAEf,GAA0C,GAAtCtD,EAAWhU,iBAAiBlJ,OAC9B,IAAK,IAAIR,EAAI,EAAGA,EAAIkgB,EAAW1f,OAAQR,IACrC0d,EAAW9R,oBAGf,IAAK,IAAI5L,EAAI,EAAGA,EAAIkgB,EAAW1f,OAAQR,IAAK,CAC1C0d,EAAWhU,iBAAiB1J,GAAG2H,eAAeuY,EAAWlgB,GAAG,GAAIkgB,EAAWlgB,GAAG,IAC9E0d,EAAWhU,iBAAiB1J,GAAG6H,cAAcJ,EAAWzH,IACxD,IAAIgf,GAAU,EACW,QAArBtB,EAAW5c,OAAmBd,IAAMkgB,EAAW1f,OAAO,IAAGwe,EAAU,iBACvEgC,EAASzgB,KAAK,cAAC,GAAD,CAAwBye,QAASA,EAASL,WAAcA,EAAW3e,GAAI4e,cAAiBA,EAAc5e,GAAI0d,WAAYA,EAAYnW,oBAAqBmW,EAAWhU,iBAAiB1J,IAA9JA,IAErC,OACE,qBAAKwV,GAAG,gBAAR,SACE,sBAAKA,GAAG,WAAWwG,IAAKmE,EAAxB,UACE,mBAAG3K,GAAG,OAAN,SAAcwJ,IACbgC,U,4DClII,OAA0B,gCCA1B,OAA0B,oCCA1B,OAA0B,iCCqB1BC,I,OAbH,SAACnS,GAAW,IACbmB,EAA6BnB,EAA7BmB,KAAMiR,EAAuBpS,EAAvBoS,KAAMlC,EAAiBlQ,EAAjBkQ,QAASmC,EAAQrS,EAARqS,KAC5B,OACI,sBAAKviB,UAAU,SAAf,UACI,mBAAG4W,GAAG,OAAN,SAAcwJ,IACbkC,GAAQ,qBAAKtjB,IAAKwjB,GAAWxiB,UAAU,SACtCsiB,IAASjR,GAAS,qBAAKrS,IAAKyjB,GAAgBziB,UAAU,aACvDqR,GAAQ,qBAAKrS,IAAK0jB,GAAY1iB,UAAU,SACzC,oBAAG4W,GAAG,OAAN,UAAc2L,EAAd,kBC2CGzQ,gBApDiB,SAAC5B,GAAW,IACnCyS,EAAmFzS,EAAnFyS,IAAKzY,EAA8EgG,EAA9EhG,KAAM0Y,EAAwE1S,EAAxE0S,MAAO7C,EAAiE7P,EAAjE6P,WAAYC,EAAqD9P,EAArD8P,cAAenX,EAAsCqH,EAAtCrH,WAAYiW,EAA0B5O,EAA1B4O,WAAYwC,EAAcpR,EAAdoR,WAExEd,EAAO,GACP/Y,GAAW,EAEf,GAAKmb,EAIH,IAFA,IAAMC,EAAYhhB,KAAKof,MAAqB,GAAfK,EAAW,IAClCwB,EAAWxB,EAAW,GAAKuB,EACxBzhB,EAAI,EAAGA,EAAI0hB,EAAU1hB,IAC5Bof,EAAK7e,KAAK,cAAC,GAAD,CAAsCwe,MAAO0C,EAAUzhB,EAAG8G,OAAQ,MAAM4a,EAAS1hB,GAAI0d,WAAYA,EAAYvf,QAAS+hB,EAAW,GAAGwB,EAAS1hB,EAAGqG,SAAUA,GAAvI6Z,EAAW,GAAG,EAAElgB,SALrCof,EAAK7e,KAAK,cAACme,GAAD,CAAqB5X,OAAQ,EAAGC,MAAOmZ,EAAW,GAAIvB,WAAYA,IAAhD,IAUxC,IAAK,IAAI3e,EAAI,EAAGA,EAAIkgB,EAAW,GAAIlgB,IAEjC,GAD8BqG,KAA9Bkb,GAAOvhB,GAAKkgB,EAAW,GAAG,GACtBlgB,EAAE,GAAK,EAAE,CACX,IAAI+e,EAAQmB,EAAW,GACnBpX,IAAMiW,GAAS,GACnBK,EAAK7e,KAAK,cAAC,GAAD,CAAsBwe,MAAOA,EAAOjY,OAAQ,KAAM4W,WAAYA,EAAYvf,QAAS+hB,EAAW,GAAGlgB,EAAGqG,SAAUA,GAA3FrG,SAG7Bof,EAAK7e,KAAK,cAAC,GAAD,CAAsBwe,MAAOmB,EAAW,GAAIpZ,OAAQ,EAAG4W,WAAYA,EAAYvf,QAAS+hB,EAAW,GAAGlgB,EAAGqG,SAAUA,GAAhGrG,IAmBjC,OAfGyH,EACGyY,EAAW,GAAG,GAAK,EACrBd,EAAK7e,KAAK,cAACme,GAAD,CAAgC5X,OAAQ,KAAMC,MAAOmZ,EAAW,GAAItB,cAAeA,GAAlEsB,EAAW,KAEtCd,EAAK7e,KAAK,cAACme,GAAD,CAAgC5X,OAAQ,GAAQC,MAAOmZ,EAAW,GAAItB,cAAeA,GAApEsB,EAAW,KAIpCA,EAAW,GAAG,GAAK,EACrBd,EAAK7e,KAAK,cAACme,GAAD,CAAgC5X,OAAQ,EAAGC,MAAOmZ,EAAW,GAAItB,cAAeA,GAA/DsB,EAAW,KAEtCd,EAAK7e,KAAK,cAACme,GAAD,CAAgC5X,OAAQ,KAAMC,MAAOmZ,EAAW,GAAItB,cAAeA,GAAlEsB,EAAW,KAKxC,qBAAK1K,GAAG,iBAAR,SACE,qBAAKA,GAAG,SAAShY,MAAO,CAACqa,aAAc,GAAIhC,WAAY,GAAI7X,YAAa,IAAxE,SACGohB,SC0DM1O,gBA3GgB,SAAC5B,GAO5B,IAPuC,IAChCoR,EAA0BpR,EAA1BoR,WAAYxC,EAAc5O,EAAd4O,WAEfjW,EAAa,GACbkX,EAAa,GACbC,EAAgB,GAEX5e,EAAIkgB,EAAW1f,OAAO,EAAGR,GAAK,EAAGA,IAAI,CAC5C,IAAIsgB,EAAW,GACXC,EAAc,GAEZC,EAAON,EAAWlgB,EAAE,GAAG,GAEzBygB,EADSP,EAAWlgB,GAAG,GACXwgB,EAEZE,EAAa,EACbjB,EAAY,EACZkB,EAAU,EAEd,GAAY,GAARF,EACF9B,EAAayB,MAAMF,EAAW1f,QAAQ6f,KAAK,IAC3CzB,EAAgBwB,MAAMF,EAAW1f,QAAQ6f,KAAK,SAE3C,GAAII,EAAO,EAAE,CAChBF,EAAe,CAACK,EAAG,EAAGC,EAAG,EAAGC,GAAI,GAEhCrB,GADAiB,EAAaF,EAAQ,EAAIC,IACC,EAAIC,EAAaD,EAAOD,EAAKC,EACvDE,EAAUlgB,KAAKof,MAAMa,EAAWD,GAEhC,IADA,IAAIM,EAAcX,MAAMK,GAAMJ,KAAKM,GAC1B3gB,EAAI,EAAGA,EAAI,EAAGA,IAErB,IADA,IAAI4F,EAAI5F,EACD4F,EAAI6a,GAAQhB,EAAY,GAC7BsB,EAAYnb,IAAM,EAClB6Z,GAAa,EACb7Z,GAAK,EAKT,IAFA,IAAI5F,EAAI,EACJ0M,EAAM,EACJ1M,EAAIygB,GACRH,EAAS5T,GAAO,EAChB4T,EAAS5T,EAAI,IAAM,EACnBA,GAAOqU,EAAY/gB,GAAK,EACxBA,GAAK,EAGP,IADA,IAAI+c,EAAW,EACN/c,EAAI,EAAGA,EAAI+gB,EAAYvgB,OAAO,EAAGR,IACxCugB,EAAYxD,EAAWgE,EAAY/gB,GAAK,GAAK,EAC7CugB,EAAYxD,EAAWgE,EAAY/gB,GAAK,GAAK,EAC7CugB,EAAYxD,EAAWgE,EAAY/gB,GAAK,IAAM,EAC9C+c,EAAWA,EAAWgE,EAAY/gB,GAAK,EAEzC2e,EAAWre,QAAQggB,GACnB1B,EAActe,QAAQigB,GACtB9Y,EAAWnH,SAAQ,OAEhB,CACHigB,EAAc,CAACK,EAAG,EAAGC,GAAI,GAGzBpB,GADAiB,EAAaF,EAAQ,GADrBC,IAAQ,IAEiBA,EACzBE,EAAUlgB,KAAKof,MAAMa,EAAWD,GAEhC,IADA,IAAIM,EAAcX,MAAMK,GAAMJ,KAAKM,GAC1B3gB,EAAI,EAAGA,EAAI,EAAGA,IAErB,IADA,IAAI4F,EAAI5F,EACD4F,EAAI6a,GAAQhB,EAAY,GAC7BsB,EAAYnb,IAAM,EAClB6Z,GAAa,EACb7Z,GAAK,EAKT,IAFA,IAAI5F,EAAI,EACJ0M,EAAM,EACJ1M,EAAIygB,GACRH,EAAS5T,GAAO,EAChB4T,EAAS5T,EAAI,GAAK,EAClB4T,EAAS5T,EAAI,IAAM,EACnBA,GAAOqU,EAAY/gB,GAAK,EACxBA,GAAK,EAGP,IADA,IAAI+c,EAAW,EACN/c,EAAI,EAAGA,EAAI+gB,EAAYvgB,OAAO,EAAGR,IACxCugB,EAAYxD,EAAWgE,EAAY/gB,GAAK,GAAK,EAC7CugB,EAAYxD,EAAWgE,EAAY/gB,GAAK,IAAM,EAC9C+c,EAAWA,EAAWgE,EAAY/gB,GAAK,EAEzC2e,EAAWre,QAAQggB,GACnB1B,EAActe,QAAQigB,GACtB9Y,EAAWnH,SAAQ,IAGvBqe,EAAWre,QAAQ,IACnBse,EAAcre,KAAK,IACnBkH,EAAWlH,MAAK,GAIhB,IAFA,IAAIygB,EAAW,GAENhhB,EAAI,EAAGA,EAAIkgB,EAAW1f,OAAQR,IACrCghB,EAASzgB,KAAK,cAAC,GAAD,CAAiCoe,WAAcA,EAAW3e,GAAI4e,cAAiBA,EAAc5e,GAAIyH,WAAYA,EAAWzH,GAAI0d,WAAYA,EAAYwC,WAAYA,EAAWlgB,IAA7IA,IAE9C,OACE,qBAAKwV,GAAG,gBAAR,SACGwL,OC/EMW,GAvBA,SAAC7S,GAAW,IAChB8S,EAAmC9S,EAAnC8S,KAAY5C,GAAuBlQ,EAA7BqS,KAA6BrS,EAAvBkQ,SAAStB,EAAc5O,EAAd4O,WACxBmE,EAAS,wBACT3B,EAAa,GAYjB,OAVI0B,GACA1B,EAAa,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAClC2B,EAAS,cAAC,GAAD,CAAwB3B,WAAYA,EAAYxC,WAAYA,MAIrEwC,EAAa,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAClC2B,EAAS,cAAC,GAAD,CAAwB3B,WAAYA,EAAYxC,WAAYA,KAIrE,gCACI,mBAAGlI,GAAG,OAAN,SAAcwJ,IACb6C,MCLEC,GAbH,SAAChT,GAAW,IACbkQ,EAA6BlQ,EAA7BkQ,QAAetB,GAAc5O,EAApBxF,KAAoBwF,EAAd4O,YAEhBmE,EAAS,cAAC,GAAD,CAAyBN,KAAK,EAAM5C,WAAc,GAAIC,cAAiB,GAAIlB,WAAYA,EAAYwC,WAD/F,CAAC,GAAG,KAGvB,OACI,gCACI,mBAAG1K,GAAG,OAAN,SAAcwJ,IACb6C,MCoBEE,GA5BO,SAACjT,GAAW,IACvBkQ,EAA6BlQ,EAA7BkQ,QAAS1V,EAAoBwF,EAApBxF,KAAMoU,EAAc5O,EAAd4O,WAClBmE,EAAS,wBACTG,EAAK,EACLC,EAAO,EACPC,EAAW,EAcf,MAXe,aAAXlD,EAEA6C,EAAS,cAAC,GAAD,CAAyBL,OAAO,EAAM1Y,MAAM,EAAM6V,WAAY,GAAIC,cAAe,GAAIlB,WAAYA,EAAYwC,WAAY,CAAC5W,EAAK,OAGxI0Y,EAAU,GAAL1Y,EACL4Y,EAAWzhB,KAAKuU,IAAIgN,EARZ,IASRC,EAAO3Y,EAAK,EACZuY,EAAS,cAAC,GAAD,CAAyB/Y,MAAM,EAAM6V,WAAY,GAAIC,cAAe,GAAIlB,WAAYA,EAAYwC,WAAY,CAAC+B,EAAKC,MAI7H,gCACE,mBAAG1M,GAAG,OAAN,SAAcwJ,IACb6C,EACAG,EAjBO,IAiBK,oBAAGxM,GAAG,OAAN,eAAgBwM,EAjBrB,GAiBK,wBCFNG,GArBA,SAACrT,GACwBA,EAA7BxF,KADgB,IAEnBuY,EACA3B,EAFSlB,EAAuBlQ,EAAvBkQ,QAAStB,EAAc5O,EAAd4O,WAYtB,OAHAwC,EAJW,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAK3B2B,EAAS,cAAC,GAAD,CAAwB3B,WAAYA,EAAYxC,WAAYA,IAGjE,gCACI,mBAAGlI,GAAG,OAAN,SAAcwJ,IACb6C,MCwFEnR,gBAnGI,SAAC5B,GAAW,IACpBuN,EAA0BvN,EAA1BuN,WAAYqB,EAAc5O,EAAd4O,WAEf0E,EAAU,GACVpB,EAAW,GACXqB,EAAO,GACPtN,EAAM,EAIV,GAAIsH,EAAWza,YAAY,CACzB,IAAMuf,EAAO9E,EAAWtY,gBAAgBsY,EAAWtY,gBAAgBvD,OAAO,GAAG,GAC7E4hB,EAAQ7hB,KAAK,cAAC,GAAD,CAAkBye,QAAS,cAAe4C,MAAM,EAAMT,KAAMA,EAAM1e,KAAK,EAAOib,WAAYA,GAA7E3I,IAC1BA,GAAO,OAEJ,GAAyB,WAArB2I,EAAW5c,MAAmB,CACrC,IAAMqgB,EAAO9E,EAAWtY,gBAAgBsY,EAAWtY,gBAAgBvD,OAAO,GAAG,GAC7E4hB,EAAQ7hB,KAAK,cAAC,GAAD,CAAkBye,QAAS,gBAAiB4C,MAAM,EAAOT,KAAMA,EAAM1e,KAAK,EAAOib,WAAYA,GAAhF3I,IAC1BA,GAAO,EAET,GAAIsH,EAAW5Z,IAAI,CACjB,IAAM0e,EAAO9E,EAAWtY,gBAAgB,GAAG,GAC3Cqe,EAAQ7hB,KAAK,cAAC,GAAD,CAAkBye,QAAS,MAAO4C,MAAM,EAAOT,KAAMA,EAAMzD,WAAYA,GAA1D3I,IAC1BA,GAAO,EACPiM,EAASzgB,KAAK,cAAC,GAAD,CAAkBye,QAAS,aAAc1V,KAAM6X,EAAMzD,WAAYA,GAApD3I,IAC3BA,GAAO,EAET,GAAIsH,EAAW3Z,WAAW,CACX2Z,EAAWtY,gBAAgB,GAAG,GAC3Cid,EAASzgB,KAAK,cAAC,GAAD,CAAyBye,QAAS,aAAc1V,KAAM,GAAIoU,WAAYA,GAAlD3I,IAClCA,GAAO,EAET,GAAIsH,EAAW9Z,KAAK,CAClB,IAAM4e,EAAO9E,EAAWtY,gBAAgBsY,EAAWtY,gBAAgBvD,OAAO,GAAG,GAC7EwgB,EAASzgB,KAAK,cAAC,GAAD,CAAeye,QAAS,MAAO1V,KAAM6X,EAAMzD,WAAYA,GAA7C3I,IACxBA,GAAO,EACPiM,EAASzgB,KAAK,cAAC,GAAD,CAAeye,QAAS,MAAO1V,KAAM6X,EAAMzD,WAAYA,GAA7C3I,IACxBA,GAAO,EAET,GAAwB,KAApBsH,EAAW7Z,KAAY,CACzB,IAAM2e,EAAO9E,EAAWtY,gBAAgBsY,EAAWtY,gBAAgBvD,OAAO,GAAG,GACrD,SAApB6b,EAAW7Z,MACbwe,EAASzgB,KAAK,cAAC,GAAD,CAAe2gB,MAAM,EAAOlC,QAAS,WAAYmC,KAAMA,GAA7CpM,IACxBA,GAAO,EACPiM,EAASzgB,KAAK,cAAC,GAAD,CAAe2gB,MAAM,EAAOlC,QAAS,WAAYmC,KAAMA,GAA7CpM,IACxBA,GAAO,GAEoB,UAApBsH,EAAW7Z,MAClBwe,EAASzgB,KAAK,cAAC,GAAD,CAAyBye,QAAS,YAAa1V,KAAM,GAAIoU,WAAYA,GAAjD3I,IAClCA,GAAO,EACPiM,EAASzgB,KAAK,cAAC,GAAD,CAAyBye,QAAS,YAAa1V,KAAM,GAAIoU,WAAYA,GAAjD3I,KAEP,WAApBsH,EAAW7Z,MAClBwe,EAASzgB,KAAK,cAAC,GAAD,CAAkBye,QAAS,YAAa1V,KAAM6X,EAAMzD,WAAYA,GAAnD3I,IAC3BA,GAAO,EACPiM,EAASzgB,KAAK,cAAC,GAAD,CAAkBye,QAAS,YAAa1V,KAAM6X,EAAMzD,WAAYA,GAAnD3I,KAEA,QAApBsH,EAAW7Z,OAClBwe,EAASzgB,KAAK,cAAC,GAAD,CAA2Bye,QAAS,UAAWjY,MAAO,GAAI2W,WAAYA,EAAYuB,UAAW,EAAGC,iBAAiB,EAAM7Y,UAAU,GAA3G0O,IACpCA,GAAO,EACPiM,EAASzgB,KAAK,cAAC,GAAD,CAA2Bye,QAAS,UAAWjY,MAAO,GAAI2W,WAAYA,EAAYuB,UAAW,EAAGC,iBAAiB,EAAM7Y,UAAU,GAA3G0O,KAEtCA,GAAO,EAET,GAAIsH,EAAW1Z,aAAa,CAC1B,IAAMwe,EAAO9E,EAAWtY,gBAAgB,GAAG,GAC3Cse,EAAK9hB,KAAK,cAAC,GAAD,CAAe2gB,MAAM,EAAOlC,QAAS,cAAemC,KAAMA,GAAhDpM,IACpBA,GAAO,EACPsN,EAAK9hB,KAAK,cAAC,GAAD,CAAe2gB,MAAM,EAAOlC,QAAS,cAAemC,KAAMA,GAAhDpM,IACpBA,GAAO,EAMT,GAJIsH,EAAW3a,UACb2gB,EAAK9hB,KAAK,cAAC,GAAD,CAAe2gB,MAAM,EAAMlC,QAAS,UAAWmC,KAAM9E,EAAWtY,gBAAgB,GAAG,IAAzEgR,IACpBA,GAAO,GAELsH,EAAW1a,WAAW,CACxB,IAAMwf,EAAO9E,EAAWtY,gBAAgBsY,EAAWtY,gBAAgBvD,OAAO,GAAG,GAC7E6hB,EAAK9hB,KAAK,cAAC,GAAD,CAAe2gB,MAAM,EAAMlC,QAAS,aAAcmC,KAAMA,GAA9CpM,IACpBA,GAAO,EAET,GAAyB,SAArB2I,EAAW5c,MAAiB,CAC9B,IAAMqgB,EAAO9E,EAAWtY,gBAAgB,GAAG,GAC3Cse,EAAK9hB,KAAK,cAAC,GAAD,CAAe0P,MAAM,EAAM+O,QAAS,OAAQmC,KAAMA,GAAxCpM,IACpBA,GAAO,EAGT,OACE,qBAAKS,GAAG,aAAR,SACE,sBAAKhY,MAAO,CAACW,QAAQ,eAAgB0X,WAAY,KAAMgC,aAAc,GAArE,UACGuK,EACD,sBAAK5kB,MAAO,CAACW,QAAQ,OAAQE,WAAW,aAAcwX,WAAY,KAAMgC,aAAc,EAAGzZ,eAAe,cAAxG,UACG4iB,EACAqB,aCqME3R,gBAxRG,WAAO,IAyBnB2L,EAzBkB,EACUjI,oBAAS,GADnB,oBACfkO,EADe,KACLC,EADK,OAEcnO,oBAAS,GAFvB,oBAEfoO,EAFe,KAEHC,EAFG,OAG4BrO,oBAAS,GAHrC,oBAGfsO,EAHe,KAGIC,EAHJ,OAIiBvO,mBAAS,GAJ1B,oBAIfwO,EAJe,KAIEC,EAJF,OAKmBzO,mBAAS,GAL5B,oBAKf0O,EALe,KAKGC,EALH,OAMkB3O,mBAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAN/H,oBAMf4O,EANe,KAMDC,EANC,OAOoB7O,mBAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAPjI,oBAOf8O,EAPe,KAOAC,EAPA,KAsBhBC,EAAaxH,mBACbyH,EAAgBzH,mBAvBA,EAwBmDnM,KAAlET,EAxBe,EAwBfA,kBAAmBD,EAxBJ,EAwBIA,UAAWI,EAxBf,EAwBeA,UAAWD,EAxB1B,EAwB0BA,SAAUD,EAxBpC,EAwBoCA,YAE1B,SAA5BD,EAAkBlO,QAAkBub,EAAatN,GACrB,SAA5BC,EAAkBlO,MAAkBub,EAAalN,EAChB,QAA5BH,EAAkBlO,MAAiBub,EAAanN,EACpB,WAA5BF,EAAkBlO,QAAoBub,EAAapN,GAmC5D,IATA,IAAMqU,EAAejH,EAAWtY,gBAC1Bwf,EAAWvU,EAAkBhL,SAAW,GAE1Cwf,EAAW,EAMNxjB,EAAI,EAAGA,EAAIsjB,EAAa9iB,OAAQR,IAAI,CAE3CwjB,GAAc,GADJF,EAAatjB,GAAG,GACc,GAAkB,GAG5B,SAA5BgP,EAAkBlO,OACpB0iB,GAA+C,IAAlCrU,EAAU7M,gBAAgB,GAAG,GAA7B,GAA8D,IAC3EkhB,GAAY,KAGuB,QAA5BxU,EAAkBlO,QACzB0iB,GAAY,IAGVnH,EAAWza,aAA2C,WAA5BoN,EAAkBlO,SAC9C0iB,GAAY,EACTnH,EAAW5Z,MACZ+gB,GAAY,KAIXnH,EAAW3a,SAAW2a,EAAW1a,aAA6C,UAA5BqN,EAAkBlO,QACvE0iB,GAAY,KAGdA,GAA+C,GAAnCxU,EAAkBrF,QAAQnJ,OAEtC,IAAMijB,EAAc,sBAAK7kB,UAAY,sBAAjB,UAChB,mBAAGA,UAAY,YAAf,yBACA,qBAAKA,UAAY,qBACfkZ,QAAS,kBAAK2K,GAAeD,IAC7BhlB,MAAO,CAAC6Z,WAAYrI,EAAkBhG,eAFxC,SAIE,yBAEF,qBAAKpK,UAAY,uBAAjB,SACG4jB,GAAe,cAAC,KAAD,CAAekB,OAAQV,EAAcW,SAAS,WAAW1lB,MAAO+Q,EAAkBhG,cAAe4a,iBArEvH,SAAqB3lB,GACnB,IAAM4lB,EAAU5lB,EAAM6lB,IAAKC,WAAWC,cAEtC,GADAhV,EAAkB/E,SAAS4Z,IACtBb,EAAaiB,SAASJ,GAAQ,CACjC,IAAIK,EAAclB,EAClBkB,EAAYtB,GAAmBiB,EAC/BZ,EAAgBiB,GAEhBrB,GADiBD,EAAkB,GAAK,aAkEtCuB,EAAqB,sBAAKvlB,UAAY,sBAAjB,UACvB,mBAAGA,UAAY,YAAf,2BACA,qBAAKA,UAAY,qBACfkZ,QAAS,kBAAM6K,GAAsBD,IACrCllB,MAAO,CAAC6Z,WAAYrI,EAAkB/F,cAFxC,SAIE,yBAEF,qBAAKrK,UAAY,yBAAjB,SACG8jB,GAAsB,cAAC,KAAD,CAAegB,OAAQR,EAAeS,SAAS,WAAW1lB,MAAO+Q,EAAkB/F,aAAc2a,iBAtE9H,SAA4B3lB,GAC1B,IAAM4lB,EAAU5lB,EAAM6lB,IAAKC,WAAWC,cAEtC,GADAhV,EAAkBlL,gBAAgB+f,IAC7BX,EAAce,SAASJ,GAAQ,CAClC,IAAIK,EAAchB,EAClBgB,EAAYpB,GAAoBe,EAChCV,EAAiBe,GAEjBnB,GADiBD,EAAmB,GAAK,aAmEvCsB,EACN,qBAAKxlB,UAAY,cAAjB,SACE,qBAAKA,UAAY,cACfkZ,QAAS,kBAAM9I,EAAkBvE,SAAQ,IAD3C,SAEE,mBAAG7L,UAAY,eAAf,gCAIEylB,EACN,qBAAKzlB,UAAY,cAAjB,SACE,qBAAKA,UAAY,cACfkZ,QAAS,kBAAM9I,EAAkBvE,SAAQ,IAD3C,SAEE,mBAAG7L,UAAY,eAAf,6BAIE0lB,EAAa,sBAAK1lB,UAAY,cAAjB,UACjB,mBAAGA,UAAY,QAAf,kBACA,qBAAKA,UAAY,OAAOhB,IAAKC,EAAMia,QAAS,kBAK5CyM,gCAAqBnB,EAAY,CAACrb,SAAU,qBAC5Cwc,gCAAqBlB,EAAe,CAACtb,SAAU,4BANejK,IAAI,KACjEwkB,GAAY,qBAAK1jB,UAAU,aAAf,0BAQf,IAAM4lB,EACN,qBAAK5lB,UAAY,OAAjB,SACE,qBAAKA,UAAY,MAAMkZ,QAAS,kBAAMxH,QAAQC,IAAI,OAAlD,SACE,cAAC,KAAD,CAAejH,KAAM,GAAI9L,MAAO,CAACS,MAAO,eAKtCwmB,EACN,qBAAK7lB,UAAY,OAAjB,SACE,cAAC,KAAD,CAAWwR,MAAO,EAAG7S,GAAG,UAAU8S,YAOpC,WACErB,EAAkB5E,QAAO,GACzB4E,EAAkBrE,gBAAgByY,GAClCpU,EAAkBrE,gBAAgB0Y,GAAe,IAVQ7S,SAAS,EAAlE,SACE,qBAAK5R,UAAY,MAAjB,SACI,cAAC,KAAD,CAAkB0K,KAAM,GAAI9L,MAAO,CAACS,MAAO,iBAWnD,IAAMmL,EAAQ,sBAAKxK,UAAY,cAAjB,UACZ,mBAAGA,UAAY,QAAf,mBACA,sBAAKA,UAAY,OACfkZ,QAAS,kBAAK9I,EAAkBzE,YADlC,UAEE,cAAC,KAAD,CAAUjB,KAAM,GAAI9L,MAAO,CAACS,MAAO,WACnC,6BAIEymB,EAAO,sBAAK9lB,UAAY,cAAjB,UACb,mBAAGA,UAAY,QAAf,kBACA,qBAAKA,UAAY,OACfkZ,QAAS,kBAAKyK,GAAaD,IAD7B,SAGE,cAAC,KAAD,CAAehZ,KAAM,GAAI9L,MAAO,CAACS,MAAO,gBAItC+gB,EAAO,UAAMhQ,EAAkBlO,OACH,QAA5BkO,EAAkBlO,MACpBke,EAAU,gBAEyB,SAA5BhQ,EAAkBlO,QACzBke,EAAU,qBAiBZ,IAAM2F,GACN,gCACE,mBAAGnP,GAAG,OAAN,qCACA,sBAAKhY,MAAO,CAACuJ,MAAO,OAAQ5I,QAAQ,gBAApC,UACE,qBAAKqX,GAAG,OAAOhY,MAAO,CAACsY,UAAU,EAAG+B,aAAa,EAAG7Z,YAAa,EAAG+I,MAAO,QAASsQ,WAAY,UAAW1Z,MAAM,QAAjH,yBACA,qBAAK6X,GAAG,OAAOhY,MAAO,CAACsY,UAAU,EAAG+B,aAAa,EAAGhC,WAAY,EAAG9O,MAAO,QAASsQ,WAAY,UAAW1Z,MAAM,SAAhH,SACE,8BACGqR,EAAkBrF,QAAQoH,KAAI,SAACxK,EAAKvG,GAAN,OArBvC,SAAoB+U,EAAKxO,EAAK6X,GAC5B,IAAIwG,EAASnkB,KAAKkf,KAAKvT,SAASgS,GAAKpP,EAAkB1F,MACnDub,EAAe,GACNA,EAAbD,EAAS,EAAmB,SAA0B,QACtD,IAAIE,EAAS,GAEb,OADoBA,EAApB1Y,SAASgS,GAAO,EAAa,SAAoB,QAC1C,sBAAe5gB,MAAO,CAACW,QAAQ,eAAgB4I,MAAO,QAAtD,UAEL,oBAAGvJ,MAAO,CAACsY,UAAU,GAAI+B,aAAa,EAAGhC,WAAW,GAAIlY,MAAM,SAA9D,UAAyEygB,EAAzE,IAA+E0G,EAA/E,KAAyFF,EAAzF,IAAkGC,KAClG,qBAAKrnB,MAAO,CAACsY,UAAU,EAAG+B,aAAa,EAAGxC,aAAc,GAAI5X,OAAQ,GAAIsJ,MAAO,GAAIsQ,WAAY9Q,EAAK5I,MAAM,aAH3FoX,GAgBXgQ,CAAW/kB,EAAGuG,EAAI,GAAIA,EAAI,iBAO5BkF,GAAS8X,EACf,sBAAK3kB,UAAY,SAAjB,UACE,sBAAKod,IAAOoH,EAAZ,UACGuB,GACD,cAAC,GAAD,CACE3F,QAAO,UAAKA,GACZkB,WAAYoD,EACZ5F,WAAY1O,OAGhB,qBAAKgN,IAAOqH,EAAZ,SACE,cAAC,GAAD,CACEnD,WAAYoD,EACZjH,WAAYA,EACZqB,WAAY1O,SAIlB,sBAAKpQ,UAAY,kBAAjB,UACE,sBAAKod,IAAOoH,EAAZ,UACGuB,GACD,cAAC,GAAD,CACE3F,QAAO,UAAKA,GACZkB,WAAYoD,EACZ5F,WAAY1O,OAGhB,qBAAKgN,IAAOqH,EAAZ,SACE,cAAC,GAAD,CACEnD,WAAYoD,EACZjH,WAAYA,EACZqB,WAAY1O,SAKlB,OACE,sBAAKpQ,UAAU,KAAf,UACE,cAAC,KAAD,CAAQomB,OAAQ,EAAhB,SACE,sBAAKpmB,UAAY,UAAjB,UACG4lB,EACAJ,EACAhb,EACAqa,EACAa,EACAH,EACAO,EACAL,EACAI,OAGL,qBAAKjnB,MAAO,CAAC6U,SAAU,WAAY4S,UAAU,SAAUC,UAAU,SAAUznB,OAAQ+lB,EAAUnM,WAAW,WAAxG,SACG5L,WCzRH0Z,GAAYtW,GAAU1H,SAItBie,G,uKAEF,OACE,qBAAK5nB,MAAO,CAAC6Z,WAAY,WAAzB,SACE,cAAC9H,GAAD,CAAmBkG,MAAO0P,GAA1B,SACE,cAAC,gBAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOvL,KAAK,aAAZ,SACuC,UAApCuL,GAAUnW,kBAAkBlF,IAAkB,cAAC,IAAD,CAAUvM,GAAG,YAAc,cAAC,GAAD,MAE5E,cAAC,IAAD,CAAOqc,KAAK,IAAZ,SACE,cAAC,GAAD,mB,GAXEyL,aAqBH3U,eAAS0U,IC/BxBna,IAASqa,OAAO,cAAC,GAAD,IAAShd,SAASid,eAAe,U","file":"static/js/main.066b3ba8.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #D14240;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // padding: 0.5rem calc((100vw - 4000px) / 2);\r\n  padding: 0.5rem;\r\n  z-index: 10;\r\n  border-radius: 30px 30px 30px 30px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  // height: 70%;\r\n  cursor: pointer;\r\n  border-radius: 30px;\r\n  margin: 5px;\r\n  border-style: solid; \r\n  border-color: #D14240;\r\n\r\n  &:hover {\r\n    // transition: all 0.2s ease-in-out;\r\n    background: #FFE7EC;\r\n    color: red;\r\n    // height: 100%;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n\r\n  &.active {\r\n    color: red;\r\n    background: #FFE7EC;\r\n    // height: 100%;\r\n    border-radius: 40px;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n`;\r\n\r\nexport const PlainLink = styled(Link)`\r\n  text-decoration:none;\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  // margin-right: 24px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 80vw; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 30px;\r\n  background: #256ce1;\r\n  // padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  width: 80px;\r\n  height: 50px;\r\n\r\n\r\n  /* Second Nav */\r\n  // margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #D14240;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/complex-logo.268ab665.png\";","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink, \r\n  PlainLink\r\n} from './NavbarElements';\r\nimport logo from \"../../assets/complex-logo.png\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <PlainLink to='/'><img style={{height: 60, margin: 20, float: 'left'}}src={logo} alt='logo' /></PlainLink>\r\n        <PlainLink to='/'>\r\n          <p style ={{letterSpacing: 3, marginRight: 100, color:\"white\", float: 'left'}}>3d-o</p>\r\n        </PlainLink>\r\n        {/* <Bars /> */}\r\n        <NavMenu>\r\n          <NavLink to='/about'>\r\n            <p style ={{letterSpacing: 2}}>about</p>\r\n          </NavLink>\r\n          <NavLink to='/learn' >\r\n            <p style ={{letterSpacing: 2}}>learn</p>\r\n          </NavLink>\r\n          <NavLink to='/create'>\r\n            <p style ={{letterSpacing: 2}}>create</p>\r\n          </NavLink>\r\n          <NavLink to='/browse'>\r\n            <p style ={{letterSpacing: 2}}>browse</p>\r\n          </NavLink>\r\n          <NavLink to='/gallery'>\r\n            <p style ={{letterSpacing: 2}}>gallery</p>\r\n          </NavLink>\r\n          <NavLink to='/contact'>\r\n            <p style ={{letterSpacing: 2}}>contact</p>\r\n          </NavLink>\r\n          <NavLink to='/login'>\r\n            <p style ={{letterSpacing: 2}}>login</p>\r\n          </NavLink>\r\n          {/* Second Nav */}\r\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n        </NavMenu>\r\n        {/* <NavBtn>\r\n          <NavBtnLink to='/signin'>Sign In</NavBtnLink>\r\n        </NavBtn> */}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Landing</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>About</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Learn = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Learn</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Learn;","export default __webpack_public_path__ + \"static/media/logo-bg.1d8d140f.png\";","export default __webpack_public_path__ + \"static/media/strawberry-slider-big.9374e4ca.png\";","import React from 'react';\r\nimport bg from \"../assets/logo-bg.png\"\r\n// import bgOff from \"../assets/logo-bg-off.png\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport \"./create-vase.css\"\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '486px',\r\n        backgroundImage: `url(${bg})`, \r\n        backgroundPosition: \"50%\"\r\n      }}\r\n    >\r\n      <div className=\"info-box\" >\r\n        <img src={straw} alt={\"\"} className =\"straw-l\"/>\r\n        <img src={straw} alt={\"\"} className =\"straw-m\"/>\r\n        <img src={straw} alt={\"\"} className =\"straw-r\"/>\r\n        <p className = \"app-name\">3d-o<br/>engineering x art</p>\r\n        <p className = \"name\">— lina nguyen —</p>\r\n        <div className=\"left\">\r\n          <a href=\"https://www.linkedin.com/in/nlina/\" target=\"_blank\" className=\"link\">linkedin</a>\r\n          <br/>\r\n          <a href=\"https://github.com/n-lina/n-lina/raw/main/Lina%20Nguyen%20Resume.pdf\" target=\"_blank\" className=\"link\">resume</a>\r\n        </div>\r\n        <div className=\"right\">\r\n          <a href=\"https://github.com/n-lina\" target=\"_blank\" className=\"link\">github</a>\r\n          <br/>\r\n          <a href=\"mailto:linanguyen@alumni.ubc.ca\" target=\"_blank\" className=\"link\">email</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","export default __webpack_public_path__ + \"static/media/vase.19cb9836.png\";","export default __webpack_public_path__ + \"static/media/basket.6d6869d7.png\";","export default __webpack_public_path__ + \"static/media/swan.219c1002.png\";","export default __webpack_public_path__ + \"static/media/fig.3fd7ce23.PNG\";","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsNew(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[8]\r\n    const last_y = _pts[9]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(y, 0.5));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n// function getCurvePoints(pts, tension, isClosed, numOfSegments) {\r\n\r\n//     // use input value if provided, or use a default value   \r\n//     tension = (typeof tension != 'undefined') ? tension : 0.5;\r\n//     isClosed = isClosed ? isClosed : false;\r\n//     numOfSegments = numOfSegments ? numOfSegments : 16;\r\n\r\n//     var _pts = [], res = [],    // clone array\r\n//         x, y,           // our x,y coords\r\n//         t1x, t2x, t1y, t2y, // tension vectors\r\n//         c1, c2, c3, c4,     // cardinal points\r\n//         st, t, i;       // steps based on num. of segments\r\n\r\n//     // clone array so we don't change the original\r\n//     //\r\n//     _pts = pts.slice(0);\r\n\r\n//     // The algorithm require a previous and next point to the actual point array.\r\n//     // Check if we will draw closed or open curve.\r\n//     // If closed, copy end points to beginning and first points to end\r\n//     // If open, duplicate first points to befinning, end points to end\r\n//     if (isClosed) {\r\n//         _pts.unshift(pts[pts.length - 1]);\r\n//         _pts.unshift(pts[pts.length - 2]);\r\n//         _pts.unshift(pts[pts.length - 1]);\r\n//         _pts.unshift(pts[pts.length - 2]);\r\n//         _pts.push(pts[0]);\r\n//         _pts.push(pts[1]);\r\n//     }\r\n//     else {\r\n//         _pts.unshift(pts[1]);   //copy 1. point and insert at beginning\r\n//         _pts.unshift(pts[0]);\r\n//         _pts.push(pts[pts.length - 2]); //copy last point and append\r\n//         _pts.push(pts[pts.length - 1]);\r\n//     }\r\n\r\n//     // ok, lets start..\r\n\r\n//     // 1. loop goes through point array\r\n//     // 2. loop goes through each segment between the 2 pts + 1e point before and after\r\n//     for (i=2; i < (_pts.length - 4); i+=2) {\r\n//         for (t=0; t <= numOfSegments; t++) {\r\n\r\n//             // calc tension vectors\r\n//             t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n//             t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n//             t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n//             t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n//             // calc step\r\n//             st = t / numOfSegments;\r\n\r\n//             // calc cardinals\r\n//             c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n//             c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n//             c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n//             c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n//             // calc x and y cords with common control vectors\r\n//             x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n//             y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n//             //store points in array\r\n//             res.push(x);\r\n//             res.push(y);\r\n\r\n//         }\r\n//     }\r\n\r\n//     return res;\r\n// }\r\n\r\nconst VaseStore = types\r\n  .model(\"Vase\", {\r\n    cm: false,\r\n    dtop: 20,\r\n    d3: 10, \r\n    d2: 10, \r\n    d1: 35,\r\n    dbottom: 20, \r\n    dtop_h: 100, \r\n    d3_h: 90, \r\n    d2_h: 70, \r\n    d1_h: 50, \r\n    dbottom_h: 0, \r\n    height: 50,\r\n    top_rim: false, \r\n    bottom_rim: true, \r\n    flat_bottom: true, \r\n    scale_h: 36,\r\n    default_color: \"#FFFFFF\",\r\n    tot_rows_per_section: types.optional(types.array(types.number), [15,9,10,10,10]), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[[5,4],[3,2],[1],[0]]), \r\n    // vase has 4 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_flat_bottom(flat_bottom){\r\n        self.flat_bottom = flat_bottom\r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_d3(d3){\r\n        self.d3 = d3\r\n    }, \r\n    update_d2(d2){\r\n        self.d2 = d2\r\n    }, \r\n    update_d1(d1){\r\n        self.d1 = d1\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    },\r\n    update_d_heights(vals){\r\n        self.d3_h = vals[3]\r\n        self.d2_h = vals[2]\r\n        self.d1_h = vals[1]\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n        // console.log(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53 // un hard code\r\n        return self.modelDimensions\r\n      },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_d1 = self.d1 * scale_factor\r\n        const s_d1_h = (self.d1_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d2 = self.d2 * scale_factor\r\n        const s_d2_h = (self.d2_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d3 = self.d3 * scale_factor\r\n        const s_d3_h = (self.d3_h/100) * self.scale_h - s_dtop_h\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_d1_h,s_d1/2,s_d2_h,s_d2/2, s_d3_h,s_d3/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.4\r\n        var numOfSegments = 6\r\n        let points = [];\r\n        const new_pts = getCurvePointsNew(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] === new_pts[hi+2] && new_pts[hi+1] === new_pts[hi+3]){\r\n                    const temp = new_pts.slice(lo,hi+2)\r\n                    section_pts.push(temp)\r\n                    lo = hi + 2\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            for (let i=0; i<4; i+=1){ //section_pts.length = 4\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    if (self.subsections[i].length > 1){\r\n                        // console.log(self.modelDimensions[self.subsections[i][j]][1])\r\n                        let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                        slice_size = slice_size * 2\r\n                        const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                        curr_idx += slice_size\r\n                        broken_pts.push(slice)\r\n                    } \r\n                    else {\r\n                        broken_pts.push(section_pts[i])\r\n                    }\r\n                }\r\n            }\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push( new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            \r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default VaseStore;\r\n\r\nconst VaseContext = React.createContext();\r\n\r\nexport const VaseProvider = ({ children, store }) => {\r\n    return (\r\n      <VaseContext.Provider value={store}>{children}</VaseContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useVaseStore = () => React.useContext(VaseContext);\r\n\r\nexport const withVaseStore = (Component) => (props) => {\r\n    return <Component {...props} store={useVaseStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\n\r\nconst PxModel = types\r\n  .model(\"PxModel\", {\r\n    pixelColor: \"#FFFFFF\", \r\n    oldColor: \"#FFFFFE\", \r\n    canChangeColor: true, \r\n    inverted: false\r\n  })\r\n  .actions(self => ({\r\n    setPixelColor(col){\r\n      self.pixelColor = col\r\n    }, \r\n    setOldColor(col){\r\n      self.oldColor = col\r\n    }, \r\n    setCanChangeColor(val){\r\n      self.canChangeColor = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default PxModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport PxModel from './PxModel'\r\n\r\nconst RowModel = types\r\n  .model(\"RowModel\", {\r\n    rowData: types.optional(types.array(PxModel), []),\r\n    offset: 0, \r\n    width: 0, \r\n    displayRowNum: 0,\r\n    preColor: \"#FFFFFF\"\r\n  })\r\n  .actions(self => ({\r\n    addPx(){\r\n      self.rowData.push(PxModel.create({oldColor: self.preColor, pixelColor: self.preColor}))\r\n    },\r\n    setOffset(val = 10.5){\r\n      self.offset = val\r\n    }, \r\n    setWidth(val){\r\n      self.width = val\r\n    }, \r\n    setDisplayRowNum(val){\r\n      self.displayRowNum = val\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default RowModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport RowModel from './RowModel'\r\n\r\nconst DrawingSectionModel = types\r\n  .model(\"DrawingSectionModel\", {\r\n    drawingSectionData: types.optional(types.array(RowModel), []),\r\n    width: 0, \r\n    height: 0, \r\n    increasing: false, \r\n    preColor: \"#FFFFFF\"\r\n  })\r\n  .actions(self => ({\r\n    addRow(){\r\n      self.drawingSectionData.push(RowModel.create({preColor: self.preColor}))\r\n    }, \r\n    setWidthHeight(w, h){\r\n      self.width = w\r\n      self.height = h \r\n    }, \r\n    setIncreasing(val){\r\n      self.increasing = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default DrawingSectionModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport html2canvas from 'html2canvas';\r\nimport DrawingSectionModel from './DrawingSectionModel'\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst fileType = {\r\n  PNG: 'image/png',\r\n  JPEG: 'image/jpeg',\r\n  PDF: 'application/pdf'\r\n};\r\n\r\nconst DEFAULT_PNG = {\r\n  fileName: '3do-diagram.png',\r\n  type: fileType.PNG,\r\n  html2CanvasOptions: {}\r\n};\r\n\r\nconst saveAs = (uri, filename) => {\r\n  const link = document.createElement('a');\r\n\r\n  if (typeof link.download === 'string') {\r\n      link.href = uri;\r\n      link.download = filename;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n  } else {\r\n      window.open(uri);\r\n  }\r\n};\r\n\r\nconst ColoringForm = types\r\n  .model(\"ColoringForm\", {\r\n    selectedColor: \"#FF0000\",\r\n    defaultColor: \"#FFFFFF\",\r\n    oldDefault: \"#FFFFFE\",\r\n    preload: false,\r\n    clear: false,\r\n    mode: false,\r\n    maxWidth: 53,\r\n    size: 32,\r\n    canvasPic: \"\",\r\n    appendPic: \"\",\r\n    model: \"swan\", // vase, swan, fig, basket\r\n    inverted: false,\r\n    swan_two_wings: false,\r\n    coloringFormData: types.optional(types.array(DrawingSectionModel), []), \r\n    counter: types.optional(types.array(types.array(types.string)), []),\r\n    totPcs: 0, \r\n    doneDefualt: false,\r\n    msg: \"error\", \r\n    resultMsg: \"error\"\r\n  })\r\n  .actions(self => ({\r\n    storePic(picData){\r\n      self.canvasPic = picData\r\n      return\r\n    }, \r\n    storeAppendPic(picData){\r\n      self.appendPic = picData\r\n      return\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n    setColor(col){\r\n      self.clear = false\r\n      self.selectedColor = col\r\n    },\r\n    setModel(model, swan_one_wing){\r\n      self.model = model\r\n      if (model === \"swan\"){\r\n        self.swan_two_wings = swan_one_wing\r\n      }\r\n    },\r\n    setMsg(result=false, msg=\"valid\"){\r\n      if (!result) self.msg = msg\r\n      else self.resultMsg = msg\r\n    },\r\n    preloadDefaultColor(col){\r\n      self.defaultColor = col\r\n      self.oldDefault = col\r\n    },\r\n    setDefaultColor(col){\r\n      self.doneDefualt = false\r\n      self.clear = false\r\n      self.oldDefault = self.defaultColor\r\n      self.defaultColor = col\r\n    },\r\n    clearAll(){\r\n      self.doneDefualt = false\r\n      if (self.defaultColor === \"#FFFFFF\"){\r\n        self.oldDefault = \"#FFFFFE\" \r\n        self.defaultColor = \"#FFFFFE\"\r\n      }\r\n      else {\r\n        self.oldDefault = \"#FFFFFF\" \r\n        self.defaultColor = \"#FFFFFF\"\r\n      }\r\n      self.clear = true\r\n    }, \r\n    unsetClear(){\r\n      self.clear = false\r\n    },\r\n    setMode(val){\r\n      self.clear = false\r\n      self.mode = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    },\r\n    setPreload(val=true){\r\n      self.preload = val\r\n    },\r\n    exportComponent (node, appendage=false) {\r\n      if(!node.current) {\r\n          throw new Error(\"'node' must be a RefObject\")\r\n      }\r\n      const element = ReactDOM.findDOMNode(node.current);\r\n      return html2canvas(element, {\r\n          scrollY: -window.scrollY,\r\n          useCORS: true,\r\n          // ...html2CanvasOptions\r\n          imageTimeout: 0,\r\n          backgroundColor: \"#FFFFFF\"\r\n      }).then(canvas => {\r\n          // self.canvasPic = canvas.toDataURL(DEFAULT_PNG, 0.1)\r\n          appendage? self.storeAppendPic(canvas.toDataURL(DEFAULT_PNG, 0.1)): self.storePic(canvas.toDataURL(DEFAULT_PNG, 0.1))\r\n      });\r\n    },\r\n    saveDiagram () {\r\n      saveAs(self.canvasPic, \"3do-diagram\")\r\n      saveAs(self.appendPic, \"3do-diagram-appendages\")\r\n      self.resultMsg = \"error\"\r\n    },\r\n    addDrawingSection(){\r\n      self.coloringFormData.push(DrawingSectionModel.create({preColor: self.defaultColor}))\r\n    }, \r\n    addPc(){\r\n      self.totPcs += 1 \r\n    },\r\n    clearColoringForm(){\r\n      self.coloringFormData = []\r\n      self.counter = []\r\n      self.totPcs = 0\r\n      self.selectedColor = \"#FF0000\"\r\n      self.defaultColor = \"#FFFFFF\"\r\n      self.oldDefault = \"#FFFFFE\"\r\n      self.mode = false\r\n      self.doneDefualt = false\r\n      self.canvasPic = \"\"\r\n      self.appendPic = \"\"\r\n      self.inverted = false\r\n      self.swan_two_wings = false\r\n      self.preload = false\r\n      // self.maxWidth = ??\r\n      // self.size = ??\r\n      // self.model = ??\r\n      // error messages dealt with seperately\r\n    },\r\n    updateCounter(oldCol, newCol){\r\n      let done = false\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        const curr_val = parseInt(self.counter[i][1])\r\n        if (self.counter[i][0] === oldCol){\r\n          if (curr_val <= 1){\r\n            self.counter.splice(i,1)\r\n          }\r\n          else self.counter[i][1] = String(curr_val - 1)\r\n        }\r\n      }\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        const curr_val = parseInt(self.counter[i][1])\r\n        if (self.counter[i][0] === newCol){\r\n          done = true\r\n          self.counter[i][1] = String(curr_val + 1)\r\n        }\r\n      }\r\n      if (!done) {\r\n        self.counter.push([newCol, \"1\"])\r\n      }\r\n    }, \r\n    updateCounterDefault(init=false, clear=false){\r\n      if (self.doneDefualt) return\r\n      if (init) {\r\n        self.counter =[[self.defaultColor, String(self.totPcs)]]\r\n        if (clear) self.doneDefualt = true\r\n        return\r\n      }\r\n      let done = false\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        if (self.counter[i][0] === self.oldDefault){\r\n          self.counter[i][0] = self.defaultColor\r\n          done = true\r\n        }\r\n      }\r\n      self.doneDefualt = true\r\n      if (!done) return\r\n      let count = 0 \r\n      let idx = 0\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        if (self.counter[i][0] === self.defaultColor){\r\n          count += 1 \r\n          if (count === 1){\r\n            idx = i \r\n          }\r\n          else if (count === 2){ // merging by adding both to 1st encounter and deleting 2nd one\r\n            self.counter[idx][1] = String(parseInt(self.counter[idx][1]) + parseInt(self.counter[i][1]))\r\n            self.counter.splice(i,1)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default ColoringForm;\r\n","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsBasket(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst BasketStore = types\r\n  .model(\"Basket\", {\r\n    cm: false,\r\n    height: 20, \r\n    diameter: 34, \r\n    dtop: 20, \r\n    dbottom: 20,\r\n    top_rim: true, \r\n    bottom_rim: true, \r\n    lid: true, \r\n    top_handle: true, \r\n    side_handles: false, \r\n    scale_h: 15,\r\n    flat_bottom: false, \r\n    default_color: \"#FFFFFF\",\r\n    tot_rows_per_section: types.optional(types.array(types.number), [15,29]), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[[4,3],[2,1,0]]), \r\n    // basket has 2 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[53,10],[40,10],[28,9],[16,10],[13,5]]),\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\" \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_top_handle(top_handle){\r\n        self.top_handle = top_handle\r\n    },\r\n    update_side_handles(side_handles){\r\n        self.side_handles = side_handles\r\n    },\r\n    update_lid(lid){\r\n        self.lid = lid \r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_diameter(diameter){\r\n        self.diameter = diameter\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    }, \r\n    update_flat_bottom(val) {\r\n        self.flat_bottom = val\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53\r\n        return self.modelDimensions\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_diameter = self.diameter * scale_factor\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.8\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsBasket(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] == new_pts[hi+2] && new_pts[hi+1] == new_pts[hi+3]){\r\n                    const temp = new_pts.slice(lo,hi+2)\r\n                    section_pts.push(temp)\r\n                    lo = hi + 2\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            for (let i=0; i<2; i+=1){ //section_pts.length = 4\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    if (self.subsections[i].length > 1){\r\n                        // console.log(self.modelDimensions[self.subsections[i][j]][1])\r\n                        let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                        slice_size = slice_size * 2\r\n                        const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                        curr_idx += slice_size\r\n                        broken_pts.push(slice)\r\n                    } \r\n                    else {\r\n                        broken_pts.push(section_pts[i])\r\n                    }\r\n                }\r\n            }\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push( new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            \r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default BasketStore;\r\n\r\nconst BasketContext = React.createContext();\r\n\r\nexport const BasketProvider = ({ children, store }) => {\r\n    return (\r\n      <BasketContext.Provider value={store}>{children}</BasketContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useBasketStore = () => React.useContext(BasketContext);\r\n\r\nexport const withBasketStore = (Component) => (props) => {\r\n    return <Component {...props} store={useBasketStore()} />;\r\n  };","import {types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsFigurine(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst FigurineStore = types\r\n  .model(\"Figurine\", {\r\n    cm: false,\r\n    diameter: 13,\r\n    arms: true, \r\n    ears: \"bear\", // bear, bunny, cat, sphere\r\n    body_scale: 0.7,\r\n    body_height: 0.35,\r\n    default_color: \"#FFFFFF\",\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    tot_rows_head: 33,\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[30,12],[40,11],[53,10],[40,10]]), // last = body\r\n    // unused, only for consistency: \r\n    flat_bottom: false, \r\n    top_rim: false, \r\n    bottom_rim: false, \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_ears(val){\r\n        self.ears = val\r\n    },\r\n    update_arms(val){\r\n        self.arms = val\r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    }, \r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    getDimensions() {\r\n        self.maxWidth = 53\r\n        return self.modelDimensions\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getBrokenHeadPts(tot_theta_len){\r\n        let theta_start = 0 \r\n        let theta_len = 0\r\n        let divisions = []\r\n        for (let i = 0; i < self.modelDimensions.length-1; i++){\r\n            const num_rows = self.modelDimensions[i][1]\r\n            const ratio = num_rows/self.tot_rows_head\r\n            theta_len = ratio * tot_theta_len\r\n            divisions.push([theta_start, theta_len])\r\n            theta_start += theta_len\r\n        }\r\n        return divisions\r\n    },\r\n    updateCurvedPts(){\r\n        const s_dtop_h = self.diameter * self.body_height\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n\r\n        const s_dtop_bottom = self.diameter * self.body_scale\r\n\r\n        const s_diameter = self.diameter \r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dtop_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop_bottom/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsFigurine(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    },\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default FigurineStore;\r\n\r\nconst FigurineContext = React.createContext();\r\n\r\nexport const FigurineProvider = ({ children, store }) => {\r\n    return (\r\n      <FigurineContext.Provider value={store}>{children}</FigurineContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useFigurineStore = () => React.useContext(FigurineContext);\r\n\r\nexport const withFigurineStore = (Component) => (props) => {\r\n    return <Component {...props} store={useFigurineStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsSwan(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst SwanStore = types\r\n  .model(\"Swan\", {\r\n    cm: false,\r\n    diameter: 16,\r\n    body_height: 0.35,\r\n    top_scale: 1,\r\n    bottom_scale:0.6, \r\n    height_scale: 0.4,\r\n    default_color: \"#FFFFFF\", \r\n    wings: true, // true = two wings\r\n    bottom_rim: true,\r\n    texture: \"\", \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[8, 2]]), // top to bottom\r\n    // unused, only for consistency: \r\n    flat_bottom: false,\r\n    top_rim: false, \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_units(units){\r\n        self.cm = units\r\n    }, \r\n    update_wings(val){\r\n        self.wings = val\r\n    },\r\n    update_bottom_rim(val){\r\n        self.bottom_rim = val\r\n    },\r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    storePic(picData){\r\n        self.texture = picData\r\n    },\r\n    clearTextures(){\r\n        self.texture = \"\"\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53 // un hard code\r\n        // calculations\r\n        return self.modelDimensions\r\n    },\r\n    swanBodyPts(){\r\n        const s_dtop_h = self.diameter * self.height_scale\r\n        const s_dbottom_h = -1 * s_dtop_h * 0.8\r\n\r\n        const s_bottom = self.diameter * self.bottom_scale\r\n        const s_top = self.diameter * self.top_scale\r\n\r\n        const s_diameter = self.diameter \r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_top/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsSwan(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default SwanStore;\r\n\r\nconst SwanContext = React.createContext();\r\n\r\nexport const SwanProvider = ({ children, store }) => {\r\n    return (\r\n      <SwanContext.Provider value={store}>{children}</SwanContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useSwanStore = () => React.useContext(SwanContext);\r\n\r\nexport const withSwanStore = (Component) => (props) => {\r\n    return <Component {...props} store={useSwanStore()} />;\r\n  };","import VaseStore from \"./VaseStore\"\r\nimport ColoringForm from \"./ColoringForm\"\r\nimport BasketStore from \"./BasketStore\"\r\nimport FigurineStore from \"./FigurineStore\"\r\nimport SwanStore from \"./SwanStore\"\r\nimport { types } from \"mobx-state-tree\";\r\n\r\n/**\r\n * A RootStore model.\r\n */\r\n// prettier-ignore\r\nconst RootStore = types.model(\"RootStore\").props({\r\n  vaseStore: types.optional(VaseStore, {}),\r\n  coloringFormStore: types.optional(ColoringForm, {}),\r\n  basketStore: types.optional(BasketStore, {}),\r\n  figStore: types.optional(FigurineStore, {}),\r\n  swanStore: types.optional(SwanStore, {}),\r\n});\r\n\r\nexport default RootStore;\r\n\r\n","import React, { createContext, useContext } from \"react\";\r\nimport RootStore from \"./RootStore\";\r\n\r\n/**\r\n * Create a context we can use to\r\n * - Provide access to our stores from our root component\r\n * - Consume stores in our screens (or other components, though it's\r\n *   preferable to just connect screens)\r\n */\r\n// const RootStoreContext = createContext();\r\n\r\n// /**\r\n//  * The provider our root component will use to expose the root store\r\n//  */\r\n// export const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n// /**\r\n//  * A hook that screens can use to gain access to our stores, with\r\n//  * `const { someStore, someOtherStore } = useStores()`,\r\n//  * or less likely: `const rootStore = useStores()`\r\n//  */\r\n// export const useStores = () => useContext(RootStoreContext);\r\n\r\n//------------------------------------------------------------------\r\n\r\nconst RootStoreContext = React.createContext();\r\n\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n\r\n// export const RootStoreProvider = ({ children, store }) => {\r\n//     return (\r\n//       <RootStoreContext.Provider value={store}>{children}</RootStoreContext.Provider>\r\n//     );\r\n// };\r\n\r\nexport const useStores = () => React.useContext(RootStoreContext);\r\n","import React, {useEffect} from 'react';\r\nimport vase from \"../assets/vase.png\"\r\nimport basket from \"../assets/basket.png\"\r\nimport swan from \"../assets/swan.png\"\r\nimport fig from \"../assets/fig.PNG\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport {\r\n  PlainLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport \"./create.css\"\r\nimport {useStores} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst Create = () => {\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n  }, [])\r\n\r\n  const {coloringFormStore} = useStores()\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"holderTop\">\r\n      <img src={straw} alt={\"\"} className =\"leftS\"/>\r\n      <p className=\"create-text\">select a model</p>\r\n      <img src={straw} alt={\"\"} className =\"rightS\"/>\r\n      </div>\r\n      <div \r\n        style={{\r\n          flexDirection: 'row',\r\n          height: 'auto'\r\n        }}\r\n      >\r\n        <div className = \"holder\">\r\n          <PlainLink to=\"/create-figurine\">\r\n            <img alt={\"\"} src={fig} className=\"create-link\"/>\r\n            <p className=\"create-text\">• figurine •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-vase\">\r\n            <img alt={\"\"} src={vase} className=\"create-link\"/>\r\n            <p className=\"create-text\">• vase •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-basket\">\r\n            <img alt={\"\"} src={basket} className=\"create-link\"/>\r\n            <p className=\"create-text\">• basket •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-swan\">\r\n            <img alt={\"\"} src={swan} className=\"create-link\"/>\r\n            <p className=\"create-text\">• swan •</p>\r\n          </PlainLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;","import React from 'react';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Gallery</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport DelayLink from 'react-delay-link';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst Browse = () => {\r\n  const {coloringFormStore, swanStore} = useStores();\r\n\r\n  // function loadColoringPage(model){\r\n  //   if (model === \"swan\"){\r\n  //     coloringFormStore.setPreload()\r\n  //     coloringFormStore.preloadDefaultColor(\"#000000\")\r\n  //     coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  //     // set swan dimensions so SwanStore can do the calcs to getDimensions\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n    <DelayLink delay={0} to=\"/colouring\" clickAction={console.log(\"hi\")} replace={false}>\r\n      <h1>Browse</h1>\r\n    </DelayLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;","export default __webpack_public_path__ + \"static/media/transparent.7b709eb2.png\";","import React from 'react';\r\nimport \"./create.css\"\r\nimport logo from \"../assets/transparent.png\"\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <div>\r\n        <img className=\"transparent-logo\" src={logo} alt=\"\"/>\r\n        <p className=\"coming-soon-text\">coming soon</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/paper.2a44f726.PNG\";","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Wing = (props) => {\r\n    const {vertices, purpose} = props\r\n    const my_vertices = useMemo(() => vertices.map(v => new THREE.Vector3(...v)), [])\r\n\r\n    const faces = []\r\n    if (purpose == \"wing\"){\r\n        faces.push(\r\n            new THREE.Face3(17, 8, 7),\r\n            new THREE.Face3(16, 17, 7),\r\n            new THREE.Face3(16, 7, 6),\r\n            new THREE.Face3(15, 16, 6),\r\n            new THREE.Face3(15, 6, 5),\r\n            new THREE.Face3(14, 15, 5),\r\n            new THREE.Face3(14, 5, 4),\r\n            new THREE.Face3(13, 14, 4),\r\n            new THREE.Face3(13, 4, 3),\r\n            new THREE.Face3(12, 13, 3),\r\n            new THREE.Face3(12, 3, 2),\r\n            new THREE.Face3(11, 12, 2),\r\n            new THREE.Face3(11, 2, 1),\r\n            new THREE.Face3(10, 11, 1),\r\n            new THREE.Face3(10, 1, 0),\r\n            new THREE.Face3(9, 10, 0),\r\n            // top row \r\n            new THREE.Face3(18, 17, 16),\r\n            new THREE.Face3(18, 16, 15),\r\n            new THREE.Face3(18, 15, 14),\r\n            new THREE.Face3(18, 14, 13),\r\n            new THREE.Face3(18, 13, 12),\r\n            new THREE.Face3(18, 12, 11),\r\n            new THREE.Face3(18, 11, 10),\r\n            new THREE.Face3(18, 10, 9),\r\n        )\r\n    }\r\n    else if (purpose == \"front-back\"){\r\n        faces.push(\r\n            new THREE.Face3(5, 4, 3),\r\n            new THREE.Face3(5, 3, 2),\r\n            new THREE.Face3(5, 2, 1),\r\n            new THREE.Face3(5, 1, 0),\r\n        )\r\n    }\r\n\r\n    else if (purpose == \"one-wing\"){\r\n        faces.push(\r\n            new THREE.Face3(9, 8, 7),\r\n            new THREE.Face3(9, 7, 6),\r\n            new THREE.Face3(9, 6, 5),\r\n            new THREE.Face3(9, 5, 4),\r\n            new THREE.Face3(9, 4, 3),\r\n            new THREE.Face3(9, 3, 2),\r\n            new THREE.Face3(9, 2, 1),\r\n            new THREE.Face3(9, 1, 0),\r\n        )\r\n    }\r\n\r\n    // const uvs = [[\r\n    //     // front\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // right\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // back\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // left\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // top\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // bottom\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    // ]]\r\n\r\n    function update(geometry){\r\n        geometry.computeFaceNormals()\r\n        geometry.computeVertexNormals();\r\n        for (let i = 0; i < geometry.vertices.length; i++){\r\n            geometry.vertices[i].x = vertices[i][0]\r\n            geometry.vertices[i].y = vertices[i][1]\r\n            geometry.vertices[i].z = vertices[i][2]\r\n        }\r\n        geometry.verticesNeedUpdate = true\r\n        geometry.normalsNeedUpdate = true;\r\n    }\r\n\r\n    return (\r\n        // <geometry vertices={my_vertices} faces={faces} faceVertexUVs={uvs} onUpdate={update}/>\r\n        <geometry vertices={my_vertices} faces={faces} onUpdate={update}/>\r\n    )\r\n  }\r\n\r\nexport default observer(Wing);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\nimport Wing from \"../Wing\"\r\n\r\nconst Swan = (props) => {\r\n    const {swanStore, result} = props\r\n    const image = result ? swanStore.texture : grid\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(image), []) \r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const swan_pts = swanStore.swanBodyPts()\r\n\r\n    const swan_body = \r\n    <group>\r\n        <mesh >\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh>\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const bottom = swanStore.diameter * swanStore.height_scale * 0.8 * -1\r\n    const rim_mesh = <mesh position = {[0,bottom-0.1,0]} rotation = {[1.57,0,0]}> \r\n    <torusGeometry args={[(swanStore.diameter * swanStore.bottom_scale/2)+0.1, swanStore.diameter/70, 10, 50]}/>\r\n    <meshPhongMaterial color={result? swanStore.default_color : \"#FF7E98\"} />\r\n    </mesh>\r\n\r\n    function getX(angle, radius){\r\n        return  radius * Math.cos(angle)\r\n    }\r\n\r\n    function getY(angle, radius){\r\n        return radius * Math.sin(angle)\r\n    }\r\n\r\n    const bottomRad = swanStore.diameter * swanStore.top_scale * 0.5\r\n    const midRad = swanStore.diameter * swanStore.top_scale * 0.5 * 0.73\r\n    const midHeight = swanStore.diameter * swanStore.height_scale * 1.7 * 0.5\r\n    const topHeight = swanStore.diameter * swanStore.height_scale * 1.9\r\n\r\n    const vertices =\r\n    [\r\n        // bottom row\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [getX(Math.PI/3.7, bottomRad), 0, getY(Math.PI/3.7, bottomRad)],  // 1\r\n        [getX(Math.PI/6, bottomRad), 0, getY(Math.PI/6, bottomRad)],  // 2\r\n        [getX(Math.PI/12, bottomRad), 0, getY(Math.PI/12, bottomRad)],  // 3\r\n        [getX(0, bottomRad), 0, getY(0, bottomRad)],  // 4\r\n        [getX(Math.PI/12, bottomRad), 0, -getY(Math.PI/12, bottomRad)],  // 5\r\n        [getX(Math.PI/6, bottomRad), 0, -getY(Math.PI/6, bottomRad)],  // 6\r\n        [getX(Math.PI/3.7, bottomRad), 0, -getY(Math.PI/3.7, bottomRad)],  // 7\r\n        [getX(Math.PI/2.8, bottomRad), 0, -getY(Math.PI/2.8, bottomRad)],  // 8\r\n        // middle row\r\n        [getX(Math.PI/2.8, midRad), midHeight, getY(Math.PI/2.8, midRad)],  // 9\r\n        [getX(Math.PI/3.7, midRad), midHeight, getY(Math.PI/3.7, midRad)],  // 10\r\n        [getX(Math.PI/6, midRad), midHeight, getY(Math.PI/6, midRad)],  // 11\r\n        [getX(Math.PI/12, midRad), midHeight, getY(Math.PI/12, midRad)],  // 12\r\n        [getX(0, midRad), midHeight, getY(0, midRad)],  // 13\r\n        [getX(Math.PI/12, midRad), midHeight, -getY(Math.PI/12, midRad)],  // 14\r\n        [getX(Math.PI/6, midRad), midHeight, -getY(Math.PI/6, midRad)],  // 15\r\n        [getX(Math.PI/3.7, midRad), midHeight, -getY(Math.PI/3.7, midRad)],  // 16\r\n        [getX(Math.PI/2.8, midRad), midHeight, -getY(Math.PI/2.8, midRad)],  // 17\r\n        // heights\r\n        [bottomRad/6, topHeight, 0]  // 18\r\n    ];\r\n\r\n    const big_vertices = \r\n    [\r\n        [-getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 0\r\n        [-getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 1\r\n        [-getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 2\r\n        [-getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 3        \r\n        [getX(Math.PI/2, bottomRad), 0, -getY(Math.PI/2, bottomRad)],  // 4\r\n        [getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 5  \r\n        [getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 6\r\n        [getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 7\r\n        [getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 8\r\n        [0, topHeight*1.1, -bottomRad*1.25]  // 9\r\n    ];\r\n\r\n    const F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [-getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 3\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 4\r\n        [0, topHeight/3, bottomRad/1.3]  // 5\r\n    ];\r\n\r\n    const big_F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 0\r\n        [-getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 3\r\n        [getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 4\r\n        [0, topHeight/1.7, bottomRad/1.8]  // 5\r\n    ];\r\n\r\n    const L_vertices = []\r\n    for (let i = 0; i < vertices.length; i++){\r\n        let temp = []\r\n        temp.push(-1 * vertices[i][0],vertices[i][1],vertices[i][2])\r\n        L_vertices.push(temp)\r\n    }\r\n\r\n    const B_vertices = []\r\n    for (let i = 0; i < F_vertices.length-1; i++){\r\n        let temp = []\r\n        temp.push(F_vertices[i][0],F_vertices[i][1], -1 * F_vertices[i][2])\r\n        B_vertices.push(temp)\r\n    }\r\n    B_vertices.push([0, topHeight/4, -bottomRad * 1.1])\r\n\r\n    const y_pos_wing = swanStore.diameter * swanStore.height_scale\r\n    const wings = \r\n    <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const one_wing = <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const shape = useMemo( () => new THREE.Shape(), [swanStore.diameter]);\r\n    const param = swanStore.diameter * 0.3\r\n    const t = param * 0.4\r\n    shape.moveTo(0, -param*1.3);\r\n    shape.lineTo(param*0.9, 0)\r\n    shape.quadraticCurveTo(param + param/3, param*1.5/2,param, param * 1.4)\r\n    shape.quadraticCurveTo(param/2, param * 1.9, -param/3,param)\r\n    shape.lineTo(-param/2.5, param - (1.5*t))\r\n    shape.quadraticCurveTo(param/2 , (param * 1.9) - t, param -t/1.5 , (param * 1.5) - t/1.5)\r\n    shape.quadraticCurveTo((param + param/3.5) -t/1.5, (param*1.5/2) + t/1.5, param -t/1.5, t/1.5)\r\n    \r\n    const depth = param/6\r\n\r\n    const extrudeSettings = {\r\n        steps: 100,  \r\n        depth: depth,  \r\n        bevelEnabled: false,   \r\n      };\r\n      \r\n\r\n    const offset = swanStore.diameter * swanStore.height_scale + (param*1.3) + ((topHeight/3) * 0)\r\n    const neck_mesh = <mesh position={[-depth/2,offset,(bottomRad/1)]} rotation={[0, Math.PI/2, 0]}>\r\n        <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n        <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n    </mesh>\r\n\r\n\r\n    const diameter_marker = getInputMarker((swanStore.diameter/2) + 0.1, 0)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            {swan_body}\r\n            {!swanStore.wings && one_wing}\r\n            {swanStore.wings && wings}\r\n            {!result && diameter_marker}\r\n            {swanStore.bottom_rim && rim_mesh}\r\n            {neck_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Swan);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Swan from \"../components/Swan\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateSwan = () => {\r\n\r\n  const { swanStore, coloringFormStore } = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  }, [swanStore.wings])\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"∧ ∧\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"∧\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[1, 50]} step={1} mode={2} values={[swanStore.diameter]} onUpdate={(val) => swanStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\nconst bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_bottom_rim(val)}\r\n    options={options}\r\n    initialSelectedIndex={swanStore.bottom_rim ? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\nconst wings_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_wings(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={swanStore.wings? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => swanStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={swanStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '400px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Swan swanStore={swanStore} result={false}/>\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">wings</p>\r\n          {wings_switch}\r\n          </div>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">bottom_rim</p>\r\n          {bottom_rim_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateSwan);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport {useFrame} from \"react-three-fiber\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n// import temp from \"../../assets/tempp.png\";\r\n\r\nconst Vase = (props) => {\r\n    const {vase} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n    // texture.wrapS = THREE.MirroredRepeatWrapping;\r\n    // texture.wrapT = THREE.MirroredRepeatWrapping;\r\n    // texture.repeat.set(2, 2.6);\r\n\r\n    const s_dtop_h = vase.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vase.scale_h/vase.height\r\n\r\n    const s_dtop = Math.max(1,vase.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,vase.dbottom * scale_factor)\r\n\r\n    const s_d1 = Math.max(1, vase.d1 * scale_factor)\r\n    const s_d1_h = (vase.d1_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d2 = Math.max(1, vase.d2 * scale_factor)\r\n    const s_d2_h = (vase.d2_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d3 = Math.max(1,vase.d3 * scale_factor)\r\n    const s_d3_h = (vase.d3_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = vase.top_rim ? getInputMarker((s_dtop/2) + 0.6, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = vase.bottom_rim ? getInputMarker((s_dbottom/2) + 0.6, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const d1_marker = getInputMarker((s_d1/2) + 0.1, s_d1_h)\r\n    const d2_marker = getInputMarker((s_d2/2) + 0.1, s_d2_h)\r\n    const d3_marker = getInputMarker((s_d3/2) + 0.1, s_d3_h)\r\n\r\n    if (vase.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.3,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (vase.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.3, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    const points = vase.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vase.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {vase.top_rim && top_rim_mesh}\r\n            {vase.bottom_rim && bottom_rim_mesh}\r\n            {vase.flat_bottom && flat_bottom_mesh}\r\n            {dbottom_marker}\r\n            {d1_marker}\r\n            {d2_marker}\r\n            {d3_marker}\r\n            {dtop_marker}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Vase);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Vase from \"../components/Vase\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateVase = () => {\r\n\r\n  const { vaseStore, coloringFormStore} = useStores();\r\n  \r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"vase\")\r\n  }, [])\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  function MultiHandle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    if (id == \"$$-0\" || id == \"$$-4\"){\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 2,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 3,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n          {...getHandleProps(id)}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 4, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[10, 100]} step={1} mode={2} values={[vaseStore.height]} onUpdate={(val) => vaseStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.dtop]} onUpdate={(val) => vaseStore.update_dtop(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d3 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d3]} onUpdate={(val) => vaseStore.update_d3(val[0])} >\r\n    <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d2 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d2]} onUpdate={(val) => vaseStore.update_d2(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d1 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d1]} onUpdate={(val) => vaseStore.update_d1(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.dbottom]} onUpdate={(val) => vaseStore.update_dbottom(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const dSlider = <Slider\r\n  rootStyle={sliderStyle}\r\n  domain={[0, 100]}\r\n  mode={2}\r\n  values={[0, vaseStore.d1_h, vaseStore.d2_h, vaseStore.d3_h, 100] /* three values = three handles */}\r\n  onUpdate={(val)=>vaseStore.update_d_heights(val)}\r\n  step={5}\r\n  >\r\n  <div style={railStyle} />\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <MultiHandle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const flat_bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_flat_bottom(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.flat_bottom ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={vaseStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            {/* <ambientLight intensity={0} /> */}\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.3}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n             {/* <spotLight position={[1, 10, 10]} angle={0.15} penumbra={1} /> */}\r\n            {/* <pointLight position={[-10, -10, -10]} /> */}\r\n            <Vase vase={vaseStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{background: '#FFE7E5', width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">2nd diameter</p>\r\n              {slider_d3}\r\n              <p className=\"text\">4th diameter</p>\r\n              {slider_d1}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n              <p className=\"text\">3rd diameter</p>\r\n              {slider_d2}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <p className=\"text\">diameter heights ( % )</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {dSlider}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'right', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom cover</p>\r\n            {flat_bottom_switch}\r\n          </div>\r\n          <div style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Basket = (props) => {\r\n    const {basketStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    const s_diameter = Math.max(1, basketStore.diameter * scale_factor)\r\n    const s_diameter_h = 0\r\n\r\n    // need rounded bottom shape , concave\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n    \r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = basketStore.top_rim ? getInputMarker((s_dtop/2) + 0.5, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = basketStore.bottom_rim ? getInputMarker((s_dbottom/2) + 0.5, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    const points = basketStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {diameter_marker}\r\n            {dtop_marker}\r\n            {dbottom_marker}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Basket);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Basket from \"../components/Basket\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateBasket = () => {\r\n\r\n  const { basketStore, coloringFormStore} = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"basket\")\r\n  }, [])\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[10, 100]} step={1} mode={2} values={[basketStore.height]} onUpdate={(val) => basketStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[basketStore.diameter]} onUpdate={(val) => basketStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[basketStore.dbottom]} onUpdate={(val) => basketStore.update_dbottom(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n\r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[basketStore.dtop]} onUpdate={(val) => basketStore.update_dtop(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const lid_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_lid(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.lid ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_flat_bottom(!val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.flat_bottom ? 1 : 0}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n</div>\r\n\r\n  const top_handle_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_top_handle(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.top_handle ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  const side_handles_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_side_handles(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.side_handles ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={basketStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '690px'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 100], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Basket basketStore={basketStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">middle diameter</p>\r\n              {slider_diameter}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">curved bottom</p>\r\n            {bottom_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top handle</p>\r\n            {top_handle_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">lid</p>\r\n            {lid_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">side handles</p>\r\n            {side_handles_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateBasket);","import React, {useState, useMemo} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []) \r\n\r\n    const s_diameter = figStore.diameter \r\n    const s_diameter_h = 0\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (figStore.diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const head =\r\n    <group>\r\n        <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.BackSide}/>\r\n        </mesh>\r\n    </group>\r\n\r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears === \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears === \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = figStore.diameter/7\r\n        const y_pos = (figStore.diameter * figStore.body_height)/2\r\n        const x_pos = (figStore.diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n                    break;\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {head}\r\n            {diameter_marker}\r\n            {figStore.ears === \"bear\" && bear_ears}\r\n            {figStore.ears === \"bunny\" && bunny_ears}\r\n            {figStore.ears === \"cat\" && cat_ears}\r\n            {figStore.ears === \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Figurine from \"../components/Figurine\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateFigurine = () => {\r\n\r\n  const { figStore, coloringFormStore} = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"fig\")\r\n  }, [])\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"◠ ◠\",\r\n        value: \"bear\",\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"〇 〇\",\r\n        value: \"sphere\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∧ ∧\",\r\n        value: \"cat\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∩ ∩\",\r\n        value: \"bunny\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },\r\n  ];\r\n\r\n  const ears = [\"bear\", \"sphere\", \"cat\", \"bunny\"]\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[1, 50]} step={1} mode={2} values={[figStore.diameter]} onUpdate={(val) => figStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n\r\n  const arms_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => figStore.update_arms(val)}\r\n      options={options}\r\n      initialSelectedIndex={figStore.arms ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  \r\nconst ears_switch = <div className=\"switch\"  style={{width: 360, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => figStore.update_ears(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={ears.indexOf(`${figStore.ears}`)}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n    fontSize={20}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => figStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={figStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '470px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Figurine figStore={figStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <p className=\"text\">arms</p>\r\n          {arms_switch}\r\n          <br/>\r\n          <p className=\"text\">ears</p>\r\n          {ears_switch}\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateFigurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultVase = (props) => {\r\n    const {vaseStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, vaseStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, vaseStore.modelDimensions.length)\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = vaseStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            // console.log(vaseStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n\r\n    const s_dtop_h = vaseStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vaseStore.scale_h/vaseStore.height\r\n\r\n    const s_dtop = vaseStore.dtop * scale_factor\r\n    const s_dbottom = vaseStore.dbottom * scale_factor\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    if (vaseStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.3,10,50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (vaseStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.3, 10, 50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const points = useMemo(() => vaseStore.updateCurvedPts(true), [vaseStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vaseStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshLambertMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh> \r\n            ))}\r\n            </group>\r\n            {vaseStore.top_rim && top_rim_mesh}\r\n            {vaseStore.bottom_rim && bottom_rim_mesh}\r\n            {vaseStore.flat_bottom && flat_bottom_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, figStore.modelDimensions.length-1);\r\n        insideRef.current = insideRef.current.slice(0, figStore.modelDimensions.length-1);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = figStore.modelDimensions.length-1\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            // console.log(figStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const texture_body = useMemo(() => new THREE.TextureLoader().load(figStore.textures[figStore.textures.length-1]), []) \r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (figStore.diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const divs = figStore.getBrokenHeadPts(Math.PI*theta_len)\r\n\r\n    const broken_head = \r\n    <group>\r\n        {divs.map((_, i) => (\r\n            <mesh key={i} position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        ))}\r\n        {divs.map((_, i) => (\r\n            <mesh key={i} position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => insideRef.current[i] = el} side={THREE.BackSide}/>\r\n            </mesh>\r\n        ))}\r\n    </group>\r\n    \r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears === \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears === \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = figStore.diameter/7\r\n        const y_pos = (figStore.diameter * figStore.body_height)/2\r\n        const x_pos = (figStore.diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n                    break;\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {broken_head}\r\n            {figStore.ears === \"bear\" && bear_ears}\r\n            {figStore.ears === \"bunny\" && bunny_ears}\r\n            {figStore.ears === \"cat\" && cat_ears}\r\n            {figStore.ears === \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultBasket = (props) => {\r\n    const {basketStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, basketStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, basketStore.modelDimensions.length);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = basketStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            // console.log(basketStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    // const points = basketStore.updateCurvedPts()\r\n    const points = useMemo(() => basketStore.updateCurvedPts(true), [basketStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh>\r\n            ))}\r\n            </group>   \r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultBasket);","export default __webpack_public_path__ + \"static/media/upper-banner.1523f22e.png\";","export default __webpack_public_path__ + \"static/media/lower-banner.94f2cf86.png\";","import React, {useEffect, useRef} from 'react';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport { observer } from \"mobx-react\";\r\nimport  ResultVase  from \"../components/ResultVase\"\r\nimport  Swan  from \"../components/Swan\"\r\nimport  ResultFigurine  from \"../components/ResultFigurine\"\r\nimport  ResultBasket  from \"../components/ResultBasket\"\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport './create-vase.css'\r\nimport upperbanner from \"../assets/upper-banner.png\"\r\nimport lowerbanner from \"../assets/lower-banner.png\"\r\nimport { FiDownload } from \"react-icons/fi\";\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst Result = () => {\r\n  const {coloringFormStore, vaseStore, swanStore, basketStore, figStore} = useStores()\r\n  \r\n  const canvasRef = useRef()\r\n  let modelStore; \r\n  if (coloringFormStore.model === \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model === \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model === \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model === \"basket\") modelStore = basketStore\r\n  modelStore.setDefaultColor(coloringFormStore.defaultColor)\r\n  modelStore.clearTextures()\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext(\"2d\")\r\n    // console.log(coloringFormStore.coloringFormData)\r\n    // console.log(coloringFormStore.coloringFormData[0].drawingSectionData[0].rowData[0].pixelColor)\r\n    // console.log(\"Num sections\", coloringFormStore.coloringFormData.length)\r\n    const px_size = 20\r\n    const half_px_width = px_size/2\r\n    const defaultCol = coloringFormStore.defaultColor;\r\n\r\n    for (let i = 0; i < coloringFormStore.coloringFormData.length; i++){\r\n      const sec_width = modelStore.modelDimensions[i][0]\r\n      const sec_height = modelStore.modelDimensions[i][1] \r\n      canvas.width = sec_width * px_size\r\n      canvas.height = sec_height * px_size\r\n      context.fillStyle = defaultCol\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n      for (let r = 0; r < sec_height; r++){\r\n        let offset = 0 \r\n        if (coloringFormStore.coloringFormData[i].drawingSectionData[r].offset){\r\n          offset = half_px_width\r\n          const last_idx = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData.length\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[last_idx-1].pixelColor\r\n          context.fillRect(0, px_size * r, half_px_width, px_size)\r\n        }\r\n        for (let c = 0; c < sec_width; c++){\r\n          if (coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor === defaultCol) continue\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor\r\n          context.fillRect((px_size * c) + offset, px_size * r, px_size, px_size)\r\n        }\r\n      }\r\n      var texture = canvas.toDataURL(\"image/png\", 1.0)\r\n      modelStore.storePic(texture)\r\n    }\r\n    coloringFormStore.setMsg(\"error\")\r\n  }, [])\r\n\r\n  // const modelRef = useRef()  \r\n\r\n  return (\r\n    // <canvas ref={canvasRef}/> // to test texture generation\r\n    <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '600px'}}>\r\n      <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '52%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 95], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: \"80%\", borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {0.8}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {0.8}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.3} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.1} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.1} />\r\n            {coloringFormStore.model === \"vase\" && <ResultVase vaseStore={vaseStore} />}\r\n            {coloringFormStore.model === \"swan\" && <Swan swanStore={swanStore} result={true}/>}\r\n            {coloringFormStore.model === \"fig\" && <ResultFigurine figStore={figStore}/>}\r\n            {coloringFormStore.model === \"basket\" && <ResultBasket basketStore={basketStore} />}\r\n          </Canvas>\r\n        <div className=\"containerCaption\">\r\n            <div style={{height: 10}}></div>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 10}}></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"containerRight\" style={{width: '48%', height: \"100%\", overflow: 'visible', float:'right', alignItems:\"center\", justifyContent:\"center\", position: \"relative\"}}>\r\n        <canvas style={{display:\"none\"}} ref={canvasRef}/>\r\n        <img alt={\"\"} src={upperbanner} className=\"banner\" style={{marginTop: 2}}/>\r\n        <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d-o diagram <span><FiDownload size={20}/></span></p>\r\n        </div>\r\n        {/* <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d model <span><FiDownload size={20}/></span></p>\r\n        </div> */}\r\n        <img alt={\"\"} src={lowerbanner} className=\"banner-b\"  />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Result);","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport Landing from './landing';\r\nimport About from './about';\r\nimport Learn from './learn';\r\nimport Contact from './contact';\r\nimport Create from './create';\r\nimport Gallery from './gallery';\r\nimport Browse from './browse';\r\nimport Login from './login';\r\nimport CreateSwan from \"./create-swan\"\r\nimport CreateVase from \"./create-vase\"\r\nimport CreateBasket from \"./create-basket\"\r\nimport CreateFigurine from \"./create-figurine\"\r\nimport Result from \"./result\"\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst Home = () => {\r\n\r\n  const {coloringFormStore} = useStores();\r\n\r\n  return (\r\n  <div className=\"Background\">\r\n    <div className=\"InnerApp\"> \r\n      <Navbar/>\r\n      <Switch>\r\n        <Route path='/about' component={About} />\r\n        <Route path='/create' component={Create} />\r\n        <Route path='/learn' component={Learn} />\r\n        <Route path='/contact' component={Contact} />\r\n        <Route path='/gallery' component={Gallery} />\r\n        <Route path='/browse' component={Browse} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/create-swan' component={CreateSwan} />\r\n        <Route path='/create-vase' component={CreateVase} />\r\n        <Route path='/create-basket' component={CreateBasket} />\r\n        <Route path='/create-figurine' component={CreateFigurine} />\r\n        {/* <Route path='/result' component={Result} /> */}\r\n        <Route path='/result'>\r\n          {coloringFormStore.resultMsg === \"error\" ? <Redirect to=\"/create\"/> : <Result />}\r\n        </Route>\r\n        <Route path='/' component={Landing}/>\r\n      </Switch>\r\n    </div>\r\n    <p style={{marginBottom: 30, marginTop: 20, letterSpacing: 1.5, color: \"#E33937\", fontSize:13}}>lina nguyen 🍓 2021</p>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect} from \"react\";\r\nimport \"./pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Pixel = (props) => {\r\n  const {formObject, PxModel} = props;\r\n\r\n  function borderColor() {\r\n    var color = PxModel.pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true)\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(PxModel.pixelColor === formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n    if (PxModel.pixelColor !== PxModel.oldColor){\r\n      formObject.updateCounter(PxModel.oldColor, PxModel.pixelColor)\r\n      PxModel.setOldColor(PxModel.pixelColor)\r\n    } \r\n    PxModel.setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    PxModel.setOldColor(PxModel.pixelColor);\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (PxModel.canChangeColor) {\r\n      PxModel.setPixelColor(PxModel.oldColor);\r\n    }\r\n\r\n    PxModel.setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: PxModel.pixelColor, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {PxModel.inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(Pixel);","import React, { useState } from \"react\";\r\nimport \"./specialPixel.css\";\r\n\r\nexport default function SpecialPixel(props) {\r\n  const {on, num, markerNum, displayRowNum, rounded} = props;\r\n\r\n  if (on){\r\n    if (markerNum){\r\n      return (\r\n        <div\r\n          className=\"specialPixelOn\"\r\n        ><p style={{marginTop: -4, fontSize: 10, marginLeft: -1.1, position:'absolute', background: \"#FF6C7B\", paddingLeft: 2.5, paddingRight:2.5, borderRadius:6, color:\"white\"}}> {markerNum}</p></div>\r\n      );\r\n    } else {\r\n      if (rounded){\r\n        return (\r\n          <div className=\"roundedRight\"\r\n          ></div>\r\n        );\r\n      }\r\n      else{\r\n        return (\r\n          <div className=\"specialPixelOn\"\r\n          ></div>\r\n        );\r\n      }\r\n    }\r\n  } \r\n  else {\r\n    if (displayRowNum){\r\n      return (\r\n        <div\r\n          className=\"rowMarkerPixel\"\r\n        >\r\n          <p style={{fontSize:9, marginLeft: 5, marginTop:-0.5, position:'absolute'}}>{displayRowNum}</p>\r\n          </div>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <div\r\n          className=\"specialPixelOff\"\r\n        >\r\n          <p style={{fontSize:10, marginLeft: 4, marginTop: -4, position:'absolute'}}>{num}</p>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n}","import React, {useEffect} from \"react\";\r\nimport \"./row.css\";\r\nimport Pixel from \"../Pixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst Row = (props) => {\r\n  const {formObject, RowModel} = props;\r\n  let pixels = [];\r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  if (RowModel.rowData.length == 0){\r\n    for (let i = 0; i < RowModel.width; i++) {\r\n      RowModel.addPx()\r\n    }\r\n  }\r\n  for (let i = 0; i < RowModel.width; i++) {\r\n    if(formObject.inverted) RowModel.rowData[i].setInverted()\r\n    pixels.push(<Pixel key={i} formObject={formObject} PxModel={RowModel.rowData[i]}/>);\r\n  }\r\n\r\n  pixels.push(<SpecialPixel key={RowModel.width} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  return <div style={{marginLeft: RowModel.offset}} className=\"row\">{pixels}</div>;\r\n}\r\n\r\nexport default observer(Row)","import React from \"react\";\r\nimport \"./specialRow.css\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\n\r\nexport default function SpecialRow(props) {\r\n  const { width, offset, specialTop, specialBottom } = props;\r\n\r\n  let pixels = [];\r\n\r\n  const my_dict = specialBottom ? specialBottom : specialTop\r\n  let count = 0 \r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} num={\"\"}/>)\r\n\r\n  for (let i = 0; i < width; i++) {\r\n    if (i in my_dict){\r\n      if (my_dict[i] == 1){\r\n        count += 1\r\n        pixels.push(<SpecialPixel key={i} on={true} markerNum={count}/>);\r\n      }\r\n      else if (my_dict[i] == -1){\r\n        pixels.push(<SpecialPixel key={i} on={true} rounded={true}/>);\r\n      }\r\n      else if (i == width-1 && my_dict[i] == 0){\r\n        pixels[0] = <SpecialPixel key={i} on={true}/>\r\n      }\r\n      else{\r\n        pixels.push(<SpecialPixel key={i} on={true}/>);\r\n      }\r\n    }\r\n    else{\r\n        pixels.push(<SpecialPixel key={i} on={false} num = {i+1}/>);\r\n    }\r\n  }\r\n\r\n  return <div style={{marginLeft: offset}} className=\"specialRow\">{pixels}</div>;\r\n}","import React, { useEffect, useState, useRef} from \"react\";\r\nimport \"../Pixel/pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedPixel = (props) => {\r\n  const {formObject, inverted} = props;\r\n\r\n  const [pixelColor, setPixelColor] = useState(formObject.defaultColor);\r\n  const [oldColor, setOldColor] = useState(pixelColor);\r\n  const [canChangeColor, setCanChangeColor] = useState(true);\r\n\r\n  function borderColor() {\r\n    var color = pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n  \r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true, true)\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(pixelColor == formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    setPixelColor(formObject.selectedColor);\r\n    if (pixelColor != oldColor){\r\n      formObject.updateCounter(oldColor, pixelColor)\r\n      setOldColor(pixelColor)\r\n    }\r\n    setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    setOldColor(pixelColor);\r\n    setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (canChangeColor) {\r\n      setPixelColor(oldColor);\r\n    }\r\n\r\n    setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: pixelColor, width: 20, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(UntrackedPixel);","import React, {useEffect} from \"react\";\r\nimport \"../Row/row.css\";\r\nimport UntrackedPixel from \"../UntrackedPixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst UntrackedRow = (props) => {\r\n  const {wing, formObject, numPx, offset, display, inverted} = props;\r\n  let pixels = [];\r\n\r\n  if(display) pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={display}/>)\r\n\r\n  for (let i = 0; i < numPx; i++) {\r\n    pixels.push(<UntrackedPixel key={i} formObject={formObject} inverted={inverted} />);\r\n  }\r\n\r\n  if (!wing) pixels.push(<SpecialPixel key={numPx} on={false} displayRowNum={display} />)\r\n  \r\n  return <div style={{marginLeft: offset}} className=\"row\">{pixels}</div>;\r\n  \r\n}\r\n\r\nexport default observer(UntrackedRow)","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst TriangleSection = (props) => {\r\n  const {wing, caption, width, formObject, elevation, firstRowDisplay, inverted} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = [];\r\n  \r\n  // height = width \r\n  const px_width = 21 // 21 is the px width w border\r\n  for (let i = 0; i < width; i++) {\r\n    let var_offset = (0.5*(px_width)*(width-i-1))\r\n    let displayNum = elevation+width-i\r\n    if (!firstRowDisplay){\r\n      if (i < width - 1) var_offset = (0.5*(px_width)*(width-i-3))\r\n      else displayNum = false\r\n    }\r\n    rows.push(<UntrackedRow key={i} wing={wing} numPx={i+1} offset={var_offset} formObject={formObject} display={displayNum} inverted={inverted}/>);\r\n  }\r\n\r\n  return (\r\n    <div id=\"triangleSection\">\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 0, marginLeft: 0, marginRight:0}}>\r\n        {caption && <p id=\"text\">{caption}</p>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(TriangleSection)","  \r\nimport React, { useRef} from \"react\";\r\nimport \"./drawingSection.css\";\r\nimport Row from \"../Row\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport TriangleSection from \"../TriangleSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst DrawingSection = (props) => {\r\n  const {caption, specialTop, specialBottom, formObject, DrawingSectionModel} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = []; \r\n  let swanUpper = [];\r\n\r\n  if (formObject.model === \"swan\"){\r\n    if (formObject.swan_two_wings){\r\n      const wing_width = 2 * Math.round(0.195 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - (2 * wing_width)\r\n      const chest_width = Math.ceil(remainder/2)\r\n      const back_width = Math.floor(remainder/2)\r\n      const wing1 = <TriangleSection key={0} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true}/> \r\n      const wing2 = <TriangleSection key={1} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} /> \r\n      const chest = <TriangleSection key={2} wing={true} width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} />\r\n      const back = <TriangleSection key={3} wing={true} width={back_width} formObject={formObject} elevation={DrawingSectionModel.height} inverted={true}/>\r\n      swanUpper.push(wing1, chest, wing2, back)\r\n    } \r\n    else {\r\n      const wing_width = Math.round(0.75 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - wing_width\r\n      const chest_width = remainder - 2\r\n      const wing = <TriangleSection key={0} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} inverted={true}/> \r\n      const chest = <TriangleSection key={1} wing={true} width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} />\r\n      swanUpper.push(wing, chest)\r\n    }\r\n  }\r\n\r\n  if (formObject.model != \"swan\") rows.push(<SpecialRow key={-1} offset={0} width={DrawingSectionModel.width} specialTop={specialTop} />)\r\n  \r\n  if(DrawingSectionModel.drawingSectionData.length === 0){\r\n    for (let i = 0; i < DrawingSectionModel.height; i++){\r\n      DrawingSectionModel.addRow()\r\n    }\r\n  }\r\n  for (let i = 0; i < DrawingSectionModel.height; i++) {\r\n    DrawingSectionModel.drawingSectionData[i].setWidth(DrawingSectionModel.width)\r\n    DrawingSectionModel.drawingSectionData[i].setDisplayRowNum(DrawingSectionModel.height-i)\r\n    if (i%2 === 1){\r\n      DrawingSectionModel.drawingSectionData[i].setOffset()\r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n    else{ \r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n  }\r\n  \r\n  if(DrawingSectionModel.increasing){\r\n    if (DrawingSectionModel.height%2 === 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5*2} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (DrawingSectionModel.height%2 === 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={0} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {formObject.model === \"swan\" && <div style={{display:\"flex\", alignItems:\"flex-end\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n          {swanUpper}\r\n        </div>}\r\n        {caption && <p id=\"text\">{caption}</p>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(DrawingSection)","import React, {useRef} from 'react';\r\nimport DrawingSection from \"../DrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst OrigamiObject = (props) => {\r\n    const {caption, dimensions, formObject} = props;\r\n  \r\n    const objectRef = useRef();\r\n\r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    if (formObject.model === \"swan\"){\r\n      specialTop = Array(dimensions.length).fill({})\r\n      specialBottom = Array(dimensions.length).fill({})\r\n    }\r\n    else {\r\n      if (dimensions[dimensions.length-2][0]-dimensions[dimensions.length-1][0] < 0) formObject.setInverted()\r\n\r\n      for (let i = dimensions.length-2; i >= 0; i--){\r\n        let sTopCurr = {}\r\n        let sBottomCurr = {}\r\n\r\n        const curr = dimensions[i+1][0]\r\n        const next = dimensions[i][0]\r\n        let diff = next-curr // number of pieces need to add or subtract \r\n\r\n        let distribute = 0 \r\n        let remainder = 0\r\n        let spacing = 0\r\n        if (diff === 0){\r\n          specialTop = Array(dimensions.length).fill({})\r\n          specialBottom = Array(dimensions.length).fill({})\r\n        }\r\n        else if (diff > 0){ // increasing - 2 pcs per increase\r\n          sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n          distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n          remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = -1\r\n            idx += spacing_arr[i] + 2\r\n            i += 1 \r\n          }\r\n          let last_idx = 2\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n            sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 3\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)    \r\n          increasing.unshift(true) \r\n        } \r\n        else { // decreasing \r\n          sBottomCurr = {0: 1, 1: -1}\r\n          diff = -1 * diff\r\n          distribute = curr - (3 * diff)\r\n          remainder = distribute % diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = 0\r\n            sTopCurr[idx+2] = -1\r\n            idx += spacing_arr[i] + 3\r\n            i += 1 \r\n          }\r\n          let last_idx = 1\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 2\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)  \r\n          increasing.unshift(false)\r\n        }\r\n      }\r\n      if (formObject.model === \"fig\"){\r\n        specialTop[specialTop.length-1] = {}\r\n        specialBottom[specialBottom.length-1] = {}\r\n      } \r\n      specialTop.unshift({})\r\n      specialBottom.push({})\r\n      increasing.push(false)\r\n    }\r\n\r\n    let sections = [];\r\n  \r\n    if (formObject.coloringFormData.length == 0){\r\n      for (let i = 0; i < dimensions.length; i++) {\r\n        formObject.addDrawingSection()\r\n      }\r\n    }\r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      formObject.coloringFormData[i].setWidthHeight(dimensions[i][0], dimensions[i][1])\r\n      formObject.coloringFormData[i].setIncreasing(increasing[i])\r\n      let caption = false\r\n      if (formObject.model === \"fig\" && i === dimensions.length-1) caption = \"figurine body\"\r\n      sections.push(<DrawingSection key={i} caption={caption} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} formObject={formObject} DrawingSectionModel={formObject.coloringFormData[i]} />);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        <div id=\"sections\" ref={objectRef}>\r\n          <p id=\"text\">{caption}</p>\r\n          {sections}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(OrigamiObject)","export default __webpack_public_path__ + \"static/media/rim.90d28599.png\";","export default __webpack_public_path__ + \"static/media/halfRim.934ee4ec.png\";","export default __webpack_public_path__ + \"static/media/neck.d9f33158.png\";","import React from \"react\";\r\nimport rim_image from \"../../assets/rim.png\";\r\nimport half_rim_image from \"../../assets/halfRim.png\";\r\nimport neck_image from \"../../assets/neck.png\"\r\nimport \"./rim.css\"\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\n\r\nconst Rim = (props) => {\r\n    const {swan, full, caption, circ} = props \r\n    return (\r\n        <div className=\"rimDiv\">\r\n            <p id=\"text\">{caption}</p>\r\n            {full && <img src={rim_image} className=\"rim\" />}\r\n            {!full && !swan  && <img src={half_rim_image} className=\"half_rim\" />}\r\n            {swan && <img src={neck_image} className=\"neck\" />} \r\n            <p id=\"text\">{circ} pieces</p>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Rim;","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedDrawingSection = (props) => {\r\n  const {arm, open, bunny, specialTop, specialBottom, increasing, formObject, dimensions} = props;\r\n\r\n  let rows = []; \r\n  let inverted = false\r\n\r\n  if (!bunny) rows.push(<SpecialRow key={-1} offset={0} width={dimensions[0]} specialTop={specialTop} />)\r\n  else{\r\n    const end_width = Math.floor(dimensions[0]*(0.5))\r\n    const num_rows = dimensions[0] - end_width\r\n    for (let i = 0; i < num_rows; i++){\r\n      rows.push(<UntrackedRow key={dimensions[1]+1+i} numPx={end_width+i} offset={10.5*(num_rows-i)} formObject={formObject} display={dimensions[1]+num_rows-i} inverted={inverted}/>)\r\n    }\r\n\r\n  }\r\n  \r\n  for (let i = 0; i < dimensions[1]; i++) {\r\n    arm && i == dimensions[1]-1 ? inverted = true : inverted = false\r\n    if (i%2 == 1){\r\n      let numPx = dimensions[0]\r\n      if (open) numPx -= 1\r\n      rows.push(<UntrackedRow key={i} numPx={numPx} offset={10.5} formObject={formObject} display={dimensions[1]-i} inverted={inverted}/>);\r\n    }\r\n    else{ \r\n      rows.push(<UntrackedRow key={i} numPx={dimensions[0]} offset={0} formObject={formObject} display={dimensions[1]-i} inverted={inverted}/>);\r\n    }\r\n  }\r\n  \r\n  if(increasing){\r\n    if (dimensions[1]%2 == 1){\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5*2} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (dimensions[1]%2 == 1){\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={0} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(UntrackedDrawingSection)","import React, {useRef} from 'react';\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedOrigamiObject = (props) => {\r\n    const {dimensions, formObject} = props;\r\n  \r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    for (let i = dimensions.length-2; i >= 0; i--){\r\n      let sTopCurr = {}\r\n      let sBottomCurr = {}\r\n\r\n      const curr = dimensions[i+1][0]\r\n      const next = dimensions[i][0]\r\n      let diff = next-curr // number of pieces need to add or subtract \r\n\r\n      let distribute = 0 \r\n      let remainder = 0\r\n      let spacing = 0\r\n      \r\n      if (diff == 0){\r\n        specialTop = Array(dimensions.length).fill({})\r\n        specialBottom = Array(dimensions.length).fill({})\r\n      }\r\n      else if (diff > 0){ // increasing - 2 pcs per increase\r\n        sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n        distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n        remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n        spacing = Math.floor(distribute/diff)\r\n        let spacing_arr = Array(diff).fill(spacing)\r\n        for (let i = 0; i < 2; i++){\r\n          let j = i\r\n          while (j < diff && remainder > 0){\r\n            spacing_arr[j] += 1 \r\n            remainder -= 1 \r\n            j += 2 \r\n          }\r\n        }\r\n        let i = 0 \r\n        let idx = 0 \r\n        while(i < diff){\r\n          sTopCurr[idx] = 1\r\n          sTopCurr[idx+1] = -1\r\n          idx += spacing_arr[i] + 2\r\n          i += 1 \r\n        }\r\n        let last_idx = 2\r\n        for (let i = 0; i < spacing_arr.length-1; i ++){\r\n          sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n          sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n          sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n          last_idx = last_idx + spacing_arr[i] + 3\r\n        }  \r\n        specialTop.unshift(sTopCurr)\r\n        specialBottom.unshift(sBottomCurr)    \r\n        increasing.unshift(true) \r\n      } \r\n      else { // decreasing \r\n        sBottomCurr = {0: 1, 1: -1}\r\n        diff = -1 * diff\r\n        distribute = curr - (3 * diff)\r\n        remainder = distribute % diff\r\n        spacing = Math.floor(distribute/diff)\r\n        let spacing_arr = Array(diff).fill(spacing)\r\n        for (let i = 0; i < 2; i++){\r\n          let j = i\r\n          while (j < diff && remainder > 0){\r\n            spacing_arr[j] += 1 \r\n            remainder -= 1 \r\n            j += 2 \r\n          }\r\n        }\r\n        let i = 0 \r\n        let idx = 0 \r\n        while(i < diff){\r\n          sTopCurr[idx] = 1\r\n          sTopCurr[idx+1] = 0\r\n          sTopCurr[idx+2] = -1\r\n          idx += spacing_arr[i] + 3\r\n          i += 1 \r\n        }\r\n        let last_idx = 1\r\n        for (let i = 0; i < spacing_arr.length-1; i ++){\r\n          sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n          sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n          last_idx = last_idx + spacing_arr[i] + 2\r\n        }  \r\n        specialTop.unshift(sTopCurr)\r\n        specialBottom.unshift(sBottomCurr)  \r\n        increasing.unshift(false)\r\n      }\r\n    }\r\n    specialTop.unshift({})\r\n    specialBottom.push({})\r\n    increasing.push(false)\r\n\r\n    let sections = [];\r\n  \r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      sections.push(<UntrackedDrawingSection key={i} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} increasing={increasing[i]} formObject={formObject} dimensions={dimensions[i]}/>);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        {sections}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(UntrackedOrigamiObject)","import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Bottom = (props) => {\r\n    const {flat, circ, caption, formObject} = props \r\n    let object = <div></div>\r\n    let dimensions = []\r\n\r\n    if (flat){\r\n        dimensions = [[50,12],[40,11],[42,5]] // top to bottom \r\n        object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n    }\r\n    else{\r\n        // curved bottom/lid for basket\r\n        dimensions = [[50,12],[30,11],[20,5]] // top to bottom \r\n        object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Bottom;","import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Arm = (props) => {\r\n    const {caption, size, formObject} = props;\r\n    const dimensions = [10,4] // top to bottom \r\n    const object = <UntrackedDrawingSection arm={true} specialTop = {[]} specialBottom = {[]} formObject={formObject} dimensions={dimensions}/>\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Arm;","import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst BunnyOrHandle = (props) => {\r\n    const {caption, size, formObject} = props;\r\n    let object = <div></div>\r\n    let sz = 0\r\n    let w_sz = 0\r\n    let input_sz = 0\r\n    const lim = 50\r\n\r\n    if (caption == \"bunny ear\"){\r\n        // height has to be odd number to have the base bigger\r\n        object = <UntrackedDrawingSection bunny={true} open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[size,13]} />\r\n    }\r\n    else {\r\n        sz = size*21\r\n        input_sz = Math.min(sz, lim)\r\n        w_sz = size/2 \r\n        object = <UntrackedDrawingSection open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[w_sz,input_sz]} />\r\n    }\r\n\r\n    return (    \r\n      <div>\r\n        <p id=\"text\">{caption}</p>\r\n        {object}\r\n        {sz > lim && <p id=\"text\">+ {sz-lim} more rows ...</p>}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default BunnyOrHandle;","import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Sphere = (props) => {\r\n    const {size, caption, formObject} = props \r\n    let object = <div></div>\r\n    let dimensions = []\r\n\r\n    function calc(){\r\n        return [[6,5],[8,5],[5,5]]\r\n    }\r\n\r\n    // curved Sphere/lid for basket\r\n    dimensions = calc() // top to Sphere \r\n    object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Sphere;","import React from 'react';\r\nimport { observer } from \"mobx-react\";\r\nimport Rim from \"../Rim\";\r\nimport Bottom from \"../Bottom\";\r\nimport Arm from \"../Arm\"\r\nimport BunnyOrHandle from \"../BunnyOrHandle\"\r\nimport TriangleSection from \"../TriangleSection\"\r\nimport Sphere from \"../Sphere\"\r\n\r\nconst Appendages = (props) => {\r\n    const {modelStore, formObject} = props;\r\n  \r\n    let bottoms = []\r\n    let sections = []\r\n    let rims = []\r\n    let key = 0\r\n\r\n    // top_rim, bottom_rim, flat_bottom, arms, ears, lid, top_handle, side_handles\r\n\r\n    if (modelStore.flat_bottom){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      bottoms.push(<Bottom key={key} caption={\"flat bottom\"} flat={true} circ={circ} lid={false} formObject={formObject}/>) // circ = circumfrence\r\n      key += 1\r\n    }\r\n    else if (formObject.model === \"basket\"){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      bottoms.push(<Bottom key={key} caption={\"curved bottom\"} flat={false} circ={circ} lid={false} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.lid){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      bottoms.push(<Bottom key={key} caption={\"lid\"} flat={false} circ={circ} formObject={formObject}/>)\r\n      key += 1\r\n      sections.push(<Sphere key={key} caption={\"lid handle\"} size={circ} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.top_handle){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      sections.push(<BunnyOrHandle key={key} caption={\"top handle\"} size={10} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.arms){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      sections.push(<Arm key={key} caption={\"arm\"} size={circ} formObject={formObject}/>)\r\n      key += 1\r\n      sections.push(<Arm key={key} caption={\"arm\"} size={circ} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.ears !== \"\"){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0] // make ears prop. to body circ\r\n      if (modelStore.ears === \"bear\"){\r\n        sections.push(<Rim key={key} full={false} caption={\"bear ear\"} circ={circ}/>)\r\n        key += 1\r\n        sections.push(<Rim key={key} full={false} caption={\"bear ear\"} circ={circ}/>)\r\n        key += 1 \r\n      }\r\n      else if (modelStore.ears === \"bunny\"){\r\n        sections.push(<BunnyOrHandle key={key} caption={\"bunny ear\"} size={10} formObject={formObject}/>)\r\n        key += 1\r\n        sections.push(<BunnyOrHandle key={key} caption={\"bunny ear\"} size={10} formObject={formObject}/>)\r\n      }\r\n      else if (modelStore.ears === \"sphere\"){\r\n        sections.push(<Sphere key={key} caption={\"round ear\"} size={circ} formObject={formObject}/>)\r\n        key += 1\r\n        sections.push(<Sphere key={key} caption={\"round ear\"} size={circ} formObject={formObject}/>)\r\n      }\r\n      else if (modelStore.ears === \"cat\"){\r\n        sections.push(<TriangleSection key={key} caption={\"cat ear\"} width={10} formObject={formObject} elevation={0} firstRowDisplay={true} inverted={false} />)\r\n        key += 1\r\n        sections.push(<TriangleSection key={key} caption={\"cat ear\"} width={10} formObject={formObject} elevation={0} firstRowDisplay={true} inverted={false} />)\r\n      }\r\n      key += 1\r\n    }\r\n    if (modelStore.side_handles){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      rims.push(<Rim key={key} full={false} caption={\"side handle\"} circ={circ}/>) // static picture\r\n      key += 1\r\n      rims.push(<Rim key={key} full={false} caption={\"side handle\"} circ={circ}/>) \r\n      key += 1\r\n    }\r\n    if (modelStore.top_rim){\r\n      rims.push(<Rim key={key} full={true} caption={\"top rim\"} circ={modelStore.getDimensions()[0][0]}/>) // static picture\r\n      key += 1\r\n    }\r\n    if (modelStore.bottom_rim){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      rims.push(<Rim key={key} full={true} caption={\"bottom rim\"} circ={circ}/>) // static picture\r\n      key += 1\r\n    }\r\n    if (formObject.model === \"swan\"){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      rims.push(<Rim key={key} swan={true} caption={\"neck\"} circ={circ}/>) // static picture\r\n      key += 1\r\n    }\r\n\r\n    return (\r\n      <div id=\"Appendages\">\r\n        <div style={{display:\"inline-block\", marginLeft: 10.5, marginBottom: 3}}>\r\n          {bottoms}\r\n          <div style={{display:\"flex\", alignItems:\"flex-start\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n            {sections}\r\n            {rims}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(Appendages)","import React, {useState, useRef, useEffect} from 'react';\r\nimport { TwitterPicker } from \"react-color\";\r\nimport OrigamiObject from \"../components/OrigamiObject\";\r\nimport \"./colouringPage.css\";\r\n// import premade from \"./premade\";\r\nimport Sticky from 'react-stickynode';\r\nimport { observer } from \"mobx-react\";\r\nimport logo from \"../assets/complex-logo.png\"\r\n// import {PlainLink as Link} from '../components/Navbar/NavbarElements';\r\nimport { AiOutlineInfo } from \"react-icons/ai\";\r\nimport { FiTrash } from \"react-icons/fi\";\r\nimport { IoChevronForward, IoChevronBack } from \"react-icons/io5\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport DelayLink from 'react-delay-link';\r\nimport Appendages from \"../components/Appendages\";\r\n\r\n\r\nconst Colouring = () => {\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [showPickerDefault, setShowPickerDefault] = useState(false);\r\n  const [colorPaletteIdx, setColorIdx] = useState(0);\r\n  const [dColorPaletteIdx, setDColorIdx] = useState(0);\r\n  const [colorPalette, setColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']) \r\n  const [dColorPalette, setDColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'])\r\n  \r\n  // useEffect(() => {\r\n  //   // // coloringFormData = drawing sections\r\n  //   // // drawingSectionData = rows\r\n  //   // // rowData = pixels\r\n  //   // if (coloringFormStore.preload){\r\n  //   //   for (let i = 0; i < premade[\"swan1\"][0].length; i++){\r\n  //   //     const curr_px = premade[\"swan1\"][0][i]\r\n  //   //     coloringFormStore.coloringFormData[curr_px[0]].drawingSectionData[curr_px[1]].rowData[curr_px[2]].setPixelColor(curr_px[3])\r\n  //   //   }\r\n  //   // }\r\n  //   coloringFormStore.setMsg(\"error\")\r\n  // }, [])\r\n\r\n  const diagramRef = useRef();\r\n  const appendagesRef = useRef();\r\n  const {coloringFormStore, vaseStore, swanStore, figStore, basketStore} = useStores();\r\n  let modelStore;\r\n  if (coloringFormStore.model === \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model === \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model === \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model === \"basket\") modelStore = basketStore\r\n\r\n  function changeColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setColor(search);\r\n    if (!colorPalette.includes(search)){\r\n      let new_palette = colorPalette\r\n      new_palette[colorPaletteIdx] = search\r\n      setColorPalette(new_palette)\r\n      const new_idx = (colorPaletteIdx + 1) % 10\r\n      setColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  function changeDefaultColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setDefaultColor(search);\r\n    if (!dColorPalette.includes(search)){\r\n      let new_palette = dColorPalette\r\n      new_palette[dColorPaletteIdx] = search\r\n      setDColorPalette(new_palette)\r\n      const new_idx = (dColorPaletteIdx + 1) % 10\r\n      setDColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  const myDimensions = modelStore.getDimensions();\r\n  const absolute = coloringFormStore.maxWidth > 52 ? true : false \r\n\r\n  let myHeight = 0 \r\n  const myYMargin = 20\r\n  const px_y = 13\r\n  const px_border = 1\r\n  const marker_y = 20\r\n\r\n  for (let i = 0; i < myDimensions.length; i++){\r\n    const y = myDimensions[i][1]\r\n    myHeight += (y * (px_y + px_border)) + (1.5*myYMargin) + (2*marker_y)\r\n  }\r\n\r\n  if (coloringFormStore.model === \"swan\"){\r\n    myHeight += (swanStore.modelDimensions[0][0] * 0.75 * (px_y + px_border) * 1.2)\r\n    myHeight += 600\r\n  }\r\n\r\n  else if (coloringFormStore.model === \"fig\"){\r\n    myHeight *= 2\r\n  }\r\n\r\n  if (modelStore.flat_bottom || coloringFormStore.model === \"basket\"){\r\n    myHeight *= 2\r\n    if(modelStore.lid){\r\n      myHeight *= 2\r\n    }\r\n  }\r\n\r\n  if ((modelStore.top_rim || modelStore.bottom_rim) && ! coloringFormStore.model === \"swan\"){\r\n    myHeight += 600\r\n  }\r\n\r\n  myHeight += coloringFormStore.counter.length * 55\r\n\r\n  const colorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">pixel color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={()=> setShowPicker(!showPicker)} \r\n        style={{background: coloringFormStore.selectedColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette\">\r\n        {showPicker &&  <TwitterPicker colors={colorPalette} triangle=\"top-left\" color={coloringFormStore.selectedColor} onChangeComplete={changeColor} />}\r\n      </div>\r\n    </div>\r\n  \r\n  const defaultColorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">primary color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={() => setShowPickerDefault(!showPickerDefault)} \r\n        style={{background: coloringFormStore.defaultColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette-d\" >\r\n        {showPickerDefault &&  <TwitterPicker colors={dColorPalette} triangle=\"top-left\" color={coloringFormStore.defaultColor} onChangeComplete={changeDefaultColor} />}\r\n      </div>\r\n    </div>\r\n\r\n  const paintByPixel = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(false)}> \r\n      <p className = \"label-inside\">paint by pixel</p>\r\n    </div>\r\n  </div>\r\n\r\n  const sprayPaint = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(true)}> \r\n      <p className = \"label-inside\">spray paint</p>\r\n    </div>\r\n  </div>\r\n\r\n  const logoObject = <div className = \"logo-object\">\r\n    <p className = \"label\" >3d-o</p>\r\n    <img className = \"logo\" src={logo} onClick={() => savePics()} alt=\"\"/>\r\n    {showInfo && <div className=\"info-popup\">info here</div>}\r\n  </div>  \r\n\r\n  function savePics(){\r\n    exportComponentAsPNG(diagramRef, {fileName: \"3do-diagram\"})\r\n    exportComponentAsPNG(appendagesRef, {fileName: \"3do-diagram-appendages\"})\r\n  }\r\n\r\n  const backButton = \r\n  <div className = \"back\">\r\n    <div className = \"nav\" onClick={() => console.log(\"hi\")}> \r\n      <IoChevronBack size={25} style={{color: 'white'}}/>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  const nextButton = \r\n  <div className = \"next\">\r\n    <DelayLink delay={0} to=\"/result\" clickAction={nextPage} replace={false}>\r\n      <div className = \"nav\"> \r\n          <IoChevronForward size={25} style={{color: 'white'}}/>\r\n      </div>\r\n    </DelayLink>\r\n  </div>\r\n\r\n  function nextPage(){\r\n    coloringFormStore.setMsg(true)\r\n    coloringFormStore.exportComponent(diagramRef)\r\n    coloringFormStore.exportComponent(appendagesRef, true)\r\n    }\r\n\r\n  const clear = <div className = \"logo-object\">\r\n    <p className = \"label\">clear</p>\r\n    <div className = \"icon\"\r\n      onClick={()=> coloringFormStore.clearAll()} >\r\n      <FiTrash  size={20} style={{color: 'white'}}/>\r\n      <br />\r\n    </div>\r\n  </div>\r\n\r\n  const info = <div className = \"logo-object\">\r\n  <p className = \"label\">info</p>\r\n  <div className = \"icon\"\r\n    onClick={()=> setShowInfo(!showInfo)} \r\n    >\r\n    <AiOutlineInfo size={23} style={{color: 'white'}}/>\r\n  </div>\r\n  </div>\r\n\r\n  let caption = `${coloringFormStore.model}`\r\n  if (coloringFormStore.model === \"fig\"){\r\n    caption = \"figurine head\"\r\n  }\r\n  else if (coloringFormStore.model === \"swan\"){\r\n    caption = \"swan wings + body\"\r\n  }\r\n\r\n  function colorEntry(key, col, num){\r\n    let sheets = Math.ceil(parseInt(num)/coloringFormStore.size)\r\n    let sheetsString = \"\"\r\n    sheets > 1 ? sheetsString = \"sheets\" : sheetsString = \"sheet\"\r\n    let pieces = \"\"\r\n    parseInt(num) > 1 ? pieces = \"pieces\" : pieces = \"piece\"\r\n    return <div key={key} style={{display:'inline-block', width: '100%'}}>\r\n      \r\n      <p style={{marginTop:10, marginBottom:0, marginLeft:20, float:\"right\"}}>{num} {pieces}, {sheets} {sheetsString}</p>\r\n      <div style={{marginTop:5, marginBottom:5, borderRadius: 25, height: 35, width: 35, background: col, float:\"right\"}}></div>\r\n    </div>\r\n  }\r\n\r\n  //\"#FFE7E5\"\r\n  const stats = \r\n  <div>\r\n    <p id=\"text\">instructions + overview</p>\r\n    <div style={{width: '100%', display:'inline-block'}}>\r\n      <div id=\"text\" style={{marginTop:0, marginBottom:0, marginRight: 0, width: '500px', background: \"#FFE7E5\", float:\"left\"}}>placeholder</div>\r\n      <div id=\"text\" style={{marginTop:0, marginBottom:0, marginLeft: 0, width: '500px', background: \"#FFE7E5\", float:\"right\"}}>\r\n        <div>\r\n          {coloringFormStore.counter.map((col, i) => (\r\n          colorEntry(i, col[0], col[1])\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  const canvas = absolute? \r\n  <div className = \"canvas\">\r\n    <div ref = {diagramRef}>\r\n      {stats}\r\n      <OrigamiObject \r\n        caption={`${caption}`}\r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n  </div> : \r\n  <div className = \"canvas-relative\">\r\n    <div ref = {diagramRef}>\r\n      {stats}\r\n      <OrigamiObject \r\n        caption={`${caption}`}\r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <Sticky innerZ={3}>\r\n        <div className = \"toolbar\">\r\n          {backButton}\r\n          {paintByPixel}\r\n          {clear}\r\n          {colorPicker}\r\n          {logoObject}\r\n          {defaultColorPicker}\r\n          {info}\r\n          {sprayPaint}\r\n          {nextButton}\r\n        </div>\r\n      </Sticky>\r\n      <div style={{position: 'relative', overflowX:'scroll', overflowY:'hidden', height: myHeight, background:\"#FFE7E5\"}}>\r\n        {canvas}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Colouring);","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport '../App.css'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport Home from '../pages';\r\nimport Colouring from '../pages/colouring'\r\n// import makeInspectable from \"mobx-devtools-mst\";\r\nimport RootStore from \"../models/RootStore\";\r\nimport {RootStoreProvider} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst rootStore = RootStore.create()\r\n\r\n// makeInspectable(vase);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{background: \"#FFE7E5\"}}>\r\n        <RootStoreProvider value={rootStore}>\r\n          <Router>\r\n            <Switch>\r\n              <Route path='/colouring'>\r\n                {rootStore.coloringFormStore.msg === \"error\" ? <Redirect to=\"/create\"/> : <Colouring />}\r\n              </Route>\r\n              <Route path='/'>\r\n                <Home/>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </RootStoreProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}