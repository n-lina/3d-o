{"version":3,"sources":["components/Navbar/NavbarElements.js","assets/complex-logo.png","components/Navbar/index.js","pages/landing.js","pages/about.js","pages/learn.js","assets/logo-bg.png","assets/strawberry-slider-big.png","assets/logo-bg-off.png","pages/contact.js","pages/create.js","pages/gallery.js","pages/browse.js","assets/paper.PNG","components/Wing/index.js","components/Swan/index.js","models/VaseStore.js","models/PxModel.js","models/RowModel.js","models/DrawingSectionModel.js","models/ColoringForm.js","models/BasketStore.js","models/FigurineStore.js","models/SwanStore.js","models/RootStore.js","models/RootStoreContext.js","pages/create-swan.js","components/Vase/index.js","pages/create-vase.js","components/Basket/index.js","pages/create-basket.js","components/Figurine/index.js","pages/create-figurine.js","components/ResultVase/index.js","components/ResultFigurine/index.js","components/ResultBasket/index.js","assets/upper-banner.png","assets/lower-banner.png","pages/result.js","pages/index.js","components/Pixel/index.js","components/SpecialPixel/index.js","components/Row/index.js","components/SpecialRow/index.js","components/UntrackedPixel/index.js","components/UntrackedRow/index.js","components/TriangleSection/index.js","components/DrawingSection/index.js","components/OrigamiObject/index.js","assets/rim.png","assets/halfRim.png","components/Rim/index.js","components/Appendages/index.js","pages/colouring.js","components/App.jsx","index.js"],"names":["Nav","styled","nav","NavLink","Link","PlainLink","NavMenu","FaBars","div","NavBtn","NavBtnLink","Navbar","to","style","height","margin","float","src","logo","alt","letterSpacing","marginRight","color","Landing","display","justifyContent","alignItems","About","Learn","Contact","backgroundImage","bg","backgroundPosition","className","straw","href","target","Create","background","flexDirection","fontSize","Gallery","Browse","observer","props","vertices","purpose","my_vertices","useMemo","map","v","THREE","faces","push","onUpdate","geometry","computeFaceNormals","computeVertexNormals","i","length","x","y","z","verticesNeedUpdate","normalsNeedUpdate","swanStore","result","image","texture","grid","load","swan_pts","swanBodyPts","swan_body","args","Math","PI","side","specular","shininess","bottom","diameter","height_scale","rim_mesh","position","rotation","bottom_scale","default_color","getX","angle","radius","cos","getY","sin","bottomRad","top_scale","midRad","midHeight","topHeight","big_vertices","F_vertices","big_F_vertices","L_vertices","temp","B_vertices","y_pos_wing","wings","one_wing","shape","param","t","moveTo","lineTo","quadraticCurveTo","rad","depth","extrudeSettings","steps","bevelEnabled","offset","neck_mesh","diameter_marker","useState","x_rot","changeXrot","y_rot","changeYrot","z_rot","changeZrot","dist","changeDist","handleKeyDown","event","key","max","min","preventDefault","React","useEffect","window","addEventListener","removeEventListener","bottom_rim","getCurvePointsNew","_pts","tension","numOfSegments","t1x","t2x","t1y","t2y","c1","c2","c3","c4","st","res","first_x","first_y","last_x","last_y","unshift","pow","VaseStore","types","model","cm","dtop","d3","d2","d1","dbottom","dtop_h","d3_h","d2_h","d1_h","dbottom_h","top_rim","flat_bottom","scale_h","tot_rows_per_section","optional","array","number","subsections","textures","string","modelDimensions","arms","ears","lid","top_handle","side_handles","actions","self","update_top_rim","update_bottom_rim","update_flat_bottom","update_units","units","update_height","update_dtop","update_d3","update_d2","update_d1","update_dbottom","update_d_heights","vals","storePic","picData","setDefaultColor","getDimensions","maxWidth","updateCurvedPts","broken","s_dtop_h","s_dbottom_h","scale_factor","s_dtop","s_dbottom","s_d1","s_d1_h","s_d2","s_d2_h","s_d3","s_d3_h","myPoints","points","new_pts","h","r","section_pts","broken_pts","broken_pts_three","lo","hi","slice","curr_idx","j","slice_size","round","k","views","PxModel","pixelColor","oldColor","canChangeColor","inverted","setPixelColor","col","setOldColor","setCanChangeColor","val","setInverted","RowModel","rowData","width","displayRowNum","addPx","create","setOffset","setWidth","setDisplayRowNum","DrawingSectionModel","drawingSectionData","increasing","addRow","setWidthHeight","w","setIncreasing","DEFAULT_PNG","fileName","type","html2CanvasOptions","saveAs","uri","filename","link","document","createElement","download","body","appendChild","click","removeChild","open","ColoringForm","selectedColor","defaultColor","oldDefault","clear","mode","canvasPic","appendPic","swan_two_wings","coloringFormData","storeAppendPic","setColor","setModel","swan_one_wing","clearAll","unsetClear","setMode","exportComponent","node","appendage","current","Error","element","ReactDOM","findDOMNode","html2canvas","scrollY","useCORS","imageTimeout","backgroundColor","then","canvas","toDataURL","saveDiagram","addDrawingSection","getCurvePointsBasket","BasketStore","update_top_handle","update_side_handles","update_lid","update_diameter","sectionNum","s_diameter","s_diameter_h","FigurineStore","body_scale","body_height","tot_rows_head","update_ears","update_arms","d","tot_theta_len","theta_start","theta_len","divisions","s_dtop_bottom","getCurvePointsFigurine","SwanStore","update_wings","s_bottom","s_top","getCurvePointsSwan","RootStore","vaseStore","coloringFormStore","basketStore","figStore","RootStoreContext","createContext","RootStoreProvider","Provider","useStores","useContext","railStyle","borderRadius","Handle","handle","id","value","percent","getHandleProps","left","marginLeft","marginTop","zIndex","textAlign","cursor","fontFamily","slider_diameter","rootStyle","domain","step","values","getRailProps","handles","bottom_rim_switch","onChange","options","label","selectedBackgroundColor","initialSelectedIndex","fontColor","optionBorderRadius","wings_switch","units_switch","camera","fov","aspect","near","far","intensity","overflow","marginBottom","vase","top_rim_mesh","bottom_rim_mesh","flat_bottom_mesh","getInputMarker","dtop_marker","dbottom_marker","d1_marker","d2_marker","d3_marker","sliderStyle","MultiHandle","sliderHeight","slider_dtop","slider_d3","slider_d2","slider_d1","slider_dbottom","dSlider","top_rim_switch","flat_bottom_switch","curved_bottom","phi_len","CustomCircleCurve","scale","ty","tz","multiplyScalar","this","tube_scale","path","tube_rad","percent_lid","rad_lid","lid_dist","tan","deco_r","deco_dist","percent_sphere","rad_bottom","bottom_dist","lid_switch","bottom_switch","top_handle_switch","side_handles_switch","head_rad","head","bunny_ears","cat_ears","sphere_ears","bear_ears","tx","y_pos","half_side_len","bshape","ear_rad","arm_rad","x_pos","arms_switch","ears_switch","indexOf","itemsRef","useRef","insideRef","len","_","ref","el","texture_body","divs","getBrokenHeadPts","broken_head","modelStore","canvasRef","console","log","context","getContext","px_size","defaultCol","sec_width","sec_height","fillStyle","fillRect","last_idx","c","ResultFigurine","upperbanner","onClick","size","lowerbanner","Home","component","CreateSwan","CreateVase","CreateBasket","CreateFigurine","Result","formObject","applyColor","onMouseEnter","onMouseLeave","onMouseOver","borderColor","substring","parseInt","borderStyle","SpecialPixel","on","num","markerNum","rounded","paddingLeft","paddingRight","pixels","SpecialRow","specialTop","specialBottom","my_dict","count","numPx","elevation","firstRowDisplay","panelRef","rows","var_offset","displayNum","swanUpper","wing_width","remainder","chest_width","ceil","back_width","floor","wing1","wing2","chest","back","wing","dimensions","objectRef","Array","fill","sTopCurr","sBottomCurr","curr","diff","distribute","spacing","0","1","2","spacing_arr","idx","sections","Rim","half","caption","circ","rim_image","half_rim_image","modelType","showInfo","setShowInfo","showPicker","setShowPicker","showPickerDefault","setShowPickerDefault","colorPaletteIdx","setColorIdx","dColorPaletteIdx","setDColorIdx","colorPalette","setColorPalette","dColorPalette","setDColorPalette","diagramRef","appendagesRef","myDimensions","absolute","myHeight","innerHeight","colorPicker","colors","triangle","onChangeComplete","search","hex","toString","toUpperCase","includes","new_palette","defaultColorPicker","paintByPixel","sprayPaint","logoObject","exportComponentAsPNG","backButton","nextButton","delay","clickAction","replace","info","innerZ","overflowX","overflowY","rootStore","App","Component","render","getElementById"],"mappings":"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","file":"static/js/main.ee4f889e.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #D14240;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // padding: 0.5rem calc((100vw - 4000px) / 2);\r\n  padding: 0.5rem;\r\n  z-index: 10;\r\n  border-radius: 30px 30px 30px 30px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  // height: 70%;\r\n  cursor: pointer;\r\n  border-radius: 30px;\r\n  margin: 5px;\r\n  border-style: solid; \r\n  border-color: #D14240;\r\n\r\n  &:hover {\r\n    // transition: all 0.2s ease-in-out;\r\n    background: #FFE7EC;\r\n    color: red;\r\n    // height: 100%;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n\r\n  &.active {\r\n    color: red;\r\n    background: #FFE7EC;\r\n    // height: 100%;\r\n    border-radius: 40px;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n`;\r\n\r\nexport const PlainLink = styled(Link)`\r\n  text-decoration:none;\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  // margin-right: 24px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 80vw; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 30px;\r\n  background: #256ce1;\r\n  // padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  width: 80px;\r\n  height: 50px;\r\n\r\n\r\n  /* Second Nav */\r\n  // margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #D14240;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/complex-logo.268ab665.png\";","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink, \r\n  PlainLink\r\n} from './NavbarElements';\r\nimport logo from \"../../assets/complex-logo.png\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <PlainLink to='/'><img style={{height: 60, margin: 20, float: 'left'}}src={logo} alt='logo' /></PlainLink>\r\n        <PlainLink to='/'>\r\n          <p style ={{letterSpacing: 3, marginRight: 100, color:\"white\", float: 'left'}}>3d-o</p>\r\n        </PlainLink>\r\n        {/* <Bars /> */}\r\n        <NavMenu>\r\n          <NavLink to='/about'>\r\n            <p style ={{letterSpacing: 2}}>about</p>\r\n          </NavLink>\r\n          <NavLink to='/learn' >\r\n            <p style ={{letterSpacing: 2}}>learn</p>\r\n          </NavLink>\r\n          <NavLink to='/create'>\r\n            <p style ={{letterSpacing: 2}}>create</p>\r\n          </NavLink>\r\n          <NavLink to='/browse'>\r\n            <p style ={{letterSpacing: 2}}>browse</p>\r\n          </NavLink>\r\n          <NavLink to='/gallery'>\r\n            <p style ={{letterSpacing: 2}}>gallery</p>\r\n          </NavLink>\r\n          <NavLink to='/contact'>\r\n            <p style ={{letterSpacing: 2}}>contact</p>\r\n          </NavLink>\r\n          {/* Second Nav */}\r\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n        </NavMenu>\r\n        {/* <NavBtn>\r\n          <NavBtnLink to='/signin'>Sign In</NavBtnLink>\r\n        </NavBtn> */}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Landing</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>About</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Learn = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Learn</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Learn;","export default __webpack_public_path__ + \"static/media/logo-bg.1d8d140f.png\";","export default __webpack_public_path__ + \"static/media/strawberry-slider-big.9374e4ca.png\";","export default __webpack_public_path__ + \"static/media/logo-bg-off.4d8579aa.png\";","import React from 'react';\r\nimport bg from \"../assets/logo-bg.png\"\r\nimport bgOff from \"../assets/logo-bg-off.png\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport \"./create-vase.css\"\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '486px',\r\n        backgroundImage: `url(${bg})`, \r\n        backgroundPosition: \"50%\"\r\n      }}\r\n    >\r\n      <div className=\"info-box\" >\r\n        <img src={straw} className =\"straw-l\"/>\r\n        <img src={straw} className =\"straw-m\"/>\r\n        <img src={straw} className =\"straw-r\"/>\r\n        <p className = \"app-name\">3d-o<br/>engineering x art</p>\r\n        <p className = \"name\">— lina nguyen —</p>\r\n        <div className=\"left\">\r\n          <a href=\"/\" target=\"_blank\" className=\"link\">linkedin</a>\r\n          <br/>\r\n          <a href=\"/\" target=\"_blank\" className=\"link\">resume</a>\r\n        </div>\r\n        <div className=\"right\">\r\n          <a href=\"/\" target=\"_blank\" className=\"link\">github</a>\r\n          <br/>\r\n          <a href=\"/\" target=\"_blank\" className=\"link\">email</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\n\r\nconst Create = () => {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          // alignItems: 'center',\r\n          height: '25vh',\r\n          background: '#bab', \r\n          margin: '30px'\r\n        }}\r\n      >\r\n        <h1>I want to make a ... </h1>\r\n      </div>\r\n      <div \r\n        style={{\r\n          flexDirection: 'row',\r\n          height: '25vh'\r\n        }}\r\n      >\r\n        <a style={{background: '#bfb', fontSize: '30px', margin: '30px'}} href=\"/create-swan\"> Swan </a>\r\n        <a style={{background: '#bcb', fontSize: '30px', margin: '30px'}} href=\"/create-vase\"> Vase </a>\r\n        <a style={{background: '#bdb', fontSize: '30px', margin: '30px'}} href=\"/create-basket\"> Basket </a>\r\n        <a style={{background: '#beb', fontSize: '30px', margin: '30px'}} href=\"/create-figurine\"> Figurine </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;","import React from 'react';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Gallery</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\n\r\nconst Browse = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Browse</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;","export default __webpack_public_path__ + \"static/media/paper.2a44f726.PNG\";","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Wing = (props) => {\r\n    const {vertices, purpose} = props\r\n    const my_vertices = useMemo(() => vertices.map(v => new THREE.Vector3(...v)), [])\r\n\r\n    const faces = []\r\n    if (purpose == \"wing\"){\r\n        faces.push(\r\n            new THREE.Face3(17, 8, 7),\r\n            new THREE.Face3(16, 17, 7),\r\n            new THREE.Face3(16, 7, 6),\r\n            new THREE.Face3(15, 16, 6),\r\n            new THREE.Face3(15, 6, 5),\r\n            new THREE.Face3(14, 15, 5),\r\n            new THREE.Face3(14, 5, 4),\r\n            new THREE.Face3(13, 14, 4),\r\n            new THREE.Face3(13, 4, 3),\r\n            new THREE.Face3(12, 13, 3),\r\n            new THREE.Face3(12, 3, 2),\r\n            new THREE.Face3(11, 12, 2),\r\n            new THREE.Face3(11, 2, 1),\r\n            new THREE.Face3(10, 11, 1),\r\n            new THREE.Face3(10, 1, 0),\r\n            new THREE.Face3(9, 10, 0),\r\n            // top row \r\n            new THREE.Face3(18, 17, 16),\r\n            new THREE.Face3(18, 16, 15),\r\n            new THREE.Face3(18, 15, 14),\r\n            new THREE.Face3(18, 14, 13),\r\n            new THREE.Face3(18, 13, 12),\r\n            new THREE.Face3(18, 12, 11),\r\n            new THREE.Face3(18, 11, 10),\r\n            new THREE.Face3(18, 10, 9),\r\n        )\r\n    }\r\n    else if (purpose == \"front-back\"){\r\n        faces.push(\r\n            new THREE.Face3(5, 4, 3),\r\n            new THREE.Face3(5, 3, 2),\r\n            new THREE.Face3(5, 2, 1),\r\n            new THREE.Face3(5, 1, 0),\r\n        )\r\n    }\r\n\r\n    else if (purpose == \"one-wing\"){\r\n        faces.push(\r\n            new THREE.Face3(9, 8, 7),\r\n            new THREE.Face3(9, 7, 6),\r\n            new THREE.Face3(9, 6, 5),\r\n            new THREE.Face3(9, 5, 4),\r\n            new THREE.Face3(9, 4, 3),\r\n            new THREE.Face3(9, 3, 2),\r\n            new THREE.Face3(9, 2, 1),\r\n            new THREE.Face3(9, 1, 0),\r\n        )\r\n    }\r\n\r\n    // const uvs = [[\r\n    //     // front\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // right\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // back\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // left\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // top\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // bottom\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    // ]]\r\n\r\n    function update(geometry){\r\n        geometry.computeFaceNormals()\r\n        geometry.computeVertexNormals();\r\n        for (let i = 0; i < geometry.vertices.length; i++){\r\n            geometry.vertices[i].x = vertices[i][0]\r\n            geometry.vertices[i].y = vertices[i][1]\r\n            geometry.vertices[i].z = vertices[i][2]\r\n        }\r\n        geometry.verticesNeedUpdate = true\r\n        geometry.normalsNeedUpdate = true;\r\n    }\r\n\r\n    return (\r\n        // <geometry vertices={my_vertices} faces={faces} faceVertexUVs={uvs} onUpdate={update}/>\r\n        <geometry vertices={my_vertices} faces={faces} onUpdate={update}/>\r\n    )\r\n  }\r\n\r\nexport default observer(Wing);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\nimport Wing from \"../Wing\"\r\n\r\nconst Swan = (props) => {\r\n    const {swanStore, result} = props\r\n    const image = result ? swanStore.texture : grid\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(image), []) \r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const swan_pts = swanStore.swanBodyPts()\r\n\r\n    const swan_body = \r\n    <group>\r\n        <mesh >\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh>\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const bottom = swanStore.diameter * swanStore.height_scale * 0.8 * -1\r\n    const rim_mesh = <mesh position = {[0,bottom-0.1,0]} rotation = {[1.57,0,0]}> \r\n    <torusGeometry args={[(swanStore.diameter * swanStore.bottom_scale/2)+0.1, swanStore.diameter/70, 10, 50]}/>\r\n    <meshPhongMaterial color={result? swanStore.default_color : \"#FF7E98\"} />\r\n    </mesh>\r\n\r\n    function getX(angle, radius){\r\n        return  radius * Math.cos(angle)\r\n    }\r\n\r\n    function getY(angle, radius){\r\n        return radius * Math.sin(angle)\r\n    }\r\n\r\n    const bottomRad = swanStore.diameter * swanStore.top_scale * 0.5\r\n    const midRad = swanStore.diameter * swanStore.top_scale * 0.5 * 0.73\r\n    const midHeight = swanStore.diameter * swanStore.height_scale * 1.7 * 0.5\r\n    const topHeight = swanStore.diameter * swanStore.height_scale * 1.9\r\n\r\n    const vertices =\r\n    [\r\n        // bottom row\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [getX(Math.PI/3.7, bottomRad), 0, getY(Math.PI/3.7, bottomRad)],  // 1\r\n        [getX(Math.PI/6, bottomRad), 0, getY(Math.PI/6, bottomRad)],  // 2\r\n        [getX(Math.PI/12, bottomRad), 0, getY(Math.PI/12, bottomRad)],  // 3\r\n        [getX(0, bottomRad), 0, getY(0, bottomRad)],  // 4\r\n        [getX(Math.PI/12, bottomRad), 0, -getY(Math.PI/12, bottomRad)],  // 5\r\n        [getX(Math.PI/6, bottomRad), 0, -getY(Math.PI/6, bottomRad)],  // 6\r\n        [getX(Math.PI/3.7, bottomRad), 0, -getY(Math.PI/3.7, bottomRad)],  // 7\r\n        [getX(Math.PI/2.8, bottomRad), 0, -getY(Math.PI/2.8, bottomRad)],  // 8\r\n        // middle row\r\n        [getX(Math.PI/2.8, midRad), midHeight, getY(Math.PI/2.8, midRad)],  // 9\r\n        [getX(Math.PI/3.7, midRad), midHeight, getY(Math.PI/3.7, midRad)],  // 10\r\n        [getX(Math.PI/6, midRad), midHeight, getY(Math.PI/6, midRad)],  // 11\r\n        [getX(Math.PI/12, midRad), midHeight, getY(Math.PI/12, midRad)],  // 12\r\n        [getX(0, midRad), midHeight, getY(0, midRad)],  // 13\r\n        [getX(Math.PI/12, midRad), midHeight, -getY(Math.PI/12, midRad)],  // 14\r\n        [getX(Math.PI/6, midRad), midHeight, -getY(Math.PI/6, midRad)],  // 15\r\n        [getX(Math.PI/3.7, midRad), midHeight, -getY(Math.PI/3.7, midRad)],  // 16\r\n        [getX(Math.PI/2.8, midRad), midHeight, -getY(Math.PI/2.8, midRad)],  // 17\r\n        // heights\r\n        [bottomRad/6, topHeight, 0]  // 18\r\n    ];\r\n\r\n    const big_vertices = \r\n    [\r\n        [-getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 0\r\n        [-getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 1\r\n        [-getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 2\r\n        [-getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 3        \r\n        [getX(Math.PI/2, bottomRad), 0, -getY(Math.PI/2, bottomRad)],  // 4\r\n        [getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 5  \r\n        [getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 6\r\n        [getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 7\r\n        [getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 8\r\n        [0, topHeight*1.1, -bottomRad*1.25]  // 9\r\n    ];\r\n\r\n    const F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [-getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 3\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 4\r\n        [0, topHeight/3, bottomRad/1.3]  // 5\r\n    ];\r\n\r\n    const big_F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 0\r\n        [-getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 3\r\n        [getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 4\r\n        [0, topHeight/1.7, bottomRad/1.8]  // 5\r\n    ];\r\n\r\n    const L_vertices = []\r\n    for (let i = 0; i < vertices.length; i++){\r\n        let temp = []\r\n        temp.push(-1 * vertices[i][0],vertices[i][1],vertices[i][2])\r\n        L_vertices.push(temp)\r\n    }\r\n\r\n    const B_vertices = []\r\n    for (let i = 0; i < F_vertices.length-1; i++){\r\n        let temp = []\r\n        temp.push(F_vertices[i][0],F_vertices[i][1], -1 * F_vertices[i][2])\r\n        B_vertices.push(temp)\r\n    }\r\n    B_vertices.push([0, topHeight/4, -bottomRad * 1.1])\r\n\r\n    const y_pos_wing = swanStore.diameter * swanStore.height_scale\r\n    const wings = \r\n    <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const one_wing = <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const shape = useMemo( () => new THREE.Shape(), [swanStore.diameter]);\r\n    const param = swanStore.diameter * 0.3\r\n    const t = param * 0.4\r\n    shape.moveTo(0, -param*1.3);\r\n    shape.lineTo(param*0.9, 0)\r\n    shape.quadraticCurveTo(param + param/3, param*1.5/2,param, param * 1.4)\r\n    shape.quadraticCurveTo(param/2, param * 1.9, -param/3,param)\r\n    shape.lineTo(-param/2.5, param - (1.5*t))\r\n    shape.quadraticCurveTo(param/2 , (param * 1.9) - t, param -t/1.5 , (param * 1.5) - t/1.5)\r\n    shape.quadraticCurveTo((param + param/3.5) -t/1.5, (param*1.5/2) + t/1.5, param -t/1.5, t/1.5)\r\n    \r\n    const depth = param/6\r\n\r\n    const extrudeSettings = {\r\n        steps: 100,  \r\n        depth: depth,  \r\n        bevelEnabled: false,   \r\n      };\r\n      \r\n\r\n    const offset = swanStore.diameter * swanStore.height_scale + (param*1.3) + ((topHeight/3) * 0)\r\n    const neck_mesh = <mesh position={[-depth/2,offset,(bottomRad/1)]} rotation={[0, Math.PI/2, 0]}>\r\n        <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n        <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n    </mesh>\r\n\r\n\r\n    const diameter_marker = getInputMarker((swanStore.diameter/2) + 0.1, 0)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            {swan_body}\r\n            {!swanStore.wings && one_wing}\r\n            {swanStore.wings && wings}\r\n            {!result && diameter_marker}\r\n            {swanStore.bottom_rim && rim_mesh}\r\n            {neck_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Swan);","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsNew(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[8]\r\n    const last_y = _pts[9]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(y, 0.5));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction getCurvePoints(pts, tension, isClosed, numOfSegments) {\r\n\r\n    // use input value if provided, or use a default value   \r\n    tension = (typeof tension != 'undefined') ? tension : 0.5;\r\n    isClosed = isClosed ? isClosed : false;\r\n    numOfSegments = numOfSegments ? numOfSegments : 16;\r\n\r\n    var _pts = [], res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    // clone array so we don't change the original\r\n    //\r\n    _pts = pts.slice(0);\r\n\r\n    // The algorithm require a previous and next point to the actual point array.\r\n    // Check if we will draw closed or open curve.\r\n    // If closed, copy end points to beginning and first points to end\r\n    // If open, duplicate first points to befinning, end points to end\r\n    if (isClosed) {\r\n        _pts.unshift(pts[pts.length - 1]);\r\n        _pts.unshift(pts[pts.length - 2]);\r\n        _pts.unshift(pts[pts.length - 1]);\r\n        _pts.unshift(pts[pts.length - 2]);\r\n        _pts.push(pts[0]);\r\n        _pts.push(pts[1]);\r\n    }\r\n    else {\r\n        _pts.unshift(pts[1]);   //copy 1. point and insert at beginning\r\n        _pts.unshift(pts[0]);\r\n        _pts.push(pts[pts.length - 2]); //copy last point and append\r\n        _pts.push(pts[pts.length - 1]);\r\n    }\r\n\r\n    // ok, lets start..\r\n\r\n    // 1. loop goes through point array\r\n    // 2. loop goes through each segment between the 2 pts + 1e point before and after\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(y);\r\n\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nconst VaseStore = types\r\n  .model(\"Vase\", {\r\n    cm: false,\r\n    dtop: 20,\r\n    d3: 10, \r\n    d2: 10, \r\n    d1: 35,\r\n    dbottom: 20, \r\n    dtop_h: 100, \r\n    d3_h: 90, \r\n    d2_h: 70, \r\n    d1_h: 50, \r\n    dbottom_h: 0, \r\n    height: 50,\r\n    top_rim: false, \r\n    bottom_rim: true, \r\n    flat_bottom: true, \r\n    scale_h: 36,\r\n    default_color: \"#FFFFFF\",\r\n    tot_rows_per_section: types.optional(types.array(types.number), [15,9,10,10,10]), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[[5,4],[3,2],[1],[0]]), \r\n    // vase has 4 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_flat_bottom(flat_bottom){\r\n        self.flat_bottom = flat_bottom\r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_d3(d3){\r\n        self.d3 = d3\r\n    }, \r\n    update_d2(d2){\r\n        self.d2 = d2\r\n    }, \r\n    update_d1(d1){\r\n        self.d1 = d1\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    },\r\n    update_d_heights(vals){\r\n        self.d3_h = vals[3]\r\n        self.d2_h = vals[2]\r\n        self.d1_h = vals[1]\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n        // console.log(picData)\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53 // un hard code\r\n        return self.modelDimensions\r\n      },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_d1 = self.d1 * scale_factor\r\n        const s_d1_h = (self.d1_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d2 = self.d2 * scale_factor\r\n        const s_d2_h = (self.d2_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d3 = self.d3 * scale_factor\r\n        const s_d3_h = (self.d3_h/100) * self.scale_h - s_dtop_h\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_d1_h,s_d1/2,s_d2_h,s_d2/2, s_d3_h,s_d3/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.4\r\n        var numOfSegments = 6\r\n        let points = [];\r\n        const new_pts = getCurvePointsNew(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] == new_pts[hi+2] && new_pts[hi+1] == new_pts[hi+3]){\r\n                    const temp = new_pts.slice(lo,hi+2)\r\n                    section_pts.push(temp)\r\n                    lo = hi + 2\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            for (let i=0; i<4; i+=1){ //section_pts.length = 4\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    if (self.subsections[i].length > 1){\r\n                        // console.log(self.modelDimensions[self.subsections[i][j]][1])\r\n                        let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                        slice_size = slice_size * 2\r\n                        const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                        curr_idx += slice_size\r\n                        broken_pts.push(slice)\r\n                    } \r\n                    else {\r\n                        broken_pts.push(section_pts[i])\r\n                    }\r\n                }\r\n            }\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push( new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            \r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default VaseStore;\r\n\r\nconst VaseContext = React.createContext();\r\n\r\nexport const VaseProvider = ({ children, store }) => {\r\n    return (\r\n      <VaseContext.Provider value={store}>{children}</VaseContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useVaseStore = () => React.useContext(VaseContext);\r\n\r\nexport const withVaseStore = (Component) => (props) => {\r\n    return <Component {...props} store={useVaseStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\n\r\nconst PxModel = types\r\n  .model(\"PxModel\", {\r\n    pixelColor: \"#FFFFFF\", \r\n    oldColor: \"#FFFFFF\", \r\n    canChangeColor: true, \r\n    inverted: false\r\n  })\r\n  .actions(self => ({\r\n    setPixelColor(col){\r\n      self.pixelColor = col\r\n    }, \r\n    setOldColor(col){\r\n      self.oldColor = col\r\n    }, \r\n    setCanChangeColor(val){\r\n      self.canChangeColor = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default PxModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport PxModel from './PxModel'\r\n\r\nconst RowModel = types\r\n  .model(\"RowModel\", {\r\n    rowData: types.optional(types.array(PxModel), []),\r\n    offset: 0, \r\n    width: 0, \r\n    displayRowNum: 0,\r\n  })\r\n  .actions(self => ({\r\n    addPx(){\r\n      self.rowData.push(PxModel.create())\r\n    },\r\n    setOffset(val = 10.5){\r\n      self.offset = val\r\n    }, \r\n    setWidth(val){\r\n      self.width = val\r\n    }, \r\n    setDisplayRowNum(val){\r\n      self.displayRowNum = val\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default RowModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport RowModel from './RowModel'\r\n\r\nconst DrawingSectionModel = types\r\n  .model(\"DrawingSectionModel\", {\r\n    drawingSectionData: types.optional(types.array(RowModel), []),\r\n    width: 0, \r\n    height: 0, \r\n    increasing: false\r\n  })\r\n  .actions(self => ({\r\n    addRow(){\r\n      self.drawingSectionData.push(RowModel.create())\r\n    }, \r\n    setWidthHeight(w, h){\r\n      self.width = w\r\n      self.height = h \r\n    }, \r\n    setIncreasing(val){\r\n      self.increasing = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default DrawingSectionModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport html2canvas from 'html2canvas';\r\nimport DrawingSectionModel from './DrawingSectionModel'\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst fileType = {\r\n  PNG: 'image/png',\r\n  JPEG: 'image/jpeg',\r\n  PDF: 'application/pdf'\r\n};\r\n\r\nconst DEFAULT_PNG = {\r\n  fileName: '3do-diagram.png',\r\n  type: fileType.PNG,\r\n  html2CanvasOptions: {}\r\n};\r\n\r\nconst saveAs = (uri, filename) => {\r\n  const link = document.createElement('a');\r\n\r\n  if (typeof link.download === 'string') {\r\n      link.href = uri;\r\n      link.download = filename;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n  } else {\r\n      window.open(uri);\r\n  }\r\n};\r\n\r\nconst exportComponentBak = (node, {\r\n  fileName, \r\n  type, \r\n  html2CanvasOptions, \r\n  pdfOptions\r\n}) => {\r\n  if(!node.current) {\r\n      throw new Error(\"'node' must be a RefObject\")\r\n  }\r\n\r\n  const element = ReactDOM.findDOMNode(node.current);\r\n  return html2canvas(element, {\r\n      scrollY: -window.scrollY,\r\n      useCORS: true,\r\n      ...html2CanvasOptions\r\n  }).then(canvas => {\r\n      console.log(canvas.toDataURL(type, 1.0))\r\n      // saveAs(canvas.toDataURL(type, 1.0), fileName);\r\n  });\r\n};\r\n\r\nconst exportComponentAsPNG = (node, parameters = {}) => exportComponentBak(node, {...DEFAULT_PNG, ...parameters});\r\n\r\nconst ColoringForm = types\r\n  .model(\"ColoringForm\", {\r\n    selectedColor: \"#FF0000\",\r\n    defaultColor: \"#FFFFFF\",\r\n    oldDefault: \"#FFFFFF\",\r\n    clear: false,\r\n    mode: false,\r\n    maxWidth: 53,\r\n    canvasPic: \"\",\r\n    appendPic: \"\",\r\n    model: \"vase\", // vase, swan, fig, basket\r\n    inverted: false,\r\n    swan_two_wings: false,\r\n    coloringFormData: types.optional(types.array(DrawingSectionModel), [])\r\n  })\r\n  .actions(self => ({\r\n    storePic(picData){\r\n      self.canvasPic = picData\r\n      return\r\n    }, \r\n    storeAppendPic(picData){\r\n      self.appendPic = picData\r\n      return\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n    setColor(col){\r\n      self.clear = false\r\n      self.selectedColor = col\r\n    },\r\n    setModel(model, swan_one_wing){\r\n      self.model = model\r\n      if (model == \"swan\"){\r\n        self.swan_two_wings = swan_one_wing\r\n      }\r\n    },\r\n    setDefaultColor(col){\r\n      self.clear = false\r\n      self.oldDefault = self.defaultColor\r\n      self.defaultColor = col\r\n    },\r\n    clearAll(){\r\n      if (self.defaultColor == \"#FFFFFF\"){\r\n        self.oldDefault = \"#FFFFFE\" \r\n        self.defaultColor = \"#FFFFFE\"\r\n      }\r\n      else {\r\n        self.oldDefault = \"#FFFFFF\" \r\n        self.defaultColor = \"#FFFFFF\"\r\n      }\r\n      self.clear = true\r\n    }, \r\n    unsetClear(){\r\n      self.clear = false\r\n    },\r\n    setMode(val){\r\n      self.clear = false\r\n      self.mode = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    },\r\n    exportComponent (node, appendage=false) {\r\n      if(!node.current) {\r\n          throw new Error(\"'node' must be a RefObject\")\r\n      }\r\n      const element = ReactDOM.findDOMNode(node.current);\r\n      return html2canvas(element, {\r\n          scrollY: -window.scrollY,\r\n          useCORS: true,\r\n          // ...html2CanvasOptions\r\n          imageTimeout: 0,\r\n          backgroundColor: \"#FFFFFF\"\r\n      }).then(canvas => {\r\n          // self.canvasPic = canvas.toDataURL(DEFAULT_PNG, 0.1)\r\n          appendage? self.storeAppendPic(canvas.toDataURL(DEFAULT_PNG, 0.1)): self.storePic(canvas.toDataURL(DEFAULT_PNG, 0.1))\r\n      });\r\n    },\r\n    saveDiagram () {\r\n      saveAs(self.canvasPic, \"3do-diagram\")\r\n      saveAs(self.appendPic, \"3do-diagram-appendages\")\r\n    },\r\n    addDrawingSection(){\r\n      self.coloringFormData.push(DrawingSectionModel.create())\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default ColoringForm;\r\n","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsBasket(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst BasketStore = types\r\n  .model(\"Basket\", {\r\n    cm: false,\r\n    height: 20, \r\n    diameter: 34, \r\n    dtop: 20, \r\n    dbottom: 20,\r\n    top_rim: true, \r\n    bottom_rim: true, \r\n    lid: true, \r\n    top_handle: true, \r\n    side_handles: false, \r\n    scale_h: 15,\r\n    flat_bottom: false, \r\n    default_color: \"#FFFFFF\",\r\n    tot_rows_per_section: types.optional(types.array(types.number), [15,29]), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[[4,3],[2,1,0]]), \r\n    // basket has 2 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[53,10],[40,10],[28,9],[16,10],[13,5]]),\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\" \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_top_handle(top_handle){\r\n        self.top_handle = top_handle\r\n    },\r\n    update_side_handles(side_handles){\r\n        self.side_handles = side_handles\r\n    },\r\n    update_lid(lid){\r\n        self.lid = lid \r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_diameter(diameter){\r\n        self.diameter = diameter\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    }, \r\n    update_flat_bottom(val) {\r\n        self.flat_bottom = val\r\n    },\r\n    storePic(picData, sectionNum){\r\n        self.textures[sectionNum] = picData\r\n        // console.log(picData)\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53\r\n        return self.modelDimensions\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_diameter = self.diameter * scale_factor\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.8\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsBasket(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] == new_pts[hi+2] && new_pts[hi+1] == new_pts[hi+3]){\r\n                    const temp = new_pts.slice(lo,hi+2)\r\n                    section_pts.push(temp)\r\n                    lo = hi + 2\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            for (let i=0; i<2; i+=1){ //section_pts.length = 4\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    if (self.subsections[i].length > 1){\r\n                        // console.log(self.modelDimensions[self.subsections[i][j]][1])\r\n                        let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                        slice_size = slice_size * 2\r\n                        const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                        curr_idx += slice_size\r\n                        broken_pts.push(slice)\r\n                    } \r\n                    else {\r\n                        broken_pts.push(section_pts[i])\r\n                    }\r\n                }\r\n            }\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push( new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            \r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default BasketStore;\r\n\r\nconst BasketContext = React.createContext();\r\n\r\nexport const BasketProvider = ({ children, store }) => {\r\n    return (\r\n      <BasketContext.Provider value={store}>{children}</BasketContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useBasketStore = () => React.useContext(BasketContext);\r\n\r\nexport const withBasketStore = (Component) => (props) => {\r\n    return <Component {...props} store={useBasketStore()} />;\r\n  };","import { tryReference, types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsFigurine(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst FigurineStore = types\r\n  .model(\"Figurine\", {\r\n    cm: false,\r\n    diameter: 13,\r\n    arms: true, \r\n    ears: \"bear\", // bear, bunny, cat, sphere\r\n    body_scale: 0.7,\r\n    body_height: 0.35,\r\n    default_color: \"#FFFFFF\",\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    tot_rows_head: 33,\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[30,12],[40,11],[53,10],[40,10]]), // last = body\r\n    // unused, only for consistency: \r\n    flat_bottom: false, \r\n    top_rim: false, \r\n    bottom_rim: false, \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_ears(val){\r\n        self.ears = val\r\n    },\r\n    update_arms(val){\r\n        self.arms = val\r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    }, \r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    storePic(picData, sectionNum){\r\n        self.textures[sectionNum] = picData\r\n        // console.log(picData)\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53\r\n        return self.modelDimensions\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getBrokenHeadPts(tot_theta_len){\r\n        let theta_start = 0 \r\n        let theta_len = 0\r\n        let divisions = []\r\n        for (let i = 0; i < self.modelDimensions.length-1; i++){\r\n            const num_rows = self.modelDimensions[i][1]\r\n            const ratio = num_rows/self.tot_rows_head\r\n            theta_len = ratio * tot_theta_len\r\n            divisions.push([theta_start, theta_len])\r\n            theta_start += theta_len\r\n        }\r\n        return divisions\r\n    },\r\n    updateCurvedPts(){\r\n        const s_dtop_h = self.diameter * self.body_height\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n\r\n        const s_dtop_bottom = self.diameter * self.body_scale\r\n\r\n        const s_diameter = self.diameter \r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dtop_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop_bottom/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsFigurine(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    },\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default FigurineStore;\r\n\r\nconst FigurineContext = React.createContext();\r\n\r\nexport const FigurineProvider = ({ children, store }) => {\r\n    return (\r\n      <FigurineContext.Provider value={store}>{children}</FigurineContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useFigurineStore = () => React.useContext(FigurineContext);\r\n\r\nexport const withFigurineStore = (Component) => (props) => {\r\n    return <Component {...props} store={useFigurineStore()} />;\r\n  };","import { tryReference, types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsSwan(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst SwanStore = types\r\n  .model(\"Swan\", {\r\n    cm: false,\r\n    diameter: 16,\r\n    body_height: 0.35,\r\n    top_scale: 1,\r\n    bottom_scale:0.6, \r\n    height_scale: 0.4,\r\n    default_color: \"#FFFFFF\", \r\n    wings: true, // true = two wings\r\n    bottom_rim: true,\r\n    texture: \"\", \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10]]), // top to bottom\r\n    // unused, only for consistency: \r\n    flat_bottom: false,\r\n    top_rim: false, \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_units(units){\r\n        self.cm = units\r\n    }, \r\n    update_wings(val){\r\n        self.wings = val\r\n    },\r\n    update_bottom_rim(val){\r\n        self.bottom_rim = val\r\n    },\r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    storePic(picData){\r\n        self.texture = picData\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53 // un hard code\r\n        return self.modelDimensions\r\n    },\r\n    swanBodyPts(){\r\n        const s_dtop_h = self.diameter * self.height_scale\r\n        const s_dbottom_h = -1 * s_dtop_h * 0.8\r\n\r\n        const s_bottom = self.diameter * self.bottom_scale\r\n        const s_top = self.diameter * self.top_scale\r\n\r\n        const s_diameter = self.diameter \r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_top/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsSwan(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default SwanStore;\r\n\r\nconst SwanContext = React.createContext();\r\n\r\nexport const SwanProvider = ({ children, store }) => {\r\n    return (\r\n      <SwanContext.Provider value={store}>{children}</SwanContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useSwanStore = () => React.useContext(SwanContext);\r\n\r\nexport const withSwanStore = (Component) => (props) => {\r\n    return <Component {...props} store={useSwanStore()} />;\r\n  };","import VaseStore from \"./VaseStore\"\r\nimport ColoringForm from \"./ColoringForm\"\r\nimport BasketStore from \"./BasketStore\"\r\nimport FigurineStore from \"./FigurineStore\"\r\nimport SwanStore from \"./SwanStore\"\r\nimport { types } from \"mobx-state-tree\";\r\n\r\n/**\r\n * A RootStore model.\r\n */\r\n// prettier-ignore\r\nconst RootStore = types.model(\"RootStore\").props({\r\n  vaseStore: types.optional(VaseStore, {}),\r\n  coloringFormStore: types.optional(ColoringForm, {}),\r\n  basketStore: types.optional(BasketStore, {}),\r\n  figStore: types.optional(FigurineStore, {}),\r\n  swanStore: types.optional(SwanStore, {}),\r\n});\r\n\r\nexport default RootStore;\r\n\r\n","import React, { createContext, useContext } from \"react\";\r\nimport RootStore from \"./RootStore\";\r\n\r\n/**\r\n * Create a context we can use to\r\n * - Provide access to our stores from our root component\r\n * - Consume stores in our screens (or other components, though it's\r\n *   preferable to just connect screens)\r\n */\r\n// const RootStoreContext = createContext();\r\n\r\n// /**\r\n//  * The provider our root component will use to expose the root store\r\n//  */\r\n// export const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n// /**\r\n//  * A hook that screens can use to gain access to our stores, with\r\n//  * `const { someStore, someOtherStore } = useStores()`,\r\n//  * or less likely: `const rootStore = useStores()`\r\n//  */\r\n// export const useStores = () => useContext(RootStoreContext);\r\n\r\n//------------------------------------------------------------------\r\n\r\nconst RootStoreContext = React.createContext();\r\n\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n\r\n// export const RootStoreProvider = ({ children, store }) => {\r\n//     return (\r\n//       <RootStoreContext.Provider value={store}>{children}</RootStoreContext.Provider>\r\n//     );\r\n// };\r\n\r\nexport const useStores = () => React.useContext(RootStoreContext);\r\n","import React, {useEffect} from \"react\";\r\n\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Swan from \"../components/Swan\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateSwan = () => {\r\n\r\n  const { swanStore, coloringFormStore } = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  }, [swanStore.wings])\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"∧ ∧\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"∧\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[1, 50]} step={1} mode={2} values={[swanStore.diameter]} onUpdate={(val) => swanStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\nconst bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_bottom_rim(val)}\r\n    options={options}\r\n    initialSelectedIndex={swanStore.bottom_rim ? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\nconst wings_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_wings(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={swanStore.wings? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => swanStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={swanStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '400px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Swan swanStore={swanStore} result={false}/>\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">wings</p>\r\n          {wings_switch}\r\n          </div>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">bottom_rim</p>\r\n          {bottom_rim_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateSwan);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport {useFrame} from \"react-three-fiber\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n// import temp from \"../../assets/tempp.png\";\r\n\r\nconst Vase = (props) => {\r\n    const {vase} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n    // texture.wrapS = THREE.MirroredRepeatWrapping;\r\n    // texture.wrapT = THREE.MirroredRepeatWrapping;\r\n    // texture.repeat.set(2, 2.6);\r\n\r\n    const s_dtop_h = vase.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vase.scale_h/vase.height\r\n\r\n    const s_dtop = Math.max(1,vase.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,vase.dbottom * scale_factor)\r\n\r\n    const s_d1 = Math.max(1, vase.d1 * scale_factor)\r\n    const s_d1_h = (vase.d1_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d2 = Math.max(1, vase.d2 * scale_factor)\r\n    const s_d2_h = (vase.d2_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d3 = Math.max(1,vase.d3 * scale_factor)\r\n    const s_d3_h = (vase.d3_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = vase.top_rim ? getInputMarker((s_dtop/2) + 0.6, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = vase.bottom_rim ? getInputMarker((s_dbottom/2) + 0.6, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const d1_marker = getInputMarker((s_d1/2) + 0.1, s_d1_h)\r\n    const d2_marker = getInputMarker((s_d2/2) + 0.1, s_d2_h)\r\n    const d3_marker = getInputMarker((s_d3/2) + 0.1, s_d3_h)\r\n\r\n    if (vase.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.4,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (vase.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.4, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    const points = vase.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vase.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {vase.top_rim && top_rim_mesh}\r\n            {vase.bottom_rim && bottom_rim_mesh}\r\n            {vase.flat_bottom && flat_bottom_mesh}\r\n            {dbottom_marker}\r\n            {d1_marker}\r\n            {d2_marker}\r\n            {d3_marker}\r\n            {dtop_marker}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Vase);","import React, {useEffect} from \"react\";\r\n\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Vase from \"../components/Vase\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateVase = () => {\r\n\r\n  const { vaseStore, coloringFormStore} = useStores();\r\n  coloringFormStore.setModel(\"vase\")\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  function MultiHandle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    if (id == \"$$-0\" || id == \"$$-4\"){\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 2,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 3,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n          {...getHandleProps(id)}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 4, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[10, 100]} step={1} mode={2} values={[vaseStore.height]} onUpdate={(val) => vaseStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.dtop]} onUpdate={(val) => vaseStore.update_dtop(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d3 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d3]} onUpdate={(val) => vaseStore.update_d3(val[0])} >\r\n    <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d2 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d2]} onUpdate={(val) => vaseStore.update_d2(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d1 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d1]} onUpdate={(val) => vaseStore.update_d1(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.dbottom]} onUpdate={(val) => vaseStore.update_dbottom(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const dSlider = <Slider\r\n  rootStyle={sliderStyle}\r\n  domain={[0, 100]}\r\n  mode={2}\r\n  values={[0, vaseStore.d1_h, vaseStore.d2_h, vaseStore.d3_h, 100] /* three values = three handles */}\r\n  onUpdate={(val)=>vaseStore.update_d_heights(val)}\r\n  step={5}\r\n  >\r\n  <div style={railStyle} />\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <MultiHandle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const flat_bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_flat_bottom(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.flat_bottom ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={vaseStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            {/* <ambientLight intensity={0} /> */}\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.3}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n             {/* <spotLight position={[1, 10, 10]} angle={0.15} penumbra={1} /> */}\r\n            {/* <pointLight position={[-10, -10, -10]} /> */}\r\n            <Vase vase={vaseStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{background: '#FFE7E5', width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">2nd diameter</p>\r\n              {slider_d3}\r\n              <p className=\"text\">4th diameter</p>\r\n              {slider_d1}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n              <p className=\"text\">3rd diameter</p>\r\n              {slider_d2}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <p className=\"text\">diameter heights ( % )</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {dSlider}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'right', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom cover</p>\r\n            {flat_bottom_switch}\r\n          </div>\r\n          <div style={{color:'#FFE7E5', marginTop: -10}}>.</div>\r\n          <div className=\"switch\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Basket = (props) => {\r\n    const {basketStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    const s_diameter = Math.max(1, basketStore.diameter * scale_factor)\r\n    const s_diameter_h = 0\r\n\r\n    // need rounded bottom shape , concave\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n    \r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = basketStore.top_rim ? getInputMarker((s_dtop/2) + 0.5, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = basketStore.bottom_rim ? getInputMarker((s_dbottom/2) + 0.5, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    const points = basketStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {diameter_marker}\r\n            {dtop_marker}\r\n            {dbottom_marker}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Basket);","import React, {useEffect} from \"react\";\r\n\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Basket from \"../components/Basket\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateBasket = () => {\r\n\r\n  const { basketStore, coloringFormStore} = useStores();\r\n  coloringFormStore.setModel(\"basket\")\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[10, 100]} step={1} mode={2} values={[basketStore.height]} onUpdate={(val) => basketStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[basketStore.diameter]} onUpdate={(val) => basketStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[basketStore.dbottom]} onUpdate={(val) => basketStore.update_dbottom(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n\r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[basketStore.dtop]} onUpdate={(val) => basketStore.update_dtop(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const lid_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_lid(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.lid ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_flat_bottom(!val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.flat_bottom ? 1 : 0}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n</div>\r\n\r\n  const top_handle_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_top_handle(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.top_handle ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  const side_handles_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_side_handles(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.side_handles ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={basketStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '690px'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 100], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Basket basketStore={basketStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">middle diameter</p>\r\n              {slider_diameter}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">curved bottom</p>\r\n            {bottom_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top handle</p>\r\n            {top_handle_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">lid</p>\r\n            {lid_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">side handles</p>\r\n            {side_handles_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateBasket);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\nimport Wing from \"../Wing\"\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []) \r\n\r\n    const s_diameter = figStore.diameter \r\n    const s_diameter_h = 0\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (figStore.diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const head =\r\n    <group>\r\n        <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.BackSide}/>\r\n        </mesh>\r\n    </group>\r\n\r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears == \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears == \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears == \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears == \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = figStore.diameter/7\r\n        const y_pos = (figStore.diameter * figStore.body_height)/2\r\n        const x_pos = (figStore.diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {head}\r\n            {diameter_marker}\r\n            {figStore.ears == \"bear\" && bear_ears}\r\n            {figStore.ears == \"bunny\" && bunny_ears}\r\n            {figStore.ears == \"cat\" && cat_ears}\r\n            {figStore.ears == \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, {useEffect} from \"react\";\r\n\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Figurine from \"../components/Figurine\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateFigurine = () => {\r\n\r\n  const { figStore, coloringFormStore} = useStores();\r\n  coloringFormStore.setModel(\"fig\")\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"◠ ◠\",\r\n        value: \"bear\",\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"〇 〇\",\r\n        value: \"sphere\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∧ ∧\",\r\n        value: \"cat\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∩ ∩\",\r\n        value: \"bunny\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },\r\n  ];\r\n\r\n  const ears = [\"bear\", \"sphere\", \"cat\", \"bunny\"]\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[1, 50]} step={1} mode={2} values={[figStore.diameter]} onUpdate={(val) => figStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n\r\n  const arms_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => figStore.update_arms(val)}\r\n      options={options}\r\n      initialSelectedIndex={figStore.arms ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  \r\nconst ears_switch = <div className=\"switch\"  style={{width: 360, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => figStore.update_ears(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={ears.indexOf(`${figStore.ears}`)}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n    fontSize={20}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => figStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={figStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '470px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Figurine figStore={figStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <p className=\"text\">arms</p>\r\n          {arms_switch}\r\n          <br/>\r\n          <p className=\"text\">ears</p>\r\n          {ears_switch}\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateFigurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultVase = (props) => {\r\n    const {vaseStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, vaseStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, vaseStore.modelDimensions.length)\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = vaseStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            // console.log(vaseStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n\r\n    const s_dtop_h = vaseStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vaseStore.scale_h/vaseStore.height\r\n\r\n    const s_dtop = vaseStore.dtop * scale_factor\r\n    const s_dbottom = vaseStore.dbottom * scale_factor\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    if (vaseStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.4,10,50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (vaseStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.4, 10, 50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const points = useMemo(() => vaseStore.updateCurvedPts(true), [vaseStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vaseStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh >\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshLambertMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh> \r\n            ))}\r\n            </group>\r\n            {vaseStore.top_rim && top_rim_mesh}\r\n            {vaseStore.bottom_rim && bottom_rim_mesh}\r\n            {vaseStore.flat_bottom && flat_bottom_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, figStore.modelDimensions.length-1);\r\n        insideRef.current = insideRef.current.slice(0, figStore.modelDimensions.length-1);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = figStore.modelDimensions.length-1\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            // console.log(figStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const texture_body = useMemo(() => new THREE.TextureLoader().load(figStore.textures[figStore.textures.length-1]), []) \r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (figStore.diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const divs = figStore.getBrokenHeadPts(Math.PI*theta_len)\r\n\r\n    const broken_head = \r\n    <group>\r\n        {divs.map((_, i) => (\r\n            <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        ))}\r\n        {divs.map((_, i) => (\r\n            <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => insideRef.current[i] = el} side={THREE.BackSide}/>\r\n            </mesh>\r\n        ))}\r\n    </group>\r\n    \r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears == \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears == \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears == \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears == \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = figStore.diameter/7\r\n        const y_pos = (figStore.diameter * figStore.body_height)/2\r\n        const x_pos = (figStore.diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {broken_head}\r\n            {figStore.ears == \"bear\" && bear_ears}\r\n            {figStore.ears == \"bunny\" && bunny_ears}\r\n            {figStore.ears == \"cat\" && cat_ears}\r\n            {figStore.ears == \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultBasket = (props) => {\r\n    const {basketStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, basketStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, basketStore.modelDimensions.length);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = basketStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            // console.log(basketStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    // const points = basketStore.updateCurvedPts()\r\n    const points = useMemo(() => basketStore.updateCurvedPts(true), [basketStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh >\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh>\r\n            ))}\r\n            </group>   \r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultBasket);","export default __webpack_public_path__ + \"static/media/upper-banner.1523f22e.png\";","export default __webpack_public_path__ + \"static/media/lower-banner.94f2cf86.png\";","import React, {useEffect, useRef} from 'react';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport { observer } from \"mobx-react\";\r\nimport  ResultVase  from \"../components/ResultVase\"\r\nimport  Swan  from \"../components/Swan\"\r\nimport  ResultFigurine  from \"../components/ResultFigurine\"\r\nimport  ResultBasket  from \"../components/ResultBasket\"\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport './create-vase.css'\r\nimport upperbanner from \"../assets/upper-banner.png\"\r\nimport lowerbanner from \"../assets/lower-banner.png\"\r\nimport { FiDownload } from \"react-icons/fi\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst Result = () => {\r\n  const {coloringFormStore, vaseStore, swanStore, basketStore, figStore} = useStores()\r\n  const model = coloringFormStore.model; \r\n  \r\n  const canvasRef = useRef()\r\n  let modelStore; \r\n  if (coloringFormStore.model == \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model == \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model == \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model == \"basket\") modelStore = basketStore\r\n  modelStore.setDefaultColor(coloringFormStore.defaultColor)\r\n  console.log(modelStore.default_color)\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext(\"2d\")\r\n    // console.log(coloringFormStore.coloringFormData)\r\n    // console.log(coloringFormStore.coloringFormData[0].drawingSectionData[0].rowData[0].pixelColor)\r\n    // console.log(\"Num sections\", coloringFormStore.coloringFormData.length)\r\n    const px_size = 20\r\n    const half_px_width = px_size/2\r\n    const defaultCol = coloringFormStore.defaultColor;\r\n\r\n    for (let i = 0; i < coloringFormStore.coloringFormData.length; i++){\r\n      const sec_width = modelStore.modelDimensions[i][0]\r\n      const sec_height = modelStore.modelDimensions[i][1] \r\n      canvas.width = sec_width * px_size\r\n      canvas.height = sec_height * px_size\r\n      context.fillStyle = defaultCol\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n      for (let r = 0; r < sec_height; r++){\r\n        let offset = 0 \r\n        if (coloringFormStore.coloringFormData[i].drawingSectionData[r].offset){\r\n          offset = half_px_width\r\n          const last_idx = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData.length\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[last_idx-1].pixelColor\r\n          context.fillRect(0, px_size * r, half_px_width, px_size)\r\n        }\r\n        for (let c = 0; c < sec_width; c++){\r\n          if (coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor == defaultCol) continue\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor\r\n          context.fillRect((px_size * c) + offset, px_size * r, px_size, px_size)\r\n        }\r\n      }\r\n      var texture = canvas.toDataURL(\"image/png\", 1.0)\r\n      modelStore.storePic(texture)\r\n    }\r\n  }, [])\r\n\r\n  // const modelRef = useRef()  \r\n\r\n  return (\r\n    // <canvas ref={canvasRef}/> // to test texture generation\r\n    <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '600px'}}>\r\n      <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '52%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 95], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: \"80%\", borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {0.8}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {0.8}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.3} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.1} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.1} />\r\n            {coloringFormStore.model == \"vase\" && <ResultVase vaseStore={vaseStore} />}\r\n            {coloringFormStore.model == \"swan\" && <Swan swanStore={swanStore} result={true}/>}\r\n            {coloringFormStore.model == \"fig\" && <ResultFigurine figStore={figStore}/>}\r\n            {coloringFormStore.model == \"basket\" && <ResultBasket basketStore={basketStore} />}\r\n          </Canvas>\r\n        <div className=\"containerCaption\">\r\n            <div style={{height: 10}}></div>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 10}}></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"containerRight\" style={{width: '48%', height: \"100%\", overflow: 'visible', float:'right', alignItems:\"center\", justifyContent:\"center\", position: \"relative\"}}>\r\n        <canvas style={{display:\"none\"}} ref={canvasRef}/>\r\n        <img src={upperbanner} className=\"banner\" style={{marginTop: 2}}/>\r\n        <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d-o diagram <span><FiDownload size={20}/></span></p>\r\n        </div>\r\n        {/* <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d model <span><FiDownload size={20}/></span></p>\r\n        </div> */}\r\n        <img src={lowerbanner} className=\"banner-b\"  />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Result);","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\n\r\nimport Landing from './landing';\r\nimport About from './about';\r\nimport Learn from './learn';\r\nimport Contact from './contact';\r\nimport Create from './create';\r\nimport Gallery from './gallery';\r\nimport Browse from './browse';\r\nimport CreateSwan from \"./create-swan\"\r\nimport CreateVase from \"./create-vase\"\r\nimport CreateBasket from \"./create-basket\"\r\nimport CreateFigurine from \"./create-figurine\"\r\nimport Result from \"./result\"\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n  <div className=\"Background\">\r\n    <div className=\"InnerApp\"> \r\n      <Navbar/>\r\n      <Switch>\r\n        <Route path='/about' component={About} />\r\n        <Route path='/create' component={Create} />\r\n        <Route path='/learn' component={Learn} />\r\n        <Route path='/contact' component={Contact} />\r\n        <Route path='/gallery' component={Gallery} />\r\n        <Route path='/browse' component={Browse} />\r\n        <Route path='/create-swan' component={CreateSwan} />\r\n        <Route path='/create-vase' component={CreateVase} />\r\n        <Route path='/create-basket' component={CreateBasket} />\r\n        <Route path='/create-figurine' component={CreateFigurine} />\r\n        <Route path='/Result' component={Result} />\r\n        <Route path='/' component={Landing}/>\r\n      </Switch>\r\n    </div>\r\n    <p style={{marginBottom: 30, marginTop: 20, letterSpacing: 1.5, color: \"#E33937\", fontSize:13}}>lina nguyen 🍓 2021</p>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState, useRef} from \"react\";\r\nimport \"./pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Pixel = (props) => {\r\n  const {formObject, PxModel} = props;\r\n\r\n  // const [PxModel.pixelColor, PxModel.setPixelColor] = useState(\"#FFFFFF\");\r\n  // const [PxModel.oldColor, PxModel.setOldColor] = useState(PxModel.pixelColor);\r\n  // const [PxModel.canChangeColor, PxModel.setCanChangeColor] = useState(true);\r\n\r\n  function borderColor() {\r\n    var color = PxModel.pixelColor.substring(2, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(formObject.clear) {\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if (PxModel.pixelColor == formObject.oldDefault) PxModel.setPixelColor(formObject.defaultColor)\r\n  }, [formObject.defaultColor])\r\n\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n    PxModel.setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    PxModel.setOldColor(PxModel.pixelColor);\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (PxModel.canChangeColor) {\r\n      PxModel.setPixelColor(PxModel.oldColor);\r\n    }\r\n\r\n    PxModel.setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: PxModel.pixelColor, borderColor: borderColor(), borderStyle: PxModel.inverted ? \"dashed\" : \"solid\"}}\r\n    ></div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(Pixel);","import React, { useState } from \"react\";\r\nimport \"./specialPixel.css\";\r\n\r\nexport default function SpecialPixel(props) {\r\n  const {on, num, markerNum, displayRowNum, rounded} = props;\r\n\r\n  if (on){\r\n    if (markerNum){\r\n      return (\r\n        <div\r\n          className=\"specialPixelOn\"\r\n        ><p style={{marginTop: -4, fontSize: 10, marginLeft: -1.1, position:'absolute', background: \"#FF6C7B\", paddingLeft: 2.5, paddingRight:2.5, borderRadius:6, color:\"white\"}}> {markerNum}</p></div>\r\n      );\r\n    } else {\r\n      if (rounded){\r\n        return (\r\n          <div className=\"roundedRight\"\r\n          ></div>\r\n        );\r\n      }\r\n      else{\r\n        return (\r\n          <div className=\"specialPixelOn\"\r\n          ></div>\r\n        );\r\n      }\r\n    }\r\n  } \r\n  else {\r\n    if (displayRowNum){\r\n      return (\r\n        <div\r\n          className=\"rowMarkerPixel\"\r\n        >\r\n          <p style={{fontSize:9, marginLeft: 5, marginTop:0, position:'absolute'}}>{displayRowNum}</p>\r\n          </div>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <div\r\n          className=\"specialPixelOff\"\r\n        >\r\n          <p style={{fontSize:10, marginLeft: 4, marginTop: -4, position:'absolute'}}>{num}</p>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n}","import React, {useEffect} from \"react\";\r\nimport \"./row.css\";\r\nimport Pixel from \"../Pixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst Row = (props) => {\r\n  const {formObject, RowModel} = props;\r\n  let pixels = [];\r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  if (RowModel.rowData.length == 0){\r\n    for (let i = 0; i < RowModel.width; i++) {\r\n      RowModel.addPx()\r\n    }\r\n  }\r\n  for (let i = 0; i < RowModel.width; i++) {\r\n    if(formObject.inverted) RowModel.rowData[i].setInverted()\r\n    pixels.push(<Pixel key={i} formObject={formObject} PxModel={RowModel.rowData[i]}/>);\r\n  }\r\n\r\n  pixels.push(<SpecialPixel key={RowModel.width} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  return <div style={{marginLeft: RowModel.offset}} className=\"row\">{pixels}</div>;\r\n}\r\n\r\nexport default observer(Row)","import React from \"react\";\r\nimport \"./specialRow.css\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\n\r\nexport default function SpecialRow(props) {\r\n  const { width, offset, specialTop, specialBottom } = props;\r\n\r\n  let pixels = [];\r\n\r\n  const my_dict = specialBottom ? specialBottom : specialTop\r\n  let count = 0 \r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} num={\"\"}/>)\r\n\r\n  for (let i = 0; i < width; i++) {\r\n    if (i in my_dict){\r\n      if (my_dict[i] == 1){\r\n        count += 1\r\n        pixels.push(<SpecialPixel key={i} on={true} markerNum={count}/>);\r\n      }\r\n      else if (my_dict[i] == -1){\r\n        pixels.push(<SpecialPixel key={i} on={true} rounded={true}/>);\r\n      }\r\n      else if (i == width-1 && my_dict[i] == 0){\r\n        pixels[0] = <SpecialPixel key={i} on={true}/>\r\n      }\r\n      else{\r\n        pixels.push(<SpecialPixel key={i} on={true}/>);\r\n      }\r\n    }\r\n    else{\r\n        pixels.push(<SpecialPixel key={i} on={false} num = {i+1}/>);\r\n    }\r\n  }\r\n\r\n  return <div style={{marginLeft: offset}} className=\"specialRow\">{pixels}</div>;\r\n}","import React, { useEffect, useState, useRef} from \"react\";\r\nimport \"../Pixel/pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedPixel = (props) => {\r\n  const {formObject, inverted} = props;\r\n\r\n  const [pixelColor, setPixelColor] = useState(\"#FFFFFF\");\r\n  const [oldColor, setOldColor] = useState(pixelColor);\r\n  const [canChangeColor, setCanChangeColor] = useState(true);\r\n\r\n  function borderColor() {\r\n    var color = pixelColor.substring(2, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(formObject.clear) {\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if (pixelColor == formObject.oldDefault) setPixelColor(formObject.defaultColor)\r\n  }, [formObject.defaultColor])\r\n\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    setPixelColor(formObject.selectedColor);\r\n    setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    setOldColor(pixelColor);\r\n    setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (canChangeColor) {\r\n      setPixelColor(oldColor);\r\n    }\r\n\r\n    setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: pixelColor, width: 20, borderColor: borderColor(), borderStyle: inverted ? \"dashed\" : \"solid\"}}\r\n    ></div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(UntrackedPixel);","import React, {useEffect} from \"react\";\r\nimport \"../Row/row.css\";\r\nimport UntrackedPixel from \"../UntrackedPixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst UntrackedRow = (props) => {\r\n  const {formObject, numPx, offset, display, inverted} = props;\r\n  let pixels = [];\r\n\r\n  if(display) pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={display}/>)\r\n\r\n  for (let i = 0; i < numPx; i++) {\r\n    pixels.push(<UntrackedPixel key={i} formObject={formObject} inverted={inverted} />);\r\n  }\r\n  \r\n  return <div style={{marginLeft: offset}} className=\"row\">{pixels}</div>;\r\n  \r\n}\r\n\r\nexport default observer(UntrackedRow)","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst TriangleSection = (props) => {\r\n  const {width, formObject, elevation, firstRowDisplay, inverted} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = [];\r\n  \r\n  // height = width \r\n  const px_width = 21 // 21 is the px width w border\r\n  for (let i = 0; i < width; i++) {\r\n    let var_offset = (0.5*(px_width)*(width-i-1))\r\n    let displayNum = elevation+width-i\r\n    if (!firstRowDisplay){\r\n      if (i < width - 1) var_offset = (0.5*(px_width)*(width-i-3))\r\n      else displayNum = false\r\n    }\r\n    rows.push(<UntrackedRow key={i} numPx={i+1} offset={var_offset} formObject={formObject} display={displayNum} inverted={inverted}/>);\r\n  }\r\n\r\n  return (\r\n    <div id=\"triangleSection\">\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 0, marginLeft: 0, marginRight:0}}>\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(TriangleSection)","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"./drawingSection.css\";\r\nimport Row from \"../Row\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport TriangleSection from \"../TriangleSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst DrawingSection = (props) => {\r\n  const {specialTop, specialBottom, formObject, DrawingSectionModel} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = []; \r\n  let swanUpper = [];\r\n\r\n  if (formObject.model == \"swan\"){\r\n    if (formObject.swan_two_wings){\r\n      const wing_width = 2 * Math.round(0.195 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - (2 * wing_width)\r\n      const chest_width = Math.ceil(remainder/2)\r\n      const back_width = Math.floor(remainder/2)\r\n      const wing1 = <TriangleSection width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true}/> \r\n      const wing2 = <TriangleSection width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} /> \r\n      const chest = <TriangleSection width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} />\r\n      const back = <TriangleSection width={back_width} formObject={formObject} elevation={DrawingSectionModel.height} inverted={true}/>\r\n      swanUpper.push(wing1, chest, wing2, back)\r\n    } \r\n    else {\r\n      const wing_width = Math.round(0.75 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - wing_width\r\n      const chest_width = remainder - 2\r\n      const wing = <TriangleSection width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} inverted={true}/> \r\n      const chest = <TriangleSection width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} />\r\n      swanUpper.push(wing, chest)\r\n    }\r\n  }\r\n\r\n  if (formObject.model != \"swan\") rows.push(<SpecialRow key={-1} offset={0} width={DrawingSectionModel.width} specialTop={specialTop} />)\r\n  \r\n  if(DrawingSectionModel.drawingSectionData.length == 0){\r\n    for (let i = 0; i < DrawingSectionModel.height; i++){\r\n      DrawingSectionModel.addRow()\r\n    }\r\n  }\r\n  for (let i = 0; i < DrawingSectionModel.height; i++) {\r\n    DrawingSectionModel.drawingSectionData[i].setWidth(DrawingSectionModel.width)\r\n    DrawingSectionModel.drawingSectionData[i].setDisplayRowNum(DrawingSectionModel.height-i)\r\n    if (i%2 == 1){\r\n      DrawingSectionModel.drawingSectionData[i].setOffset()\r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n    else{ \r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n  }\r\n  \r\n  if(DrawingSectionModel.increasing){\r\n    if (DrawingSectionModel.height%2 == 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5*2} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (DrawingSectionModel.height%2 == 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={0} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {formObject.model == \"swan\" && <div style={{display:\"flex\", alignItems:\"flex-end\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n          {swanUpper}\r\n        </div>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(DrawingSection)","import React, {useRef} from 'react';\r\nimport DrawingSection from \"../DrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst OrigamiObject = (props) => {\r\n    const {dimensions, formObject} = props;\r\n  \r\n    const objectRef = useRef();\r\n\r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    if (formObject.model == \"swan\"){\r\n      specialTop = Array(dimensions.length).fill({})\r\n      specialBottom = Array(dimensions.length).fill({})\r\n    }\r\n    else {\r\n      if (dimensions[dimensions.length-2][0]-dimensions[dimensions.length-1][0] < 0) formObject.setInverted()\r\n\r\n      for (let i = dimensions.length-2; i >= 0; i--){\r\n        let sTopCurr = {}\r\n        let sBottomCurr = {}\r\n\r\n        const curr = dimensions[i+1][0]\r\n        const next = dimensions[i][0]\r\n        let diff = next-curr // number of pieces need to add or subtract \r\n\r\n        let distribute = 0 \r\n        let remainder = 0\r\n        let spacing = 0\r\n\r\n        if (diff > 0){ // increasing - 2 pcs per increase\r\n          sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n          distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n          remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = -1\r\n            idx += spacing_arr[i] + 2\r\n            i += 1 \r\n          }\r\n          let last_idx = 2\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n            sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 3\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)    \r\n          increasing.unshift(true) \r\n        } \r\n        else { // decreasing \r\n          sBottomCurr = {0: 1, 1: -1}\r\n          diff = -1 * diff\r\n          distribute = curr - (3 * diff)\r\n          remainder = distribute % diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = 0\r\n            sTopCurr[idx+2] = -1\r\n            idx += spacing_arr[i] + 3\r\n            i += 1 \r\n          }\r\n          let last_idx = 1\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 2\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)  \r\n          increasing.unshift(false)\r\n        }\r\n      }\r\n      if (formObject.model == \"fig\"){\r\n        specialTop[specialTop.length-1] = {}\r\n        specialBottom[specialBottom.length-1] = {}\r\n      } \r\n      specialTop.unshift({})\r\n      specialBottom.push({})\r\n      increasing.push(false)\r\n    }\r\n\r\n    let sections = [];\r\n  \r\n    if (formObject.coloringFormData.length == 0){\r\n      for (let i = 0; i < dimensions.length; i++) {\r\n        formObject.addDrawingSection()\r\n      }\r\n    }\r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      formObject.coloringFormData[i].setWidthHeight(dimensions[i][0], dimensions[i][1])\r\n      formObject.coloringFormData[i].setIncreasing(increasing[i])\r\n      sections.push(<DrawingSection key={i} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} formObject={formObject} DrawingSectionModel={formObject.coloringFormData[i]} />);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        <div id=\"sections\" ref={objectRef}>\r\n          {sections}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(OrigamiObject)","export default __webpack_public_path__ + \"static/media/rim.90d28599.png\";","export default __webpack_public_path__ + \"static/media/halfRim.934ee4ec.png\";","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport rim_image from \"../../assets/rim.png\";\r\nimport half_rim_image from \"../../assets/halfRim.png\";\r\nimport \"./rim.css\"\r\n\r\nconst Rim = (props) => {\r\n    const {half, caption, circ} = props \r\n\r\n    return (\r\n        <div className=\"rimDiv\">\r\n            {!half && <img src={rim_image} className=\"rim\" />}\r\n            {half && <img src={half_rim_image} className=\"half_rim\" />}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Rim;","import React, {useRef} from 'react';\r\nimport { observer } from \"mobx-react\";\r\nimport Rim from \"../Rim\";\r\n\r\nconst Appendages = (props) => {\r\n    const {modelStore, modelType} = props;\r\n  \r\n    let sections = []\r\n\r\n    // top_rim, bottom_rim, flat_bottom, arms, ears, lid, top_handle, side_handles\r\n\r\n    if (modelStore.top_rim){\r\n      sections.push(<Rim half={false} caption={\"top rim\"} circ={modelStore.getDimensions()[0][0]}/>) // static picture\r\n    }\r\n    if (modelStore.bottom_rim){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      sections.push(<Rim half={false} caption={\"bottom rim\"} circ={circ}/>) // static picture\r\n    }\r\n    // if (modelStore.flat_bottom){\r\n    //   const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n    //   sections.push(<Bottom flat={true} circ={circ} lid={false}/>) // circ = circumfrence\r\n    // }\r\n    // else if (modelType == \"basket\"){\r\n    //   const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n    //   sections.push(<Bottom flat={false} circ={circ} lid={false}/>)\r\n    // }\r\n    // if (modelStore.arms){\r\n    //   const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n    //   sections.push(<Arm circ={circ}/>)\r\n    // }\r\n    // if (modelStore.ears != \"\"){\r\n    //   const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0] // make ears prop. to body circ\r\n    //   switch (modelStore.ears){\r\n    //     case \"bear\":\r\n    //       sections.push(<Rim half={true} caption={\"bear ears x 2\"} circ={circ}/>) // static picture\r\n    //     case \"bunny\":\r\n    //       sections.push(<Ear type={\"bunny\"} size={circ}/>)\r\n    //     case \"sphere\":\r\n    //       sections.push(<Sphere caption={\"round ears x 2\"} size={circ}/>)\r\n    //     case \"cat\":\r\n    //       sections.push(<Ear type={\"cat\"} size={circ}/>)\r\n    //     default: \r\n    //       break\r\n    //   }\r\n    // }\r\n    // if (modelStore.lid){\r\n    //   const circ = modelStore.getDimensions()[0][0]\r\n    //   sections.push(<Bottom flat={false} circ={circ} lid={true}/>)\r\n    // }\r\n    if (modelStore.side_handles){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      sections.push(<Rim half={true} caption={\"side handles\"} circ={circ}/>) // static picture\r\n    }\r\n    // if (modelStore.top_handle){\r\n    //   const circ = modelStore.getDimensions()[0][0]\r\n    //   sections.push(<Handle length={circ} width={5}/>)\r\n    // }\r\n\r\n    return (\r\n      <div id=\"Appendages\">\r\n        <div style={{display:\"flex\", alignItems:\"flex-start\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n          {sections}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(Appendages)","import React, {useState, useRef} from 'react';\r\nimport { TwitterPicker } from \"react-color\";\r\nimport OrigamiObject from \"../components/OrigamiObject\";\r\nimport \"./colouringPage.css\";\r\nimport Sticky from 'react-stickynode';\r\nimport { observer } from \"mobx-react\";\r\nimport logo from \"../assets/complex-logo.png\"\r\n// import {PlainLink as Link} from '../components/Navbar/NavbarElements';\r\nimport { AiOutlineInfo } from \"react-icons/ai\";\r\nimport { FiTrash } from \"react-icons/fi\";\r\nimport { IoChevronForward, IoChevronBack } from \"react-icons/io5\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport DelayLink from 'react-delay-link';\r\nimport Appendages from \"../components/Appendages\";\r\n\r\n\r\nconst Colouring = () => {\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [showPickerDefault, setShowPickerDefault] = useState(false);\r\n  const [colorPaletteIdx, setColorIdx] = useState(0);\r\n  const [dColorPaletteIdx, setDColorIdx] = useState(0);\r\n  const [colorPalette, setColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']) \r\n  const [dColorPalette, setDColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']) \r\n\r\n  const diagramRef = useRef();\r\n  const appendagesRef = useRef();\r\n  const {coloringFormStore, vaseStore, swanStore, figStore, basketStore} = useStores();\r\n  let modelStore;\r\n  if (coloringFormStore.model == \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model == \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model == \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model == \"basket\") modelStore = basketStore\r\n\r\n  function changeColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setColor(search);\r\n    if (!colorPalette.includes(search)){\r\n      let new_palette = colorPalette\r\n      new_palette[colorPaletteIdx] = search\r\n      setColorPalette(new_palette)\r\n      const new_idx = (colorPaletteIdx + 1) % 10\r\n      setColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  function changeDefaultColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setDefaultColor(search);\r\n    if (!dColorPalette.includes(search)){\r\n      let new_palette = dColorPalette\r\n      new_palette[dColorPaletteIdx] = search\r\n      setDColorPalette(new_palette)\r\n      const new_idx = (dColorPaletteIdx + 1) % 10\r\n      setDColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  const myDimensions = modelStore.getDimensions();\r\n  const absolute = coloringFormStore.maxWidth > 52 ? true : false \r\n\r\n  let myHeight = 0 \r\n  const myYMargin = 20\r\n  const px_y = 13\r\n  const px_border = 1\r\n  const marker_y = 20\r\n\r\n  for (let i = 0; i < myDimensions.length; i++){\r\n    const y = myDimensions[i][1]\r\n    myHeight += (y * (px_y + px_border)) + (1.5*myYMargin) + (2*marker_y)\r\n  }\r\n\r\n  if (coloringFormStore.model == \"swan\"){\r\n    myHeight += (swanStore.modelDimensions[0][0] * 0.75 * (px_y + px_border) * 1.2)\r\n  }\r\n\r\n  if (modelStore.top_rim || modelStore.bottom_rim){\r\n    myHeight += 400\r\n  }\r\n  myHeight = Math.max(window.innerHeight, myHeight)\r\n\r\n  const colorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">pixel color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={()=> setShowPicker(!showPicker)} \r\n        style={{background: coloringFormStore.selectedColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette\">\r\n        {showPicker &&  <TwitterPicker colors={colorPalette} triangle=\"top-left\" color={coloringFormStore.selectedColor} onChangeComplete={changeColor} />}\r\n      </div>\r\n    </div>\r\n  \r\n  const defaultColorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">primary color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={() => setShowPickerDefault(!showPickerDefault)} \r\n        style={{background: coloringFormStore.defaultColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette-d\" >\r\n        {showPickerDefault &&  <TwitterPicker colors={dColorPalette} triangle=\"top-left\" color={coloringFormStore.defaultColor} onChangeComplete={changeDefaultColor} />}\r\n      </div>\r\n    </div>\r\n\r\n  const paintByPixel = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(false)}> \r\n      <p className = \"label-inside\">paint by pixel</p>\r\n    </div>\r\n  </div>\r\n\r\n  const sprayPaint = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(true)}> \r\n      <p className = \"label-inside\">spray paint</p>\r\n    </div>\r\n  </div>\r\n\r\n  const logoObject = <div className = \"logo-object\">\r\n    <p className = \"label\" >3d-o</p>\r\n    <img className = \"logo\" src={logo} onClick={() => savePics()} alt=\"\"/>\r\n    {showInfo && <div className=\"info-popup\">info here</div>}\r\n  </div>  \r\n\r\n  function savePics(){\r\n    exportComponentAsPNG(diagramRef, {fileName: \"3do-diagram\"})\r\n    exportComponentAsPNG(appendagesRef, {fileName: \"3do-diagram-appendages\"})\r\n  }\r\n\r\n  const backButton = \r\n  <div className = \"back\">\r\n    <div className = \"nav\" onClick={() => console.log(\"hi\")}> \r\n      <IoChevronBack size={25} style={{color: 'white'}}/>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  const nextButton = \r\n  <div className = \"next\">\r\n    <DelayLink delay={0} to=\"/result\" clickAction={nextPage} replace={false}>\r\n      <div className = \"nav\"> \r\n          <IoChevronForward size={25} style={{color: 'white'}}/>\r\n      </div>\r\n    </DelayLink>\r\n  </div>\r\n\r\n  function nextPage(){\r\n    coloringFormStore.exportComponent(diagramRef)\r\n    coloringFormStore.exportComponent(appendagesRef, true)\r\n  }\r\n\r\n  const clear = <div className = \"logo-object\">\r\n    <p className = \"label\">clear</p>\r\n    <div className = \"icon\"\r\n      onClick={()=> coloringFormStore.clearAll()} >\r\n      <FiTrash  size={20} style={{color: 'white'}}/>\r\n      <br />\r\n    </div>\r\n  </div>\r\n\r\n  const info = <div className = \"logo-object\">\r\n  <p className = \"label\">info</p>\r\n  <div className = \"icon\"\r\n    onClick={()=> setShowInfo(!showInfo)} \r\n    >\r\n    <AiOutlineInfo size={23} style={{color: 'white'}}/>\r\n  </div>\r\n  </div>\r\n\r\n  const canvas = absolute? \r\n  <div className = \"canvas\">\r\n    <div ref = {diagramRef}>\r\n      <OrigamiObject \r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n        modelType={coloringFormStore.model}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        modelType={coloringFormStore.model}\r\n      />\r\n    </div>\r\n  </div> : \r\n  <div className = \"canvas-relative\">\r\n    <div ref = {diagramRef}>\r\n      <OrigamiObject \r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n        modelType={coloringFormStore.model}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        modelType={coloringFormStore.model}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  return (\r\n    <div style={{background: \"#FFE7E5\"}}>\r\n      <Sticky innerZ={3}>\r\n        <div className = \"toolbar\">\r\n          {backButton}\r\n          {paintByPixel}\r\n          {clear}\r\n          {colorPicker}\r\n          {logoObject}\r\n          {defaultColorPicker}\r\n          {info}\r\n          {sprayPaint}\r\n          {nextButton}\r\n        </div>\r\n      </Sticky>\r\n      <div style={{position: 'relative', overflowX:'scroll', overflowY:'hidden', height: myHeight+1000, background:\"#FFE7E5\"}}>\r\n        {canvas}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Colouring);","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport '../App.css'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from '../pages';\r\nimport Colouring from '../pages/colouring'\r\n// import makeInspectable from \"mobx-devtools-mst\";\r\nimport RootStore from \"../models/RootStore\";\r\nimport {RootStoreProvider} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst rootStore = RootStore.create()\r\n\r\n// makeInspectable(vase);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{background: \"#FFE7E5\"}}>\r\n        <RootStoreProvider value={rootStore}>\r\n          <Router>\r\n            <Switch>\r\n              <Route path='/colouring'>\r\n                <Colouring />\r\n              </Route>\r\n              <Route path='/'>\r\n                <Home/>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </RootStoreProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}