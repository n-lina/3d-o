{"version":3,"sources":["components/Navbar/NavbarElements.js","assets/complex-logo.png","components/Navbar/index.js","assets/transparent.png","pages/landing.js","pages/about.js","pages/learn.js","assets/logo-bg.png","assets/strawberry-slider-big.png","pages/contact.js","assets/vase.png","assets/basket.png","assets/swan.png","assets/fig.PNG","models/VaseStore.js","models/PxModel.js","models/RowModel.js","models/DrawingSectionModel.js","models/ColoringForm.js","models/BasketStore.js","models/FigurineStore.js","models/SwanStore.js","models/RootStore.js","models/RootStoreContext.js","pages/create.js","pages/gallery.js","pages/browse.js","pages/login.js","assets/paper.PNG","components/Wing/index.js","components/Swan/index.js","pages/create-swan.js","components/Vase/index.js","pages/create-vase.js","components/Basket/index.js","pages/create-basket.js","components/Figurine/index.js","pages/create-figurine.js","components/ResultVase/index.js","components/ResultFigurine/index.js","components/ResultBasket/index.js","assets/upper-banner.png","assets/lower-banner.png","pages/result.js","pages/index.js","components/Pixel/index.js","components/SpecialPixel/index.js","components/Row/index.js","components/SpecialRow/index.js","components/UntrackedPixel/index.js","components/UntrackedRow/index.js","components/TriangleSection/index.js","components/DrawingSection/index.js","components/OrigamiObject/index.js","assets/rim.png","assets/halfRim.png","assets/neck.png","components/Rim/index.js","components/UntrackedDrawingSection/index.js","components/UntrackedOrigamiObject/index.js","components/Bottom/index.js","components/Arm/index.js","components/BunnyOrHandle/index.js","components/Sphere/index.js","components/Appendages/index.js","pages/colouring.js","components/App.jsx","index.js"],"names":["Nav","styled","nav","NavLink","Link","PlainLink","NavMenu","FaBars","div","NavBtn","NavBtnLink","Navbar","to","style","height","margin","float","src","logo","alt","letterSpacing","marginRight","color","Landing","display","justifyContent","alignItems","className","About","Learn","Contact","backgroundImage","bg","backgroundPosition","straw","href","target","getCurvePointsNew","_pts","tension","numOfSegmentsArr","x","y","t1x","t2x","t1y","t2y","c1","c2","c3","c4","st","t","i","res","first_x","first_y","last_x","last_y","unshift","push","length","numOfSegments","Math","pow","max","VaseStore","types","model","cm","dtop","d3","d2","d1","dbottom","dtop_h","d3_h","d2_h","d1_h","dbottom_h","top_rim","bottom_rim","flat_bottom","scale_h","default_color","upsize","tot_rows_per_section","optional","array","number","subsections","merged_sections","textures","string","modelDimensions","maxWidth","arms","ears","lid","top_handle","side_handles","actions","self","update_top_rim","update_bottom_rim","update_flat_bottom","in_to_cm","conv","round","cm_to_in","update_units","units","update_height","update_dtop","update_d3","update_d2","update_d1","update_dbottom","update_d_heights","vals","storePic","picData","clearTextures","setDefaultColor","setSize","dbottom_cm","d1_cm","d2_cm","d3_cm","dtop_cm","height_cm","cmToPcs","height_factor","width_factor","union","upper_section_idx","lower_section_idx","upper_section_root","find","lower_section_root","idx","getDimensions","zero_diff","heights","ctop","PI","widths","max_width","min_height_needed","diff","height_diff","temp_dbottom","curr_section","add_to_this_row","floor","actual_add","min","sub_from_this_row","actual_sub","excess_height","conj_idx","conj_idx_orig","next_sec_rows","pop","curr_sec_rows","splice","modelDimensions_merged","concat","apply","j","k","removeDuplicatePairs","arr","updateCurvedPts","broken","s_dtop_h","s_dbottom_h","scale_factor","s_dtop","s_dbottom","s_d1","s_d1_h","s_d2","s_d2_h","s_d3","s_d3_h","myPoints","subsections_idx","num_subsections","points","new_pts","h","r","THREE","section_pts","broken_pts","broken_pts_three","lo","hi","section_num","temp","slice","curr_idx","slice_size","views","PxModel","pixelColor","oldColor","canChangeColor","inverted","setPixelColor","col","setOldColor","setCanChangeColor","val","setInverted","RowModel","rowData","offset","width","displayRowNum","preColor","addPx","create","setOffset","setWidth","setDisplayRowNum","DrawingSectionModel","drawingSectionData","increasing","addRow","setWidthHeight","w","setIncreasing","DEFAULT_PNG","fileName","type","html2CanvasOptions","saveAs","uri","filename","link","document","createElement","download","body","appendChild","click","removeChild","window","open","ColoringForm","selectedColor","defaultColor","oldDefault","preload","clear","mode","size","canvasPic","appendPic","swan_two_wings","coloringFormData","counter","totPcs","doneDefualt","msg","resultMsg","storeAppendPic","setColor","setModel","swan_one_wing","setMsg","result","preloadDefaultColor","clearAll","unsetClear","setMode","setPreload","exportComponent","node","appendage","current","Error","element","ReactDOM","findDOMNode","html2canvas","scrollY","useCORS","imageTimeout","backgroundColor","then","canvas","toDataURL","saveDiagram","addDrawingSection","addPc","clearColoringForm","updateCounter","oldCol","newCol","done","curr_val","parseInt","String","updateCounterDefault","init","count","getCurvePointsBasket","BasketStore","diameter","update_top_handle","update_side_handles","update_lid","diameter_cm","update_diameter","height_used","dtop_used","diameter_used","dbottom_used","circ","s_diameter","s_diameter_h","num_subsections_top","num_subsections_bot","FigurineStore","body_scale","body_height","tot_rows_head","update_ears","update_arms","d","height_input","body_dimensions","head_rad","sin","head_circ","head_start_rad","head_start_circ","getDimensionsHead","console","log","getBrokenHeadPts","tot_theta_len","theta_start","theta_len","divisions","ratio","display_diameter","s_dtop_bottom","getCurvePointsFigurine","SwanStore","top_scale","bottom_scale","height_scale","wings","texture","update_wings","circ_pcs","swanBodyPts","getCurvePointsSwan","RootStore","props","vaseStore","coloringFormStore","basketStore","figStore","swanStore","RootStoreContext","React","createContext","RootStoreProvider","Provider","useStores","useContext","Create","useEffect","flexDirection","fig","vase","basket","swan","Gallery","Browse","id","left","right","marginLeft","Login","observer","vertices","purpose","my_vertices","useMemo","map","v","faces","onUpdate","geometry","computeFaceNormals","computeVertexNormals","z","verticesNeedUpdate","normalsNeedUpdate","image","grid","load","swan_pts","swan_body","args","side","specular","shininess","bottom","rim_mesh","position","rotation","getX","angle","radius","cos","getY","bottomRad","midRad","midHeight","topHeight","big_vertices","F_vertices","big_F_vertices","L_vertices","B_vertices","y_pos_wing","one_wing","shape","param","moveTo","lineTo","quadraticCurveTo","rad","depth","extrudeSettings","steps","bevelEnabled","neck_mesh","diameter_marker","useState","x_rot","changeXrot","y_rot","changeYrot","z_rot","changeZrot","dist","changeDist","handleKeyDown","event","key","preventDefault","addEventListener","removeEventListener","railStyle","borderRadius","Handle","handle","value","percent","getHandleProps","marginTop","zIndex","textAlign","cursor","fontFamily","fontSize","min_d","max_d","slider_diameter","rootStyle","domain","step","values","getRailProps","handles","bottom_rim_switch","onChange","options","label","selectedBackgroundColor","initialSelectedIndex","fontColor","optionBorderRadius","wings_switch","units_switch","background","camera","fov","aspect","near","far","intensity","overflow","marginBottom","onClick","top_rim_mesh","bottom_rim_mesh","flat_bottom_mesh","getInputMarker","dtop_marker","dbottom_marker","d1_marker","d2_marker","d3_marker","sliderStyle","MultiHandle","min_h","max_h","sliderHeight","slider_dtop","slider_d3","slider_d2","slider_d1","slider_dbottom","dSlider","top_rim_switch","flat_bottom_switch","curved_bottom","phi_len","CustomCircleCurve","scale","ty","tz","multiplyScalar","this","tube_scale","path","tube_rad","percent_lid","rad_lid","lid_dist","tan","deco_r","deco_dist","percent_sphere","rad_bottom","bottom_dist","lid_switch","bottom_switch","top_handle_switch","side_handles_switch","head","bunny_ears","cat_ears","sphere_ears","bear_ears","tx","y_pos","half_side_len","bshape","ear_rad","arm_rad","x_pos","arms_switch","ears_switch","indexOf","itemsRef","useRef","insideRef","len","_","ref","el","texture_body","divs","broken_head","modelStore","canvasRef","context","getContext","defaultCol","sec_width","sec_height","fillStyle","fillRect","px_width","last_idx","c","ResultFigurine","upperbanner","lowerbanner","Home","component","CreateSwan","CreateVase","CreateBasket","CreateFigurine","formObject","borderColor","substring","applyColor","onMouseEnter","onMouseLeave","onMouseOver","borderStyle","SpecialPixel","on","num","markerNum","rounded","paddingLeft","paddingRight","paddingBottom","pixels","SpecialRow","specialTop","specialBottom","my_dict","wing","numPx","caption","elevation","firstRowDisplay","panelRef","rows","var_offset","displayNum","swanUpper","wing_width","remainder","chest_width","ceil","back_width","wing1","wing2","chest","back","dimensions","objectRef","Array","fill","sTopCurr","sBottomCurr","curr","distribute","spacing","0","1","2","spacing_arr","sections","Rim","full","num_pcs","rim_image","half_rim_image","neck_image","arm","bunny","end_width","num_rows","Bottom","flat","object","tot_height","curr_row","Arm","small","med","big","large","BunnyOrHandle","input_height","Sphere","bottoms","rims","handle_size","ear_d","half_circ","getWindowDimensions","innerWidth","innerHeight","showInfo","setShowInfo","showPicker","setShowPicker","showPickerDefault","setShowPickerDefault","colorPaletteIdx","setColorIdx","dColorPaletteIdx","setDColorIdx","colorPalette","setColorPalette","dColorPalette","setDColorPalette","diagramRef","appendagesRef","myDimensions","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","absolute","colorPicker","colors","triangle","onChangeComplete","search","hex","toString","toUpperCase","includes","new_palette","defaultColorPicker","paintByPixel","sprayPaint","logoObject","exportComponentAsPNG","prevPageRoute","backButton","delay","replace","nextButton","clickAction","info","pc_size","stats","fontWeight","sheets","sheetsString","pieces","colorEntry","innerZ","overflowX","overflowY","rootStore","App","Component","render","getElementById"],"mappings":"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","file":"static/js/main.4733db35.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #D14240;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // padding: 0.5rem calc((100vw - 4000px) / 2);\r\n  padding: 0.5rem;\r\n  z-index: 10;\r\n  border-radius: 30px 30px 30px 30px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  // height: 70%;\r\n  cursor: pointer;\r\n  border-radius: 30px;\r\n  margin: 5px;\r\n  border-style: solid; \r\n  border-color: #D14240;\r\n\r\n  &:hover {\r\n    // transition: all 0.2s ease-in-out;\r\n    background: #FFE7EC;\r\n    color: red;\r\n    // height: 100%;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n\r\n  &.active {\r\n    color: red;\r\n    background: #FFE7EC;\r\n    // height: 100%;\r\n    border-radius: 40px;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n`;\r\n\r\nexport const PlainLink = styled(Link)`\r\n  text-decoration:none;\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  // margin-right: 24px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 80vw; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 30px;\r\n  background: #256ce1;\r\n  // padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  width: 80px;\r\n  height: 50px;\r\n\r\n\r\n  /* Second Nav */\r\n  // margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #D14240;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/complex-logo.268ab665.png\";","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink, \r\n  PlainLink\r\n} from './NavbarElements';\r\nimport logo from \"../../assets/complex-logo.png\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <PlainLink to='/'><img style={{height: 60, margin: 20, float: 'left'}}src={logo} alt='logo' /></PlainLink>\r\n        <PlainLink to='/'>\r\n          <p style ={{letterSpacing: 3, marginRight: 100, color:\"white\", float: 'left'}}>3d-o</p>\r\n        </PlainLink>\r\n        {/* <Bars /> */}\r\n        <NavMenu>\r\n          <NavLink to='/about'>\r\n            <p style ={{letterSpacing: 2}}>about</p>\r\n          </NavLink>\r\n          <NavLink to='/learn' >\r\n            <p style ={{letterSpacing: 2}}>learn</p>\r\n          </NavLink>\r\n          <NavLink to='/create'>\r\n            <p style ={{letterSpacing: 2}}>create</p>\r\n          </NavLink>\r\n          <NavLink to='/browse'>\r\n            <p style ={{letterSpacing: 2}}>browse</p>\r\n          </NavLink>\r\n          <NavLink to='/gallery'>\r\n            <p style ={{letterSpacing: 2}}>gallery</p>\r\n          </NavLink>\r\n          <NavLink to='/contact'>\r\n            <p style ={{letterSpacing: 2}}>contact</p>\r\n          </NavLink>\r\n          <NavLink to='/login'>\r\n            <p style ={{letterSpacing: 2}}>login</p>\r\n          </NavLink>\r\n          {/* Second Nav */}\r\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n        </NavMenu>\r\n        {/* <NavBtn>\r\n          <NavBtnLink to='/signin'>Sign In</NavBtnLink>\r\n        </NavBtn> */}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/transparent.7b709eb2.png\";","import React from 'react';\r\nimport \"./create.css\"\r\nimport logo from \"../assets/transparent.png\"\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <div className = \"landing\">\r\n        <img className=\"transparent-logo\" src={logo} alt=\"\"/>\r\n        <p className=\"landing-text\">A work in progress, 3d-o is a web application I developed to combat rising COVID19 case counts. 3d-o is based on my lifelong hobby, 3d-origami. Intersecting engineering and art and the first of its kind, 3d-o promotes social distancing by engaging users in a fun, indoor activity.</p>\r\n        <p className=\"landing-text\">Try 3d-o by going to the 'create' tab!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>About</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Learn = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Learn</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Learn;","export default __webpack_public_path__ + \"static/media/logo-bg.1d8d140f.png\";","export default __webpack_public_path__ + \"static/media/strawberry-slider-big.9374e4ca.png\";","import React from 'react';\r\nimport bg from \"../assets/logo-bg.png\"\r\n// import bgOff from \"../assets/logo-bg-off.png\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport \"./create-vase.css\"\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '486px',\r\n        backgroundImage: `url(${bg})`, \r\n        backgroundPosition: \"50%\"\r\n      }}\r\n    >\r\n      <div className=\"info-box\" >\r\n        <img src={straw} alt={\"\"} className =\"straw-l\"/>\r\n        <img src={straw} alt={\"\"} className =\"straw-m\"/>\r\n        <img src={straw} alt={\"\"} className =\"straw-r\"/>\r\n        <p className = \"app-name\">3d-o<br/>engineering x art</p>\r\n        <p className = \"name\">— lina nguyen —</p>\r\n        <div className=\"left\">\r\n          <a href=\"https://www.linkedin.com/in/nlina/\" target=\"_blank\" className=\"link\">linkedin</a>\r\n          <br/>\r\n          <a href=\"https://github.com/n-lina/n-lina/raw/main/Lina%20Nguyen%20Grad2022%20Resume.pdf\" target=\"_blank\" className=\"link\">resume</a>\r\n        </div>\r\n        <div className=\"right\">\r\n          <a href=\"https://github.com/n-lina\" target=\"_blank\" className=\"link\">github</a>\r\n          <br/>\r\n          <a href=\"mailto:linanguyen@alumni.ubc.ca\" target=\"_blank\" className=\"link\">email</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","export default __webpack_public_path__ + \"static/media/vase.19cb9836.png\";","export default __webpack_public_path__ + \"static/media/basket.6d6869d7.png\";","export default __webpack_public_path__ + \"static/media/swan.219c1002.png\";","export default __webpack_public_path__ + \"static/media/fig.3fd7ce23.PNG\";","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsNew(_pts, tension, numOfSegmentsArr) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[8]\r\n    const last_y = _pts[9]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        let numOfSegments = numOfSegmentsArr[(i/2)-1]\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(y, 0.5));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n// function getCurvePoints(pts, tension, isClosed, numOfSegments) {\r\n\r\n//     // use input value if provided, or use a default value   \r\n//     tension = (typeof tension != 'undefined') ? tension : 0.5;\r\n//     isClosed = isClosed ? isClosed : false;\r\n//     numOfSegments = numOfSegments ? numOfSegments : 16;\r\n\r\n//     var _pts = [], res = [],    // clone array\r\n//         x, y,           // our x,y coords\r\n//         t1x, t2x, t1y, t2y, // tension vectors\r\n//         c1, c2, c3, c4,     // cardinal points\r\n//         st, t, i;       // steps based on num. of segments\r\n\r\n//     // clone array so we don't change the original\r\n//     //\r\n//     _pts = pts.slice(0);\r\n\r\n//     // The algorithm require a previous and next point to the actual point array.\r\n//     // Check if we will draw closed or open curve.\r\n//     // If closed, copy end points to beginning and first points to end\r\n//     // If open, duplicate first points to befinning, end points to end\r\n//     if (isClosed) {\r\n//         _pts.unshift(pts[pts.length - 1]);\r\n//         _pts.unshift(pts[pts.length - 2]);\r\n//         _pts.unshift(pts[pts.length - 1]);\r\n//         _pts.unshift(pts[pts.length - 2]);\r\n//         _pts.push(pts[0]);\r\n//         _pts.push(pts[1]);\r\n//     }\r\n//     else {\r\n//         _pts.unshift(pts[1]);   //copy 1. point and insert at beginning\r\n//         _pts.unshift(pts[0]);\r\n//         _pts.push(pts[pts.length - 2]); //copy last point and append\r\n//         _pts.push(pts[pts.length - 1]);\r\n//     }\r\n\r\n//     // ok, lets start..\r\n\r\n//     // 1. loop goes through point array\r\n//     // 2. loop goes through each segment between the 2 pts + 1e point before and after\r\n//     for (i=2; i < (_pts.length - 4); i+=2) {\r\n//         for (t=0; t <= numOfSegments; t++) {\r\n\r\n//             // calc tension vectors\r\n//             t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n//             t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n//             t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n//             t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n//             // calc step\r\n//             st = t / numOfSegments;\r\n\r\n//             // calc cardinals\r\n//             c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n//             c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n//             c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n//             c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n//             // calc x and y cords with common control vectors\r\n//             x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n//             y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n//             //store points in array\r\n//             res.push(x);\r\n//             res.push(y);\r\n\r\n//         }\r\n//     }\r\n\r\n//     return res;\r\n// }\r\n\r\nconst VaseStore = types\r\n  .model(\"Vase\", {\r\n    cm: true,\r\n    dtop: 5, //20\r\n    d3: 5, //10\r\n    d2: 5, //10\r\n    d1: 5, //35\r\n    dbottom: 50, //20 \r\n    dtop_h: 100, \r\n    d3_h: 75, //90\r\n    d2_h: 50, //70\r\n    d1_h: 25, //50\r\n    dbottom_h: 0, \r\n    height: 50,\r\n    top_rim: false, \r\n    bottom_rim: false, //true\r\n    flat_bottom: true, //true\r\n    scale_h: 36,\r\n    default_color: \"#FFFFFF\",\r\n    upsize: false, \r\n    tot_rows_per_section: types.optional(types.array(types.number), []), // bottom to top ex. [15,19,10,10]\r\n    subsections: types.optional(types.array(types.array(types.number)),[]), // ex.[[5,4],[3,2],[1],[0]] // subsections are drawingSections\r\n    // vase has up to 4 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    // sections can only be merged up, ie. vals >= indeces\r\n    merged_sections: types.optional(types.array(types.number), [0,1,2,3]), // ex. [2,2,2,3] means sections 0, 1, 2 were merged into one section; bottom to top ie. section including bottom diameter = index 0\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), []), // top to bottom ex. [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]\r\n    maxWidth: 0,\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_flat_bottom(flat_bottom){\r\n        self.flat_bottom = flat_bottom\r\n    },\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop * conv)\r\n        self.d3 = Math.round(self.d3 * conv)\r\n        self.d2 = Math.round(self.d2 * conv)\r\n        self.d1 = Math.round(self.d1 * conv)\r\n        self.dbottom = Math.round(self.dbottom * conv)\r\n        self.height = Math.round(self.height * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop / conv)\r\n        self.d3 = Math.round(self.d3 / conv)\r\n        self.d2 = Math.round(self.d2 / conv)\r\n        self.d1 = Math.round(self.d1 / conv)\r\n        self.dbottom = Math.round(self.dbottom / conv)\r\n        self.height = Math.round(self.height / conv)\r\n        self.cm = false\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_d3(d3){\r\n        self.d3 = d3\r\n    }, \r\n    update_d2(d2){\r\n        self.d2 = d2\r\n    }, \r\n    update_d1(d1){\r\n        self.d1 = d1\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    },\r\n    update_d_heights(vals){\r\n        self.d3_h = vals[3]\r\n        self.d2_h = vals[2]\r\n        self.d1_h = vals[1]\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    setSize(){\r\n        const conv = 2.54\r\n        const dbottom_cm = self.cm ? self.dbottom : self.dbottom * conv\r\n        const d1_cm = self.cm ? self.d1 : self.d1 * conv\r\n        const d2_cm = self.cm ? self.d1 : self.d2 * conv\r\n        const d3_cm = self.cm ? self.d1 : self.d3 * conv\r\n        const dtop_cm = self.cm ? self.dtop : self.dtop * conv\r\n        const height_cm = self.cm ? self.height : self.height * conv\r\n        const average_diameter_cm = (dbottom_cm + d1_cm + d2_cm + d3_cm + dtop_cm)/5\r\n        if (average_diameter_cm > 30 || height_cm > 70){\r\n            self.upsize = true\r\n        }\r\n    },\r\n    cmToPcs(cm, height=false){\r\n        const height_factor = self.upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = self.upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(((cm/100) * self.height)/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    },\r\n    union(upper_section_idx, lower_section_idx){\r\n    // note that self.merged_sections is bottom to top so upper indexes will have a higher value \r\n        const upper_section_root = self.find(upper_section_idx)\r\n        const lower_section_root = self.find(lower_section_idx)\r\n        if (upper_section_root == lower_section_root) return \r\n        self.merged_sections[lower_section_root] = upper_section_root\r\n    },\r\n    find(idx){\r\n        if (self.merged_sections[idx] == idx) return idx\r\n        return self.find(self.merged_sections[idx])\r\n    },\r\n    getDimensions() {\r\n        // INPUTS \r\n        // dtop: 20,\r\n        // d3: 10, \r\n        // d2: 10, \r\n        // d1: 35,\r\n        // dbottom: 20, \r\n        // dtop_h: 100, \r\n        // d3_h: 90, \r\n        // d2_h: 70, \r\n        // d1_h: 50, \r\n        // dbottom_h: 0, \r\n        // height: 50,\r\n\r\n        // OUTPUTS\r\n        // tot_rows_per_section: types.optional(types.array(types.number), [15,19,10,10]), // bottom to top \r\n        // subsections: types.optional(types.array(types.array(types.number)),[[5,4],[3,2],[1],[0]]), // bottom to top\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n\r\n        // max allowed decrease rate: -1 per 5 pcs\r\n        // max increase rate: +1 per 1 pc \r\n        // min 3 rows per section\r\n\r\n        let zero_diff = [];\r\n        let modelDimensions = []\r\n        let subsections = [[],[],[],[]]\r\n        let tot_rows_per_section = [0,0,0,0]\r\n\r\n        // convert from in to cm first \r\n        if (!self.cm) self.in_to_cm()\r\n\r\n        const dbottom_h = 0\r\n        const d1_h = self.cmToPcs(self.d1_h, true) // units = pieces\r\n        const d2_h = self.cmToPcs(self.d2_h, true)\r\n        const d3_h = self.cmToPcs(self.d3_h, true)\r\n        const dtop_h = self.cmToPcs(self.dtop_h, true)\r\n        const heights = [dbottom_h, d1_h, d2_h, d3_h, dtop_h]\r\n\r\n        const ctop = self.cmToPcs(Math.PI * self.dtop) // units = pieces\r\n        const c3 = self.cmToPcs(Math.PI * self.d3)\r\n        const c2 = self.cmToPcs(Math.PI * self.d2)\r\n        const c1 = self.cmToPcs(Math.PI * self.d1)\r\n        const cbottom = self.cmToPcs(Math.PI * self.dbottom)\r\n        const widths = [cbottom, c1, c2, c3, ctop]\r\n\r\n        let max_width = widths[0]\r\n\r\n        // getting from diameter to diameter in 'height' pieces \r\n\r\n        for (let i = 0; i < widths.length-1; i++){\r\n            const min_height = 3\r\n            let min_height_needed = min_height\r\n            let diff = widths[i+1]-widths[i]\r\n            let height_diff = heights[i+1] - heights[i]\r\n\r\n            let temp_dbottom = widths[i]\r\n            let curr_section = []\r\n            \r\n            // increasing\r\n            if (diff > 0){\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0){\r\n                    const add_to_this_row = Math.floor(temp_dbottom/min_height)\r\n                    const actual_add = Math.min(diff, add_to_this_row)\r\n                    diff -= actual_add \r\n                    temp_dbottom += actual_add\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom, min_height])\r\n                }\r\n            }\r\n            // decreasing\r\n            else if (diff < 0){\r\n                diff = diff * -1\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0) {\r\n                    const sub_from_this_row = Math.floor(temp_dbottom/5)\r\n                    const actual_sub = Math.min(diff, sub_from_this_row)\r\n                    diff -= actual_sub\r\n                    temp_dbottom -= actual_sub\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom,min_height])\r\n                }            \r\n            }\r\n            // straight\r\n            else if (diff == 0){\r\n                min_height_needed = height_diff\r\n                curr_section.push([temp_dbottom, height_diff])\r\n                zero_diff.push(widths.length-1-1-i)\r\n            }\r\n            let excess_height = height_diff-min_height_needed\r\n            while (excess_height>0){\r\n                curr_section[excess_height%curr_section.length][1] += 1\r\n                excess_height -= 1\r\n            }\r\n            tot_rows_per_section[i] = Math.max(height_diff, min_height_needed)\r\n            modelDimensions.unshift(curr_section)    \r\n        }\r\n        for(let i = 0; i < zero_diff.length; i++){ // zero_diff is sorted in ascending order\r\n            // merge right(lower) into left(upper) so that the idx's in zero_diff are still accurate\r\n            // modelDimensions is top to bottom so right = lower and left = upper\r\n            const idx = zero_diff[i] // idx of modelDimensions\r\n            const conj_idx = tot_rows_per_section.length-1-idx // idx of tot_rows_per_section\r\n            const conj_idx_orig = 4 - 1 - idx// 4 = self.merged_sections.length\r\n            if (zero_diff[i] > 0){\r\n                if(modelDimensions[idx-1].length > 1) { // partial merge, no section deletion\r\n                    const next_sec_last_arr = modelDimensions[idx-1].pop()\r\n                    const next_sec_rows = next_sec_last_arr[1]\r\n                    modelDimensions[idx][0][1] += next_sec_rows // the diff for this section is 0 so it only has one arr in it\r\n                    tot_rows_per_section[conj_idx] += next_sec_rows\r\n                    tot_rows_per_section[conj_idx+1] -= next_sec_rows\r\n                }\r\n                else { // full merge, section deletion, this occurs when 2 sections have the exact same start and end diameters.\r\n                    // only in full merge do we have to merge sections in self.merged_sections\r\n                    self.union(conj_idx_orig+1, conj_idx_orig) // merges conj_idx into conj_idx+1 -> head will be conj_idx+1\r\n                    const curr_sec_last_arr = modelDimensions[idx].pop()\r\n                    const curr_sec_rows = curr_sec_last_arr[1]\r\n                    modelDimensions[idx-1][0][1] += curr_sec_rows\r\n                    modelDimensions.splice(idx,1) // deleting the whole section, the right(lower) section\r\n                    tot_rows_per_section[conj_idx] -= curr_sec_rows \r\n                    tot_rows_per_section[conj_idx+1] += curr_sec_rows\r\n                    tot_rows_per_section.splice(conj_idx, 1)\r\n                    subsections.pop()\r\n                }\r\n            }\r\n        }\r\n        var modelDimensions_merged = [].concat.apply([], modelDimensions);\r\n\r\n        let curr_section = modelDimensions_merged.length-1\r\n        for (let j = 0; j < subsections.length; j++){\r\n            for (let k = 0; k < modelDimensions[modelDimensions.length - j - 1].length; k++){\r\n                subsections[j].push(curr_section-k)\r\n            }\r\n            curr_section -= modelDimensions[modelDimensions.length - j - 1].length\r\n        }\r\n\r\n        self.maxWidth = max_width \r\n        self.modelDimensions = modelDimensions_merged\r\n        self.subsections = subsections\r\n        self.tot_rows_per_section = tot_rows_per_section\r\n        return modelDimensions_merged\r\n    },\r\n    removeDuplicatePairs(arr){\r\n        for (let i = arr.length-1; i-3 >= 0; i-=1){\r\n            if (arr[i] == arr[i-2] && arr[i-1] == arr[i-3]){\r\n                arr.splice(i-1,2)\r\n            }\r\n        }\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_d1 = self.d1 * scale_factor\r\n        const s_d1_h = (self.d1_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d2 = self.d2 * scale_factor\r\n        const s_d2_h = (self.d2_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d3 = self.d3 * scale_factor\r\n        const s_d3_h = (self.d3_h/100) * self.scale_h - s_dtop_h\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_d1_h,s_d1/2,s_d2_h,s_d2/2, s_d3_h,s_d3/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.4\r\n\r\n        let numOfSegmentsArr = [6,6,6,6]\r\n    \r\n        if (broken){\r\n            let subsections_idx = self.subsections.length-1\r\n            for (let i = self.merged_sections.length-1; i >= 0; i--){\r\n                if (self.merged_sections[i] == i){ // unmerged section\r\n                    const num_subsections = self.subsections[subsections_idx].length\r\n                    numOfSegmentsArr[i] = num_subsections < 6 ? Math.max(6, 2* num_subsections) : num_subsections\r\n                    subsections_idx -= 1\r\n                } \r\n            }\r\n        }\r\n\r\n        let points = []\r\n        const new_pts = getCurvePointsNew(myPoints, tension, numOfSegmentsArr)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points \r\n        // broken points is for the result vase - to display the pattern\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            let section_num = 0\r\n            // dividing the points array into the sections of the vase (number of sections starts off as 4 but some may be merged.)\r\n            // new_pts goes from bottom to top, ie. first section = bottom section\r\n            // sections can only be merged up\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] === new_pts[hi+2] && new_pts[hi+1] === new_pts[hi+3]){\r\n                    // only make a slice if the section is unmerged \r\n                    if (self.merged_sections[section_num] == section_num){\r\n                        const temp = new_pts.slice(lo,hi+2)\r\n                        section_pts.push(temp)\r\n                        lo = hi + 2\r\n                    }\r\n                    section_num += 1\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n\r\n            // for each section, divide the section's points into the corresponding number of drawingSections in that section, set by the algorithm.\r\n            for (let i=0; i<section_pts.length; i+=1){ //section_pts.length = 4\r\n                if (self.subsections[i].length == 1){\r\n                    broken_pts.push(section_pts[i])\r\n                    continue\r\n                }\r\n                // else\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    // self.subsections[i][j][1] = corresponding num of rows section num in modelDimensions\r\n                    // self.tot_rows_per_section[i] = num rows in this ^ section of modelDimensions \r\n                    // section_pts[i]/2 - number of data pts we have; /2 because its (y,x) pairs lined up \r\n                    let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                    slice_size = slice_size * 2\r\n                    const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                    curr_idx += slice_size\r\n                    broken_pts.push(slice)\r\n                }\r\n            }\r\n            // removing duplicate pairs in the unmerged sections \r\n            for (let i=0; i < broken_pts.length; i++){\r\n                self.removeDuplicatePairs(broken_pts[i])\r\n            }\r\n            // converting to three.js vectors\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push(new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default VaseStore;\r\n\r\nconst VaseContext = React.createContext();\r\n\r\nexport const VaseProvider = ({ children, store }) => {\r\n    return (\r\n      <VaseContext.Provider value={store}>{children}</VaseContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useVaseStore = () => React.useContext(VaseContext);\r\n\r\nexport const withVaseStore = (Component) => (props) => {\r\n    return <Component {...props} store={useVaseStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\n\r\nconst PxModel = types\r\n  .model(\"PxModel\", {\r\n    pixelColor: \"#FFFFFF\", \r\n    oldColor: \"#FFFFFE\", \r\n    canChangeColor: true, \r\n    inverted: false\r\n  })\r\n  .actions(self => ({\r\n    setPixelColor(col){\r\n      self.pixelColor = col\r\n    }, \r\n    setOldColor(col){\r\n      self.oldColor = col\r\n    }, \r\n    setCanChangeColor(val){\r\n      self.canChangeColor = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default PxModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport PxModel from './PxModel'\r\n\r\nconst RowModel = types\r\n  .model(\"RowModel\", {\r\n    rowData: types.optional(types.array(PxModel), []),\r\n    offset: 0, \r\n    width: 0, \r\n    displayRowNum: 0,\r\n    preColor: \"#FFFFFF\"\r\n  })\r\n  .actions(self => ({\r\n    addPx(){\r\n      self.rowData.push(PxModel.create({oldColor: self.preColor, pixelColor: self.preColor}))\r\n    },\r\n    setOffset(val = 10.5){\r\n      self.offset = val\r\n    }, \r\n    setWidth(val){\r\n      self.width = val\r\n    }, \r\n    setDisplayRowNum(val){\r\n      self.displayRowNum = val\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default RowModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport RowModel from './RowModel'\r\n\r\nconst DrawingSectionModel = types\r\n  .model(\"DrawingSectionModel\", {\r\n    drawingSectionData: types.optional(types.array(RowModel), []),\r\n    width: 0, \r\n    height: 0, \r\n    increasing: false, \r\n    preColor: \"#FFFFFF\"\r\n  })\r\n  .actions(self => ({\r\n    addRow(){\r\n      self.drawingSectionData.push(RowModel.create({preColor: self.preColor}))\r\n    }, \r\n    setWidthHeight(w, h){\r\n      self.width = w\r\n      self.height = h \r\n    }, \r\n    setIncreasing(val){\r\n      self.increasing = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default DrawingSectionModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport html2canvas from 'html2canvas';\r\nimport DrawingSectionModel from './DrawingSectionModel'\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst fileType = {\r\n  PNG: 'image/png',\r\n  JPEG: 'image/jpeg',\r\n  PDF: 'application/pdf'\r\n};\r\n\r\nconst DEFAULT_PNG = {\r\n  fileName: '3do-diagram.png',\r\n  type: fileType.PNG,\r\n  html2CanvasOptions: {}\r\n};\r\n\r\nconst saveAs = (uri, filename) => {\r\n  const link = document.createElement('a');\r\n\r\n  if (typeof link.download === 'string') {\r\n      link.href = uri;\r\n      link.download = filename;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n  } else {\r\n      window.open(uri);\r\n  }\r\n};\r\n\r\nconst ColoringForm = types\r\n  .model(\"ColoringForm\", {\r\n    selectedColor: \"#FF0000\",\r\n    defaultColor: \"#FFFFFF\",\r\n    oldDefault: \"#FFFFFE\",\r\n    preload: false,\r\n    clear: false,\r\n    mode: false,\r\n    size: 32,\r\n    canvasPic: \"\",\r\n    appendPic: \"\",\r\n    model: \"swan\", // vase, swan, fig, basket\r\n    inverted: false,\r\n    swan_two_wings: false,\r\n    coloringFormData: types.optional(types.array(DrawingSectionModel), []), \r\n    counter: types.optional(types.array(types.array(types.string)), []),\r\n    totPcs: 0, \r\n    doneDefualt: false,\r\n    msg: \"error\", \r\n    resultMsg: \"error\"\r\n  })\r\n  .actions(self => ({\r\n    storePic(picData){\r\n      self.canvasPic = picData\r\n      return\r\n    }, \r\n    storeAppendPic(picData){\r\n      self.appendPic = picData\r\n      return\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n    setColor(col){\r\n      self.clear = false\r\n      self.selectedColor = col\r\n    },\r\n    setModel(model, swan_one_wing){\r\n      self.model = model\r\n      if (model === \"swan\"){\r\n        self.swan_two_wings = swan_one_wing\r\n      }\r\n    },\r\n    setMsg(result=false, msg=\"valid\"){\r\n      if (!result) self.msg = msg\r\n      else self.resultMsg = msg\r\n    },\r\n    preloadDefaultColor(col){\r\n      self.defaultColor = col\r\n      self.oldDefault = col\r\n    },\r\n    setDefaultColor(col){\r\n      self.doneDefualt = false\r\n      self.clear = false\r\n      self.oldDefault = self.defaultColor\r\n      self.defaultColor = col\r\n    },\r\n    clearAll(){\r\n      self.doneDefualt = false\r\n      if (self.defaultColor === \"#FFFFFF\"){\r\n        self.oldDefault = \"#FFFFFE\" \r\n        self.defaultColor = \"#FFFFFE\"\r\n      }\r\n      else {\r\n        self.oldDefault = \"#FFFFFF\" \r\n        self.defaultColor = \"#FFFFFF\"\r\n      }\r\n      self.clear = true\r\n    }, \r\n    unsetClear(){\r\n      self.clear = false\r\n    },\r\n    setMode(val){\r\n      self.clear = false\r\n      self.mode = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    },\r\n    setPreload(val=true){\r\n      self.preload = val\r\n    },\r\n    exportComponent (node, appendage=false) {\r\n      if(!node.current) {\r\n          throw new Error(\"'node' must be a RefObject\")\r\n      }\r\n      const element = ReactDOM.findDOMNode(node.current);\r\n      return html2canvas(element, {\r\n          scrollY: -window.scrollY,\r\n          useCORS: true,\r\n          // ...html2CanvasOptions\r\n          imageTimeout: 0,\r\n          backgroundColor: \"#FFFFFF\"\r\n      }).then(canvas => {\r\n          // self.canvasPic = canvas.toDataURL(DEFAULT_PNG, 0.1)\r\n          appendage? self.storeAppendPic(canvas.toDataURL(DEFAULT_PNG, 0.1)): self.storePic(canvas.toDataURL(DEFAULT_PNG, 0.1))\r\n      });\r\n    },\r\n    saveDiagram () {\r\n      saveAs(self.canvasPic, \"3do-diagram\")\r\n      saveAs(self.appendPic, \"3do-diagram-appendages\")\r\n      self.resultMsg = \"error\"\r\n    },\r\n    addDrawingSection(){\r\n      self.coloringFormData.push(DrawingSectionModel.create({preColor: self.defaultColor}))\r\n    }, \r\n    addPc(){\r\n      self.totPcs += 1 \r\n    },\r\n    clearColoringForm(){\r\n      self.coloringFormData = []\r\n      self.counter = []\r\n      self.totPcs = 0\r\n      self.selectedColor = \"#FF0000\"\r\n      self.defaultColor = \"#FFFFFF\"\r\n      self.oldDefault = \"#FFFFFE\"\r\n      self.mode = false\r\n      self.doneDefualt = false\r\n      self.canvasPic = \"\"\r\n      self.appendPic = \"\"\r\n      self.inverted = false\r\n      self.swan_two_wings = false\r\n      self.preload = false\r\n      // self.maxWidth = ??\r\n      // self.size = ??\r\n      // self.model = ??\r\n      // error messages dealt with seperately\r\n    },\r\n    updateCounter(oldCol, newCol){\r\n      let done = false\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        const curr_val = parseInt(self.counter[i][1])\r\n        if (self.counter[i][0] === oldCol){\r\n          if (curr_val <= 1){\r\n            self.counter.splice(i,1)\r\n          }\r\n          else self.counter[i][1] = String(curr_val - 1)\r\n        }\r\n      }\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        const curr_val = parseInt(self.counter[i][1])\r\n        if (self.counter[i][0] === newCol){\r\n          done = true\r\n          self.counter[i][1] = String(curr_val + 1)\r\n        }\r\n      }\r\n      if (!done) {\r\n        self.counter.push([newCol, \"1\"])\r\n      }\r\n    }, \r\n    updateCounterDefault(init=false, clear=false){\r\n      if (self.doneDefualt) return\r\n      if (init) {\r\n        self.counter =[[self.defaultColor, String(self.totPcs)]]\r\n        if (clear) self.doneDefualt = true\r\n        return\r\n      }\r\n      let done = false\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        if (self.counter[i][0] === self.oldDefault){\r\n          self.counter[i][0] = self.defaultColor\r\n          done = true\r\n        }\r\n      }\r\n      self.doneDefualt = true\r\n      if (!done) return\r\n      let count = 0 \r\n      let idx = 0\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        if (self.counter[i][0] === self.defaultColor){\r\n          count += 1 \r\n          if (count === 1){\r\n            idx = i \r\n          }\r\n          else if (count === 2){ // merging by adding both to 1st encounter and deleting 2nd one\r\n            self.counter[idx][1] = String(parseInt(self.counter[idx][1]) + parseInt(self.counter[i][1]))\r\n            self.counter.splice(i,1)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default ColoringForm;\r\n","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsBasket(_pts, tension, numOfSegmentsArr) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        let numOfSegments = numOfSegmentsArr[(i/2)-1]\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst BasketStore = types\r\n  .model(\"Basket\", {\r\n    cm: true,\r\n    height: 20, \r\n    diameter: 34,\r\n    dtop: 20, \r\n    dbottom: 20,\r\n    top_rim: true, \r\n    bottom_rim: true, \r\n    lid: true, \r\n    top_handle: true, \r\n    side_handles: false, \r\n    scale_h: 15,\r\n    flat_bottom: false, \r\n    default_color: \"#FFFFFF\",\r\n    upsize: false,\r\n    tot_rows_per_section: types.optional(types.array(types.number), []), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[]), \r\n    // basket has 1-2 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), []),\r\n    maxWidth: 0,\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\" \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_top_handle(top_handle){\r\n        self.top_handle = top_handle\r\n    },\r\n    update_side_handles(side_handles){\r\n        self.side_handles = side_handles\r\n    },\r\n    update_lid(lid){\r\n        self.lid = lid \r\n    },\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop * conv)\r\n        self.diameter = Math.round(self.diameter * conv)\r\n        self.dbottom = Math.round(self.dbottom * conv)\r\n        self.height = Math.round(self.height * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop / conv)\r\n        self.diameter = Math.round(self.diameter / conv)\r\n        self.dbottom = Math.round(self.dbottom / conv)\r\n        self.height = Math.round(self.height / conv)\r\n        self.cm = false\r\n    },\r\n    setSize(){\r\n        const conv = 2.54\r\n        const dbottom_cm = self.cm ? self.dbottom : self.dbottom * conv\r\n        const diameter_cm = self.cm ? self.diameter : self.diameter * conv\r\n        const dtop_cm = self.cm ? self.dtop : self.dtop * conv\r\n        const height_cm = self.cm ? self.height : self.height * conv\r\n        const average_diameter_cm = (dbottom_cm + diameter_cm + dtop_cm)/3\r\n        if (average_diameter_cm > 30 || height_cm > 70){\r\n            self.upsize = true\r\n        }\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_diameter(diameter){\r\n        self.diameter = diameter\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    }, \r\n    update_flat_bottom(val) {\r\n        self.flat_bottom = val\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    cmToPcs(cm, height=false){\r\n        const height_factor = self.upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = self.upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            let height_used = self.height\r\n            if (!self.cm) height_used = self.height * 2.54\r\n            return Math.round(((cm/100) * height_used)/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    },\r\n    getDimensions() {\r\n        // INPUTS \r\n        // dtop: 20,\r\n        // diameter: 30,\r\n        // dbottom: 20, \r\n        // height: 50,\r\n\r\n        // OUTPUTS\r\n        // tot_rows_per_section: types.optional(types.array(types.number), [15,19,10,10]), // bottom to top \r\n        // subsections: types.optional(types.array(types.array(types.number)),[[5,4],[3,2],[1],[0]]), // bottom to top\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n\r\n        // max allowed decrease rate: -1 per 5 pcs\r\n        // max increase rate: +1 per 1 pc \r\n        // min 3 rows per section\r\n\r\n        let zero_diff = [];\r\n        let modelDimensions = []\r\n        let subsections = [[],[]]\r\n        let tot_rows_per_section = [0,0]\r\n\r\n        let dtop_used = self.dtop\r\n        let diameter_used = self.diameter\r\n        let dbottom_used = self.dbottom\r\n        let height_used = self.height\r\n\r\n        // convert from in to cm first \r\n        if (!self.cm){\r\n            const conv = 2.54\r\n            dtop_used = Math.round(self.dtop * conv)\r\n            diameter_used = Math.round(self.diameter * conv)\r\n            dbottom_used = Math.round(self.dbottom * conv)\r\n        } \r\n\r\n        const dbottom_h = 0\r\n        const diameter_h = self.cmToPcs(50, true) // units = pieces\r\n        const dtop_h = self.cmToPcs(100, true)\r\n        const heights = [dbottom_h, diameter_h, dtop_h]\r\n\r\n        const ctop = self.cmToPcs(Math.PI * dtop_used) // units = pieces\r\n        const circ = self.cmToPcs(Math.PI * diameter_used)\r\n        const cbottom = self.cmToPcs(Math.PI * dbottom_used)\r\n        const widths = [cbottom, circ, ctop]\r\n\r\n        let max_width = widths[0]\r\n\r\n        // getting from diameter to diameter in 'height' pieces\r\n\r\n        for (let i = 0; i < widths.length-1; i++){\r\n            const min_height = 3\r\n            let min_height_needed = min_height\r\n            let diff = widths[i+1]-widths[i]\r\n            let height_diff = heights[i+1] - heights[i]\r\n\r\n            let temp_dbottom = widths[i]\r\n            let curr_section = []\r\n            \r\n            // increasing\r\n            if (diff > 0){\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0){\r\n                    const add_to_this_row = Math.floor(temp_dbottom/min_height)\r\n                    const actual_add = Math.min(diff, add_to_this_row)\r\n                    diff -= actual_add \r\n                    temp_dbottom += actual_add\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom, min_height])\r\n                }\r\n            }\r\n            //  decreasing\r\n            else if (diff < 0){\r\n                diff = diff * -1\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0) {\r\n                    const sub_from_this_row = Math.floor(temp_dbottom/5)\r\n                    const actual_sub = Math.min(diff, sub_from_this_row)\r\n                    diff -= actual_sub\r\n                    temp_dbottom -= actual_sub\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom,min_height])\r\n                }            \r\n            }\r\n            // straight\r\n            else if (diff == 0){\r\n                min_height_needed = height_diff\r\n                curr_section.push([temp_dbottom, height_diff])\r\n                zero_diff.push(widths.length-1-1-i)\r\n            }\r\n            let excess_height = height_diff-min_height_needed\r\n            while (excess_height>0){\r\n                curr_section[excess_height%curr_section.length][1] += 1\r\n                excess_height -= 1\r\n            }\r\n            tot_rows_per_section[i] = Math.max(height_diff, min_height_needed)\r\n            modelDimensions.unshift(curr_section)    \r\n        }\r\n        for(let i = 0; i < zero_diff.length; i++){ // zero_diff is sorted in ascending order\r\n            // merge right(lower) into left(upper) so that the idx's in zero_diff are still accurate\r\n            // modelDimensions is top to bottom so right = lower and left = upper\r\n            const idx = zero_diff[i] // idx of modelDimensions\r\n            const conj_idx = tot_rows_per_section.length-1-idx // idx of tot_rows_per_section\r\n            if (zero_diff[i] > 0){\r\n                if(modelDimensions[idx-1].length > 1) { // partial merge, no section deletion\r\n                    const next_sec_last_arr = modelDimensions[idx-1].pop()\r\n                    const next_sec_rows = next_sec_last_arr[1]\r\n                    modelDimensions[idx][0][1] += next_sec_rows // the diff for this section is 0 so it only has one arr in it\r\n                    tot_rows_per_section[conj_idx] += next_sec_rows\r\n                    tot_rows_per_section[conj_idx+1] -= next_sec_rows\r\n                }\r\n                else { // full merge, section deletion, this occurs when 2 sections have the exact same start and end diameters.\r\n                    const curr_sec_last_arr = modelDimensions[idx].pop()\r\n                    const curr_sec_rows = curr_sec_last_arr[1]\r\n                    modelDimensions[idx-1][0][1] += curr_sec_rows\r\n                    modelDimensions.splice(idx,1) // deleting the whole section, the right(lower) section\r\n                    tot_rows_per_section[conj_idx] -= curr_sec_rows \r\n                    tot_rows_per_section[conj_idx+1] += curr_sec_rows\r\n                    tot_rows_per_section.splice(conj_idx, 1)\r\n                    subsections.pop()\r\n                }\r\n            }\r\n        }\r\n        var modelDimensions_merged = [].concat.apply([], modelDimensions);\r\n\r\n        let curr_section = modelDimensions_merged.length-1\r\n        for (let j = 0; j < subsections.length; j++){\r\n            for (let k = 0; k < modelDimensions[modelDimensions.length - j - 1].length; k++){\r\n                subsections[j].push(curr_section-k)\r\n            }\r\n            curr_section -= modelDimensions[modelDimensions.length - j - 1].length\r\n        }\r\n\r\n        self.maxWidth = max_width\r\n        self.modelDimensions = modelDimensions_merged\r\n        self.subsections = subsections\r\n        self.tot_rows_per_section = tot_rows_per_section\r\n        return modelDimensions_merged\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_diameter = self.diameter * scale_factor\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.8\r\n        var numOfSegmentsArr = [6,6]\r\n\r\n        if (broken){\r\n            if (self.subsections.length == 2){ // unmerged\r\n                const num_subsections_top = self.subsections[1].length\r\n                const num_subsections_bot = self.subsections[0].length\r\n                numOfSegmentsArr = [num_subsections_bot*3, num_subsections_top*3]\r\n            } else {\r\n                numOfSegmentsArr = [1,1]\r\n            }\r\n        }\r\n\r\n        let points = []\r\n        const new_pts = getCurvePointsBasket(myPoints, tension, numOfSegmentsArr)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n\r\n            if (self.subsections.length == 2){ // unmerged\r\n                while (hi+3 < new_pts.length){\r\n                    if (new_pts[hi] == new_pts[hi+2] && new_pts[hi+1] == new_pts[hi+3]){\r\n                        const temp = new_pts.slice(lo,hi+2)\r\n                        section_pts.push(temp)\r\n                        lo = hi + 2\r\n                    }\r\n                    hi += 2\r\n                }\r\n                section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            } else {\r\n                new_pts.splice(new_pts.length/2, 2)\r\n                section_pts.push(new_pts)\r\n            }\r\n\r\n            for (let i=0; i<section_pts.length; i+=1){ //section_pts.length = 1 or 2 \r\n                if (self.subsections[i].length == 1){\r\n                    broken_pts.push(section_pts[i])\r\n                    continue\r\n                }\r\n                // else\r\n                let curr_idx = 0 \r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                    slice_size = slice_size * 2\r\n                    const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                    curr_idx += slice_size\r\n                    broken_pts.push(slice)\r\n                } \r\n            }\r\n            // converting to three.js vectors\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push( new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n\r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default BasketStore;\r\n\r\nconst BasketContext = React.createContext();\r\n\r\nexport const BasketProvider = ({ children, store }) => {\r\n    return (\r\n      <BasketContext.Provider value={store}>{children}</BasketContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useBasketStore = () => React.useContext(BasketContext);\r\n\r\nexport const withBasketStore = (Component) => (props) => {\r\n    return <Component {...props} store={useBasketStore()} />;\r\n  };","import {types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsFigurine(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst FigurineStore = types\r\n  .model(\"Figurine\", {\r\n    maxWidth: 0,\r\n    cm: true,\r\n    diameter: 13,\r\n    arms: true, \r\n    ears: \"bear\", // bear, bunny, cat, sphere\r\n    body_scale: 0.7,\r\n    body_height: 0.35,\r\n    default_color: \"#FFFFFF\",\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    tot_rows_head: 0,\r\n    upsize: false, \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[30,12],[40,11],[53,10],[40,10]]), // last = body\r\n    // unused, only for consistency: \r\n    flat_bottom: false, \r\n    top_rim: false, \r\n    bottom_rim: false, \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_ears(val){\r\n        self.ears = val\r\n    },\r\n    update_arms(val){\r\n        self.arms = val\r\n    },\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter / conv)\r\n        self.cm = false\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    cmToPcs(cm, height=false){\r\n        const height_factor = self.upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = self.upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(cm/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    },\r\n    setSize(){\r\n        const conv = 2.54\r\n        const diameter_cm = self.cm ? self.diameter : self.diameter * conv\r\n        if (diameter_cm > 25){\r\n            self.upsize = true\r\n        }\r\n    },\r\n    getDimensions() {\r\n        // INPUTS \r\n        // diameter: 30,\r\n\r\n        // OUTPUTS\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10]]\r\n\r\n        // convert from in to cm first \r\n        let diameter = self.diameter * self.body_scale\r\n\r\n        if (!self.cm) {\r\n            const conv = 2.54\r\n            diameter = Math.round(self.diameter * self.body_scale * conv)\r\n        }\r\n\r\n        // body \r\n        const height_input = diameter\r\n        const circ_pcs = self.cmToPcs(Math.PI * diameter)\r\n        const height = self.cmToPcs(height_input, true)\r\n        const body_dimensions = [circ_pcs, height]\r\n\r\n        // head\r\n        const theta_len = 0.8\r\n        const head_start_theta_len = 0.85\r\n        const goal_rad = (diameter * self.body_scale)/2 // units: cm\r\n        const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n        const head_circ = self.cmToPcs(Math.PI * head_rad * 2)\r\n        const head_start_rad = head_rad * Math.sin((1-head_start_theta_len) * Math.PI)\r\n        const head_start_circ = self.cmToPcs(Math.PI * head_start_rad * 2)\r\n\r\n        const widths = [head_start_circ, head_circ, Math.min(head_start_circ, 4)] // units: pcs, 4 is the absolute min\r\n        const heights = [0, self.cmToPcs(head_rad), self.cmToPcs(2*head_rad, true)]\r\n        let modelDimensions = self.getDimensionsHead(widths, heights) // call function here using this as input\r\n\r\n        // together \r\n        self.maxWidth = self.cmToPcs(head_rad)\r\n        modelDimensions.push(body_dimensions)\r\n        self.modelDimensions = modelDimensions\r\n        console.log(modelDimensions)\r\n        return modelDimensions\r\n    },\r\n    getDimensionsHead(widths, heights) {\r\n        // INPUTS (cm)\r\n        // dhead_start\r\n        // dhead\r\n        // dhead_end\r\n\r\n        // OUTPUTS\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n\r\n        // max allowed decrease rate: -1 per 5 pcs\r\n        // max increase rate: +1 per 1 pc \r\n        // min 3 rows per section\r\n        self.tot_rows_head = 0\r\n        let modelDimensions = []\r\n        // getting from diameter to diameter in 'height' pieces\r\n\r\n        for (let i = 0; i < widths.length-1; i++){\r\n            const min_height = 3\r\n            let min_height_needed = min_height\r\n            let diff = widths[i+1]-widths[i]\r\n            let height_diff = heights[i+1] - heights[i]\r\n\r\n            let temp_dbottom = widths[i]\r\n            let curr_section = []\r\n            \r\n            // increasing\r\n            if (diff > 0){\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0){\r\n                    const add_to_this_row = Math.floor(temp_dbottom/min_height)\r\n                    const actual_add = Math.min(diff, add_to_this_row)\r\n                    diff -= actual_add \r\n                    temp_dbottom += actual_add\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom, min_height])\r\n                }\r\n            }\r\n            // decreasing\r\n            else if (diff < 0){\r\n                diff = diff * -1\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0) {\r\n                    const sub_from_this_row = Math.floor(temp_dbottom/4)\r\n                    const actual_sub = Math.min(diff, sub_from_this_row)\r\n                    diff -= actual_sub\r\n                    temp_dbottom -= actual_sub\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom,min_height])\r\n                }            \r\n            }\r\n            self.tot_rows_head += Math.max(height_diff, min_height_needed)\r\n            let excess_height = height_diff-min_height_needed\r\n            while (excess_height>0){\r\n                curr_section[excess_height%curr_section.length][1] += 1\r\n                excess_height -= 1\r\n            }\r\n            modelDimensions.unshift(curr_section)    \r\n        }\r\n\r\n        var modelDimensions_merged = [].concat.apply([], modelDimensions);\r\n\r\n        return modelDimensions_merged\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getBrokenHeadPts(tot_theta_len){\r\n        let theta_start = 0 \r\n        let theta_len = 0\r\n        let divisions = []\r\n        for (let i = 0; i < self.modelDimensions.length-1; i++){\r\n            const num_rows = self.modelDimensions[i][1]\r\n            const ratio = num_rows/self.tot_rows_head\r\n            console.log(tot_theta_len)\r\n            console.log(self.tot_rows_head)\r\n            theta_len = ratio * tot_theta_len\r\n            divisions.push([theta_start, theta_len])\r\n            theta_start += theta_len\r\n        }\r\n        console.log(divisions)\r\n        return divisions\r\n    },\r\n    updateCurvedPts(){\r\n        let display_diameter = self.diameter\r\n        if (!self.cm){\r\n            display_diameter = Math.round(display_diameter * 2.54)\r\n        }\r\n        const s_dtop_h = display_diameter * self.body_height\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n\r\n        const s_dtop_bottom = display_diameter * self.body_scale\r\n\r\n        const s_diameter = display_diameter\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dtop_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop_bottom/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsFigurine(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    },\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default FigurineStore;\r\n\r\nconst FigurineContext = React.createContext();\r\n\r\nexport const FigurineProvider = ({ children, store }) => {\r\n    return (\r\n      <FigurineContext.Provider value={store}>{children}</FigurineContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useFigurineStore = () => React.useContext(FigurineContext);\r\n\r\nexport const withFigurineStore = (Component) => (props) => {\r\n    return <Component {...props} store={useFigurineStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsSwan(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst SwanStore = types\r\n  .model(\"Swan\", {\r\n    maxWidth: 0,\r\n    cm: true,\r\n    diameter: 16,\r\n    body_height: 0.35,\r\n    top_scale: 1,\r\n    bottom_scale:0.6, \r\n    height_scale: 0.4,\r\n    default_color: \"#FFFFFF\", \r\n    wings: true, // true = two wings\r\n    bottom_rim: true,\r\n    texture: \"\", \r\n    upsize: false,\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[8, 2]]), // top to bottom, only one element\r\n    // unused, only for consistency: \r\n    flat_bottom: false,\r\n    top_rim: false, \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter / conv)\r\n        self.cm = false\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_wings(val){\r\n        self.wings = val\r\n    },\r\n    update_bottom_rim(val){\r\n        self.bottom_rim = val\r\n    },\r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    storePic(picData){\r\n        self.texture = picData\r\n    },\r\n    clearTextures(){\r\n        self.texture = \"\"\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    cmToPcs(cm, height=false){\r\n        const height_factor = self.upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = self.upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(cm/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    },\r\n    setSize(){\r\n        const conv = 2.54\r\n        const diameter_cm = self.cm ? self.diameter : self.diameter * conv\r\n        if (diameter_cm > 25){\r\n            self.upsize = true\r\n        }\r\n    },\r\n    getDimensions() {\r\n        // INPUTS \r\n        // diameter: 30,\r\n\r\n        // OUTPUTS\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10]]\r\n\r\n        // convert from in to cm first \r\n        let diameter = self.diameter * self.bottom_scale \r\n\r\n        if (!self.cm) {\r\n            const conv = 2.54\r\n            diameter = Math.round(self.diameter * self.bottom_scale * conv)\r\n        }\r\n\r\n        const height_input = diameter\r\n\r\n        const circ_pcs = self.cmToPcs(Math.PI * diameter)\r\n        const height = self.cmToPcs(height_input, true)\r\n        const modelDimensions = [[circ_pcs, height]]\r\n        \r\n        self.maxWidth = circ_pcs\r\n        self.modelDimensions = modelDimensions\r\n        return modelDimensions\r\n    },\r\n    swanBodyPts(){\r\n        let display_diameter = self.diameter\r\n        if (!self.cm){\r\n            display_diameter = Math.round(display_diameter * 2.54)\r\n        }\r\n        const s_dtop_h = display_diameter * self.height_scale\r\n        const s_dbottom_h = -1 * s_dtop_h * 0.8\r\n\r\n        const s_bottom = display_diameter * self.bottom_scale\r\n        const s_top = display_diameter * self.top_scale\r\n\r\n        const s_diameter = display_diameter\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_top/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsSwan(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default SwanStore;\r\n\r\nconst SwanContext = React.createContext();\r\n\r\nexport const SwanProvider = ({ children, store }) => {\r\n    return (\r\n      <SwanContext.Provider value={store}>{children}</SwanContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useSwanStore = () => React.useContext(SwanContext);\r\n\r\nexport const withSwanStore = (Component) => (props) => {\r\n    return <Component {...props} store={useSwanStore()} />;\r\n  };","import VaseStore from \"./VaseStore\"\r\nimport ColoringForm from \"./ColoringForm\"\r\nimport BasketStore from \"./BasketStore\"\r\nimport FigurineStore from \"./FigurineStore\"\r\nimport SwanStore from \"./SwanStore\"\r\nimport { types } from \"mobx-state-tree\";\r\n\r\n/**\r\n * A RootStore model.\r\n */\r\n// prettier-ignore\r\nconst RootStore = types.model(\"RootStore\").props({\r\n  vaseStore: types.optional(VaseStore, {}),\r\n  coloringFormStore: types.optional(ColoringForm, {}),\r\n  basketStore: types.optional(BasketStore, {}),\r\n  figStore: types.optional(FigurineStore, {}),\r\n  swanStore: types.optional(SwanStore, {}),\r\n});\r\n\r\nexport default RootStore;\r\n\r\n","import React, { createContext, useContext } from \"react\";\r\nimport RootStore from \"./RootStore\";\r\n\r\n/**\r\n * Create a context we can use to\r\n * - Provide access to our stores from our root component\r\n * - Consume stores in our screens (or other components, though it's\r\n *   preferable to just connect screens)\r\n */\r\n// const RootStoreContext = createContext();\r\n\r\n// /**\r\n//  * The provider our root component will use to expose the root store\r\n//  */\r\n// export const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n// /**\r\n//  * A hook that screens can use to gain access to our stores, with\r\n//  * `const { someStore, someOtherStore } = useStores()`,\r\n//  * or less likely: `const rootStore = useStores()`\r\n//  */\r\n// export const useStores = () => useContext(RootStoreContext);\r\n\r\n//------------------------------------------------------------------\r\n\r\nconst RootStoreContext = React.createContext();\r\n\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n\r\n// export const RootStoreProvider = ({ children, store }) => {\r\n//     return (\r\n//       <RootStoreContext.Provider value={store}>{children}</RootStoreContext.Provider>\r\n//     );\r\n// };\r\n\r\nexport const useStores = () => React.useContext(RootStoreContext);\r\n","import React, {useEffect} from 'react';\r\nimport vase from \"../assets/vase.png\"\r\nimport basket from \"../assets/basket.png\"\r\nimport swan from \"../assets/swan.png\"\r\nimport fig from \"../assets/fig.PNG\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport {PlainLink} from '../components/Navbar/NavbarElements';\r\nimport \"./create.css\"\r\nimport {useStores} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst Create = () => {\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n  }, [])\r\n\r\n  const {coloringFormStore} = useStores()\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"holderTop\">\r\n        <img src={straw} alt={\"\"} className =\"leftS\"/>\r\n        <p className=\"create-text\">select a model</p>\r\n        <img src={straw} alt={\"\"} className =\"rightS\"/>\r\n      </div>\r\n      <div \r\n        style={{\r\n          flexDirection: 'row',\r\n          height: 'auto'\r\n        }}\r\n      >\r\n        <div className = \"holder\">\r\n          <PlainLink to=\"/create-figurine\">\r\n            <img alt={\"\"} src={fig} className=\"create-link\"/>\r\n            <p className=\"create-text\">• figurine •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-vase\">\r\n            <img alt={\"\"} src={vase} className=\"create-link\"/>\r\n            <p className=\"create-text\">• vase •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-basket\">\r\n            <img alt={\"\"} src={basket} className=\"create-link\"/>\r\n            <p className=\"create-text\">• basket •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-swan\">\r\n            <img alt={\"\"} src={swan} className=\"create-link\"/>\r\n            <p className=\"create-text\">• swan •</p>\r\n          </PlainLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;","import React from 'react';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Gallery</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport \"./create.css\"\r\nimport {PlainLink} from '../components/Navbar/NavbarElements';\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nconst Browse = () => {\r\n  // function loadColoringPage(model){\r\n  //   if (model === \"swan\"){\r\n  //     coloringFormStore.setPreload()\r\n  //     coloringFormStore.preloadDefaultColor(\"#000000\")\r\n  //     coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  //     // set swan dimensions so SwanStore can do the calcs to getDimensions\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div id=\"top\">\r\n      <div className=\"holderTop\">\r\n        <img src={straw} alt={\"\"} className =\"leftS\" style={{left:\"35%\"}}/>\r\n        <p className=\"create-text\">browse pre-made designs</p>\r\n        <img src={straw} alt={\"\"} className =\"rightS\" style={{right:\"35%\"}}/>\r\n      </div>\r\n      <div \r\n        style={{\r\n        flexDirection: 'row',\r\n        height: '150px'\r\n      }}>\r\n        <div className = \"holder\">\r\n          <HashLink style={{color: \"#D14240\"}} to=\"/browse#figurine\">\r\n            <img src={straw} alt={\"\"} className =\"tabS-left\"/>\r\n            <p className=\"browse-tab\">• figurine •</p>\r\n          </HashLink>\r\n          <HashLink style={{color: \"#D14240\"}} to=\"/browse#vase\">\r\n            <img src={straw} alt={\"\"} className =\"tabS-right\"/>\r\n            <p className=\"browse-tab\">• vase •</p>\r\n          </HashLink>\r\n          <HashLink style={{color: \"#D14240\"}} to=\"/browse#basket\">\r\n            <img src={straw} alt={\"\"} className =\"tabS-left\"/>\r\n            <p className=\"browse-tab\">• basket •</p>\r\n          </HashLink>\r\n          <HashLink style={{color: \"#D14240\"}} to=\"/browse#swan\">\r\n            <img src={straw} alt={\"\"} className =\"tabS-right\"/>\r\n            <p className=\"browse-tab\">• swan •</p>\r\n          </HashLink>\r\n        </div>\r\n      </div>\r\n      <div id=\"figurine\" className=\"holderTop\">\r\n        <p className=\"create-text\">— figurine —</p>\r\n      </div>\r\n      <div id=\"vase\" className=\"holderTop\">\r\n        <p className=\"create-text\">— vase —</p>\r\n      </div>\r\n      <div id=\"basket\" className=\"holderTop\">\r\n        <p className=\"create-text\">— basket —</p>\r\n      </div>\r\n      <div id=\"swan\" className=\"holderTop\">\r\n        <p className=\"create-text\">— swan —</p>\r\n      </div>\r\n      <HashLink style={{color: \"#D14240\"}} to=\"/browse#top\">\r\n        <img src={straw} alt={\"\"} className =\"tabS\"/>\r\n        <p className=\"browse-tab\" style={{width: 150, marginLeft: \"calc(50% - 90px)\"}}>• scroll to top •</p>\r\n      </HashLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;","import React from 'react';\r\nimport \"./create.css\"\r\nimport logo from \"../assets/transparent.png\"\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <div>\r\n        <img className=\"transparent-logo\" src={logo} alt=\"\"/>\r\n        <p className=\"coming-soon-text\">coming soon</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/paper.2a44f726.PNG\";","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Wing = (props) => {\r\n    const {vertices, purpose} = props\r\n    const my_vertices = useMemo(() => vertices.map(v => new THREE.Vector3(...v)), [])\r\n\r\n    const faces = []\r\n    if (purpose == \"wing\"){\r\n        faces.push(\r\n            new THREE.Face3(17, 8, 7),\r\n            new THREE.Face3(16, 17, 7),\r\n            new THREE.Face3(16, 7, 6),\r\n            new THREE.Face3(15, 16, 6),\r\n            new THREE.Face3(15, 6, 5),\r\n            new THREE.Face3(14, 15, 5),\r\n            new THREE.Face3(14, 5, 4),\r\n            new THREE.Face3(13, 14, 4),\r\n            new THREE.Face3(13, 4, 3),\r\n            new THREE.Face3(12, 13, 3),\r\n            new THREE.Face3(12, 3, 2),\r\n            new THREE.Face3(11, 12, 2),\r\n            new THREE.Face3(11, 2, 1),\r\n            new THREE.Face3(10, 11, 1),\r\n            new THREE.Face3(10, 1, 0),\r\n            new THREE.Face3(9, 10, 0),\r\n            // top row \r\n            new THREE.Face3(18, 17, 16),\r\n            new THREE.Face3(18, 16, 15),\r\n            new THREE.Face3(18, 15, 14),\r\n            new THREE.Face3(18, 14, 13),\r\n            new THREE.Face3(18, 13, 12),\r\n            new THREE.Face3(18, 12, 11),\r\n            new THREE.Face3(18, 11, 10),\r\n            new THREE.Face3(18, 10, 9),\r\n        )\r\n    }\r\n    else if (purpose == \"front-back\"){\r\n        faces.push(\r\n            new THREE.Face3(5, 4, 3),\r\n            new THREE.Face3(5, 3, 2),\r\n            new THREE.Face3(5, 2, 1),\r\n            new THREE.Face3(5, 1, 0),\r\n        )\r\n    }\r\n\r\n    else if (purpose == \"one-wing\"){\r\n        faces.push(\r\n            new THREE.Face3(9, 8, 7),\r\n            new THREE.Face3(9, 7, 6),\r\n            new THREE.Face3(9, 6, 5),\r\n            new THREE.Face3(9, 5, 4),\r\n            new THREE.Face3(9, 4, 3),\r\n            new THREE.Face3(9, 3, 2),\r\n            new THREE.Face3(9, 2, 1),\r\n            new THREE.Face3(9, 1, 0),\r\n        )\r\n    }\r\n\r\n    // const uvs = [[\r\n    //     // front\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // right\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // back\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // left\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // top\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // bottom\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    // ]]\r\n\r\n    function update(geometry){\r\n        geometry.computeFaceNormals()\r\n        geometry.computeVertexNormals();\r\n        for (let i = 0; i < geometry.vertices.length; i++){\r\n            geometry.vertices[i].x = vertices[i][0]\r\n            geometry.vertices[i].y = vertices[i][1]\r\n            geometry.vertices[i].z = vertices[i][2]\r\n        }\r\n        geometry.verticesNeedUpdate = true\r\n        geometry.normalsNeedUpdate = true;\r\n    }\r\n\r\n    return (\r\n        // <geometry vertices={my_vertices} faces={faces} faceVertexUVs={uvs} onUpdate={update}/>\r\n        <geometry vertices={my_vertices} faces={faces} onUpdate={update}/>\r\n    )\r\n  }\r\n\r\nexport default observer(Wing);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\nimport Wing from \"../Wing\"\r\n\r\nconst Swan = (props) => {\r\n    const {swanStore, result} = props\r\n    const image = result ? swanStore.texture : grid\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(image), []) \r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const swan_pts = swanStore.swanBodyPts()\r\n\r\n    let display_diameter = swanStore.diameter\r\n    if (!swanStore.cm){\r\n        display_diameter = Math.round(display_diameter * 2.54)\r\n    }\r\n\r\n    const swan_body = \r\n    <group>\r\n        <mesh >\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh>\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const bottom = display_diameter * swanStore.height_scale * 0.8 * -1\r\n    const rim_mesh = <mesh position = {[0,bottom-0.1,0]} rotation = {[1.57,0,0]}> \r\n    <torusGeometry args={[(display_diameter * swanStore.bottom_scale/2)+0.1, display_diameter/70, 10, 50]}/>\r\n    <meshPhongMaterial color={result? swanStore.default_color : \"#FF7E98\"} />\r\n    </mesh>\r\n\r\n    function getX(angle, radius){\r\n        return  radius * Math.cos(angle)\r\n    }\r\n\r\n    function getY(angle, radius){\r\n        return radius * Math.sin(angle)\r\n    }\r\n\r\n    const bottomRad = display_diameter * swanStore.top_scale * 0.5\r\n    const midRad = display_diameter * swanStore.top_scale * 0.5 * 0.73\r\n    const midHeight = display_diameter * swanStore.height_scale * 1.7 * 0.5\r\n    const topHeight = display_diameter * swanStore.height_scale * 1.9\r\n\r\n    const vertices =\r\n    [\r\n        // bottom row\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [getX(Math.PI/3.7, bottomRad), 0, getY(Math.PI/3.7, bottomRad)],  // 1\r\n        [getX(Math.PI/6, bottomRad), 0, getY(Math.PI/6, bottomRad)],  // 2\r\n        [getX(Math.PI/12, bottomRad), 0, getY(Math.PI/12, bottomRad)],  // 3\r\n        [getX(0, bottomRad), 0, getY(0, bottomRad)],  // 4\r\n        [getX(Math.PI/12, bottomRad), 0, -getY(Math.PI/12, bottomRad)],  // 5\r\n        [getX(Math.PI/6, bottomRad), 0, -getY(Math.PI/6, bottomRad)],  // 6\r\n        [getX(Math.PI/3.7, bottomRad), 0, -getY(Math.PI/3.7, bottomRad)],  // 7\r\n        [getX(Math.PI/2.8, bottomRad), 0, -getY(Math.PI/2.8, bottomRad)],  // 8\r\n        // middle row\r\n        [getX(Math.PI/2.8, midRad), midHeight, getY(Math.PI/2.8, midRad)],  // 9\r\n        [getX(Math.PI/3.7, midRad), midHeight, getY(Math.PI/3.7, midRad)],  // 10\r\n        [getX(Math.PI/6, midRad), midHeight, getY(Math.PI/6, midRad)],  // 11\r\n        [getX(Math.PI/12, midRad), midHeight, getY(Math.PI/12, midRad)],  // 12\r\n        [getX(0, midRad), midHeight, getY(0, midRad)],  // 13\r\n        [getX(Math.PI/12, midRad), midHeight, -getY(Math.PI/12, midRad)],  // 14\r\n        [getX(Math.PI/6, midRad), midHeight, -getY(Math.PI/6, midRad)],  // 15\r\n        [getX(Math.PI/3.7, midRad), midHeight, -getY(Math.PI/3.7, midRad)],  // 16\r\n        [getX(Math.PI/2.8, midRad), midHeight, -getY(Math.PI/2.8, midRad)],  // 17\r\n        // heights\r\n        [bottomRad/6, topHeight, 0]  // 18\r\n    ];\r\n\r\n    const big_vertices = \r\n    [\r\n        [-getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 0\r\n        [-getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 1\r\n        [-getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 2\r\n        [-getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 3        \r\n        [getX(Math.PI/2, bottomRad), 0, -getY(Math.PI/2, bottomRad)],  // 4\r\n        [getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 5  \r\n        [getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 6\r\n        [getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 7\r\n        [getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 8\r\n        [0, topHeight*1.1, -bottomRad*1.25]  // 9\r\n    ];\r\n\r\n    const F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [-getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 3\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 4\r\n        [0, topHeight/3, bottomRad/1.3]  // 5\r\n    ];\r\n\r\n    const big_F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 0\r\n        [-getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 3\r\n        [getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 4\r\n        [0, topHeight/1.7, bottomRad/1.8]  // 5\r\n    ];\r\n\r\n    const L_vertices = []\r\n    for (let i = 0; i < vertices.length; i++){\r\n        let temp = []\r\n        temp.push(-1 * vertices[i][0],vertices[i][1],vertices[i][2])\r\n        L_vertices.push(temp)\r\n    }\r\n\r\n    const B_vertices = []\r\n    for (let i = 0; i < F_vertices.length-1; i++){\r\n        let temp = []\r\n        temp.push(F_vertices[i][0],F_vertices[i][1], -1 * F_vertices[i][2])\r\n        B_vertices.push(temp)\r\n    }\r\n    B_vertices.push([0, topHeight/4, -bottomRad * 1.1])\r\n\r\n    const y_pos_wing = display_diameter * swanStore.height_scale\r\n    const wings = \r\n    <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const one_wing = <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const shape = useMemo( () => new THREE.Shape(), [display_diameter]);\r\n    const param = display_diameter * 0.3\r\n    const t = param * 0.4\r\n    shape.moveTo(0, -param*1.3);\r\n    shape.lineTo(param*0.9, 0)\r\n    shape.quadraticCurveTo(param + param/3, param*1.5/2,param, param * 1.4)\r\n    shape.quadraticCurveTo(param/2, param * 1.9, -param/3,param)\r\n    shape.lineTo(-param/2.5, param - (1.5*t))\r\n    shape.quadraticCurveTo(param/2 , (param * 1.9) - t, param -t/1.5 , (param * 1.5) - t/1.5)\r\n    shape.quadraticCurveTo((param + param/3.5) -t/1.5, (param*1.5/2) + t/1.5, param -t/1.5, t/1.5)\r\n    \r\n    const depth = param/6\r\n\r\n    const extrudeSettings = {\r\n        steps: 100,  \r\n        depth: depth,  \r\n        bevelEnabled: false,   \r\n      };\r\n      \r\n\r\n    const offset = display_diameter * swanStore.height_scale + (param*1.3) + ((topHeight/3) * 0)\r\n    const neck_mesh = <mesh position={[-depth/2,offset,(bottomRad/1)]} rotation={[0, Math.PI/2, 0]}>\r\n        <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n        <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n    </mesh>\r\n\r\n\r\n    const diameter_marker = getInputMarker((display_diameter/2) + 0.1, 0)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            {swan_body}\r\n            {!swanStore.wings && one_wing}\r\n            {swanStore.wings && wings}\r\n            {!result && diameter_marker}\r\n            {swanStore.bottom_rim && rim_mesh}\r\n            {neck_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Swan);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Swan from \"../components/Swan\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateSwan = () => {\r\n\r\n  const { swanStore, coloringFormStore } = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  }, [swanStore.wings])\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"∧ ∧\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"∧\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 50\r\n\r\n  // in\r\n  if (!swanStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[swanStore.diameter]} onUpdate={(val) => swanStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\nconst bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_bottom_rim(val)}\r\n    options={options}\r\n    initialSelectedIndex={swanStore.bottom_rim ? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\nconst wings_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_wings(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={swanStore.wings? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => swanStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={swanStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\nfunction nextPage(){\r\n  coloringFormStore.setMsg()\r\n  swanStore.setSize()\r\n}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '400px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Swan swanStore={swanStore} result={false}/>\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">wings</p>\r\n          {wings_switch}\r\n          </div>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">bottom_rim</p>\r\n          {bottom_rim_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={nextPage} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateSwan);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport {useFrame} from \"react-three-fiber\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n// import temp from \"../../assets/tempp.png\";\r\n\r\nconst Vase = (props) => {\r\n    const {vase} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n    // texture.wrapS = THREE.MirroredRepeatWrapping;\r\n    // texture.wrapT = THREE.MirroredRepeatWrapping;\r\n    // texture.repeat.set(2, 2.6);\r\n\r\n    const s_dtop_h = vase.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vase.scale_h/vase.height\r\n\r\n    const s_dtop = Math.max(1,vase.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,vase.dbottom * scale_factor)\r\n\r\n    const s_d1 = Math.max(1, vase.d1 * scale_factor)\r\n    const s_d1_h = (vase.d1_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d2 = Math.max(1, vase.d2 * scale_factor)\r\n    const s_d2_h = (vase.d2_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d3 = Math.max(1,vase.d3 * scale_factor)\r\n    const s_d3_h = (vase.d3_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = vase.top_rim ? getInputMarker((s_dtop/2) + 0.6, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = vase.bottom_rim ? getInputMarker((s_dbottom/2) + 0.6, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const d1_marker = getInputMarker((s_d1/2) + 0.1, s_d1_h)\r\n    const d2_marker = getInputMarker((s_d2/2) + 0.1, s_d2_h)\r\n    const d3_marker = getInputMarker((s_d3/2) + 0.1, s_d3_h)\r\n\r\n    if (vase.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.3,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (vase.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.3, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    const points = vase.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vase.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {vase.top_rim && top_rim_mesh}\r\n            {vase.bottom_rim && bottom_rim_mesh}\r\n            {vase.flat_bottom && flat_bottom_mesh}\r\n            {dbottom_marker}\r\n            {d1_marker}\r\n            {d2_marker}\r\n            {d3_marker}\r\n            {dtop_marker}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Vase);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Vase from \"../components/Vase\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateVase = () => {\r\n\r\n  const { vaseStore, coloringFormStore} = useStores();\r\n  \r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"vase\")\r\n  }, [])\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  function MultiHandle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    if (id == \"$$-0\" || id == \"$$-4\"){\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 2,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 3,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n          {...getHandleProps(id)}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 4, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 50\r\n  let min_h = 10 \r\n  let max_h = 100\r\n\r\n  // in\r\n  if (!vaseStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n    max_h = Math.round(max_h/ratio)\r\n    min_h = Math.round(min_h/ratio)\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[min_h, max_h]} step={1} mode={2} values={[vaseStore.height]} onUpdate={(val) => vaseStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.dtop]} onUpdate={(val) => vaseStore.update_dtop(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d3 = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.d3]} onUpdate={(val) => vaseStore.update_d3(val[0])} >\r\n    <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d2 = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.d2]} onUpdate={(val) => vaseStore.update_d2(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d1 = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.d1]} onUpdate={(val) => vaseStore.update_d1(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.dbottom]} onUpdate={(val) => vaseStore.update_dbottom(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const dSlider = <Slider\r\n  rootStyle={sliderStyle}\r\n  domain={[0, 100]}\r\n  mode={2}\r\n  values={[0, vaseStore.d1_h, vaseStore.d2_h, vaseStore.d3_h, 100] /* three values = three handles */}\r\n  onUpdate={(val)=>vaseStore.update_d_heights(val)}\r\n  step={5}\r\n  >\r\n  <div style={railStyle} />\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <MultiHandle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const flat_bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_flat_bottom(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.flat_bottom ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={vaseStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  function nextPage(){\r\n    coloringFormStore.setMsg()\r\n    vaseStore.setSize()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            {/* <ambientLight intensity={0} /> */}\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.3}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n             {/* <spotLight position={[1, 10, 10]} angle={0.15} penumbra={1} /> */}\r\n            {/* <pointLight position={[-10, -10, -10]} /> */}\r\n            <Vase vase={vaseStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{background: '#FFE7E5', width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">2nd diameter</p>\r\n              {slider_d3}\r\n              <p className=\"text\">4th diameter</p>\r\n              {slider_d1}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n              <p className=\"text\">3rd diameter</p>\r\n              {slider_d2}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <p className=\"text\">diameter heights ( % )</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {dSlider}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'right', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom cover</p>\r\n            {flat_bottom_switch}\r\n          </div>\r\n          <div style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={nextPage} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Basket = (props) => {\r\n    const {basketStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    const s_diameter = Math.max(1, basketStore.diameter * scale_factor)\r\n    const s_diameter_h = 0\r\n\r\n    // need rounded bottom shape , concave\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n    \r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = basketStore.top_rim ? getInputMarker((s_dtop/2) + 0.5, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = basketStore.bottom_rim ? getInputMarker((s_dbottom/2) + 0.5, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    const points = basketStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {diameter_marker}\r\n            {dtop_marker}\r\n            {dbottom_marker}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Basket);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Basket from \"../components/Basket\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateBasket = () => {\r\n\r\n  const { basketStore, coloringFormStore} = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"basket\")\r\n  }, [])\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 50\r\n  let min_h = 10 \r\n  let max_h = 100\r\n\r\n  // in\r\n  if (!basketStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n    max_h = Math.round(max_h/ratio)\r\n    min_h = Math.round(min_h/ratio)\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[min_h, max_h]} step={1} mode={2} values={[basketStore.height]} onUpdate={(val) => basketStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[basketStore.diameter]} onUpdate={(val) => basketStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[basketStore.dbottom]} onUpdate={(val) => basketStore.update_dbottom(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n\r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[basketStore.dtop]} onUpdate={(val) => basketStore.update_dtop(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const lid_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_lid(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.lid ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_flat_bottom(!val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.flat_bottom ? 1 : 0}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n</div>\r\n\r\n  const top_handle_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_top_handle(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.top_handle ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  const side_handles_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_side_handles(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.side_handles ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={basketStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\nfunction nextPage(){\r\n  coloringFormStore.setMsg()\r\n  basketStore.setSize()\r\n}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '690px'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 100], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Basket basketStore={basketStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">middle diameter</p>\r\n              {slider_diameter}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">curved bottom</p>\r\n            {bottom_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top handle</p>\r\n            {top_handle_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">lid</p>\r\n            {lid_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">side handles</p>\r\n            {side_handles_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={nextPage} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateBasket);","import React, {useState, useMemo} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []) \r\n\r\n    let display_diameter = figStore.diameter\r\n    if (!figStore.cm){\r\n        display_diameter = Math.round(display_diameter * 2.54)\r\n    }\r\n\r\n    const s_diameter = display_diameter \r\n    const s_diameter_h = 0\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (display_diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const head =\r\n    <group>\r\n        <mesh position={[0,(display_diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh position={[0,(display_diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.BackSide}/>\r\n        </mesh>\r\n    </group>\r\n\r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears === \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears === \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = display_diameter/7\r\n        const y_pos = (display_diameter * figStore.body_height)/2\r\n        const x_pos = (display_diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n                    break;\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {head}\r\n            {diameter_marker}\r\n            {figStore.ears === \"bear\" && bear_ears}\r\n            {figStore.ears === \"bunny\" && bunny_ears}\r\n            {figStore.ears === \"cat\" && cat_ears}\r\n            {figStore.ears === \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Figurine from \"../components/Figurine\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateFigurine = () => {\r\n\r\n  const { figStore, coloringFormStore} = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"fig\")\r\n  }, [])\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"◠ ◠\",\r\n        value: \"bear\",\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"〇 〇\",\r\n        value: \"sphere\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∧ ∧\",\r\n        value: \"cat\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∩ ∩\",\r\n        value: \"bunny\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },\r\n  ];\r\n\r\n  const ears = [\"bear\", \"sphere\", \"cat\", \"bunny\"]\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 50\r\n\r\n  // in\r\n  if (!figStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n  }\r\n  \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[figStore.diameter]} onUpdate={(val) => figStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n\r\n  const arms_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => figStore.update_arms(val)}\r\n      options={options}\r\n      initialSelectedIndex={figStore.arms ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  \r\nconst ears_switch = <div className=\"switch\"  style={{width: 360, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => figStore.update_ears(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={ears.indexOf(`${figStore.ears}`)}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n    fontSize={20}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => figStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={figStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\nfunction nextPage(){\r\n  coloringFormStore.setMsg()\r\n  figStore.setSize()\r\n}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '470px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Figurine figStore={figStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <p className=\"text\">arms</p>\r\n          {arms_switch}\r\n          <br/>\r\n          <p className=\"text\">ears</p>\r\n          {ears_switch}\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={nextPage} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateFigurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultVase = (props) => {\r\n    const {vaseStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        const len = vaseStore.modelDimensions.length\r\n        itemsRef.current = itemsRef.current.slice(0, len)\r\n        insideRef.current = insideRef.current.slice(0, len)\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n        }\r\n     }, []);\r\n\r\n    const s_dtop_h = vaseStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vaseStore.scale_h/vaseStore.height\r\n\r\n    const s_dtop = vaseStore.dtop * scale_factor\r\n    const s_dbottom = vaseStore.dbottom * scale_factor\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    if (vaseStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.3,10,50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (vaseStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.3, 10, 50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const points = useMemo(() => vaseStore.updateCurvedPts(true), [vaseStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vaseStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshLambertMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh> \r\n            ))}\r\n            </group>\r\n            {vaseStore.top_rim && top_rim_mesh}\r\n            {vaseStore.bottom_rim && bottom_rim_mesh}\r\n            {vaseStore.flat_bottom && flat_bottom_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        const len = figStore.modelDimensions.length-1\r\n        itemsRef.current = itemsRef.current.slice(0, len);\r\n        insideRef.current = insideRef.current.slice(0, len);\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n        }\r\n     }, []);\r\n\r\n    const texture_body = useMemo(() => new THREE.TextureLoader().load(figStore.textures[figStore.textures.length-1]), []) \r\n\r\n    let display_diameter = figStore.diameter\r\n    if (!figStore.cm){\r\n        display_diameter = Math.round(display_diameter * 2.54)\r\n    }\r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (display_diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const divs = figStore.getBrokenHeadPts(Math.PI*theta_len)\r\n\r\n    const broken_head = \r\n    <group>\r\n        {divs.map((_, i) => (\r\n            <mesh key={i} position={[0,(display_diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        ))}\r\n        {divs.map((_, i) => (\r\n            <mesh key={i} position={[0,(display_diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => insideRef.current[i] = el} side={THREE.BackSide}/>\r\n            </mesh>\r\n        ))}\r\n    </group>\r\n    \r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears === \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears === \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = display_diameter/7\r\n        const y_pos = (display_diameter * figStore.body_height)/2\r\n        const x_pos = (display_diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n                    break;\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {broken_head}\r\n            {figStore.ears === \"bear\" && bear_ears}\r\n            {figStore.ears === \"bunny\" && bunny_ears}\r\n            {figStore.ears === \"cat\" && cat_ears}\r\n            {figStore.ears === \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultBasket = (props) => {\r\n    const {basketStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        const len = basketStore.modelDimensions.length\r\n        itemsRef.current = itemsRef.current.slice(0, basketStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, basketStore.modelDimensions.length);\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n        }\r\n     }, []);\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    // const points = basketStore.updateCurvedPts()\r\n    const points = useMemo(() => basketStore.updateCurvedPts(true), [basketStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh>\r\n            ))}\r\n            </group>   \r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultBasket);","export default __webpack_public_path__ + \"static/media/upper-banner.1523f22e.png\";","export default __webpack_public_path__ + \"static/media/lower-banner.94f2cf86.png\";","import React, {useEffect, useRef} from 'react';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport { observer } from \"mobx-react\";\r\nimport  ResultVase  from \"../components/ResultVase\"\r\nimport  Swan  from \"../components/Swan\"\r\nimport  ResultFigurine  from \"../components/ResultFigurine\"\r\nimport  ResultBasket  from \"../components/ResultBasket\"\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport './create-vase.css'\r\nimport upperbanner from \"../assets/upper-banner.png\"\r\nimport lowerbanner from \"../assets/lower-banner.png\"\r\nimport { FiDownload } from \"react-icons/fi\";\r\n\r\nconst Result = () => {\r\n  const {coloringFormStore, vaseStore, swanStore, basketStore, figStore} = useStores()\r\n  \r\n  const canvasRef = useRef()\r\n  let modelStore; \r\n  if (coloringFormStore.model === \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model === \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model === \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model === \"basket\") modelStore = basketStore\r\n  modelStore.setDefaultColor(coloringFormStore.defaultColor)\r\n  modelStore.clearTextures()\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext(\"2d\")\r\n    const px_width = 16*2\r\n    const px_height = 11*2\r\n    const half_px_width = px_width/2\r\n    const defaultCol = coloringFormStore.defaultColor;\r\n\r\n    for (let i = 0; i < coloringFormStore.coloringFormData.length; i++){\r\n      const sec_width = modelStore.modelDimensions[i][0]\r\n      const sec_height = modelStore.modelDimensions[i][1] \r\n      canvas.width = sec_width * px_width\r\n      canvas.height = sec_height * px_height\r\n      context.fillStyle = defaultCol\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n      for (let r = 0; r < sec_height; r++){\r\n        let offset = 0 \r\n        if (coloringFormStore.coloringFormData[i].drawingSectionData[r].offset){\r\n          offset = half_px_width\r\n          const last_idx = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData.length\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[last_idx-1].pixelColor\r\n          context.fillRect(0, px_height * r, half_px_width, px_height)\r\n        }\r\n        for (let c = 0; c < sec_width; c++){\r\n          if (coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor === defaultCol) continue\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor\r\n          context.fillRect((px_width * c) + offset, px_height * r, px_width, px_height)\r\n        }\r\n      }\r\n      var texture = canvas.toDataURL(\"image/png\", 1.0)\r\n      modelStore.storePic(texture)\r\n    }\r\n    coloringFormStore.setMsg(\"error\")\r\n  }, [])\r\n\r\n  return (\r\n    // <canvas ref={canvasRef}/> // to test texture generation\r\n    <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '600px'}}>\r\n      <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '52%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: \"80%\", borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {0.8}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {0.8}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.3} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.1} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.1} />\r\n            {coloringFormStore.model === \"vase\" && <ResultVase vaseStore={vaseStore} />}\r\n            {coloringFormStore.model === \"swan\" && <Swan swanStore={swanStore} result={true}/>}\r\n            {coloringFormStore.model === \"fig\" && <ResultFigurine figStore={figStore}/>}\r\n            {coloringFormStore.model === \"basket\" && <ResultBasket basketStore={basketStore} />}\r\n          </Canvas>\r\n        <div className=\"containerCaption\">\r\n            <div style={{height: 10}}></div>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 10}}></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"containerRight\" style={{width: '48%', height: \"100%\", overflow: 'visible', float:'right', alignItems:\"center\", justifyContent:\"center\", position: \"relative\"}}>\r\n        <canvas style={{display:\"none\"}} ref={canvasRef}/>\r\n        <img alt={\"\"} src={upperbanner} className=\"banner\" style={{marginTop: 2}}/>\r\n        <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d-o diagram <span><FiDownload size={20}/></span></p>\r\n        </div>\r\n        <img alt={\"\"} src={lowerbanner} className=\"banner-b\"  />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Result);","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport Landing from './landing';\r\nimport About from './about';\r\nimport Learn from './learn';\r\nimport Contact from './contact';\r\nimport Create from './create';\r\nimport Gallery from './gallery';\r\nimport Browse from './browse';\r\nimport Login from './login';\r\nimport CreateSwan from \"./create-swan\"\r\nimport CreateVase from \"./create-vase\"\r\nimport CreateBasket from \"./create-basket\"\r\nimport CreateFigurine from \"./create-figurine\"\r\nimport Result from \"./result\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst Home = () => {\r\n\r\n  const {coloringFormStore} = useStores();\r\n\r\n  return (\r\n  <div className=\"Background\">\r\n    <div className=\"InnerApp\"> \r\n      <Navbar/>\r\n      <Switch>\r\n        <Route path='/about' component={About} />\r\n        <Route path='/create' component={Create} />\r\n        <Route path='/learn' component={Learn} />\r\n        <Route path='/contact' component={Contact} />\r\n        <Route path='/gallery' component={Gallery} />\r\n        <Route path='/browse' component={Browse} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/create-swan' component={CreateSwan} />\r\n        <Route path='/create-vase' component={CreateVase} />\r\n        <Route path='/create-basket' component={CreateBasket} />\r\n        <Route path='/create-figurine' component={CreateFigurine} />\r\n        <Route path='/result'>\r\n          {coloringFormStore.resultMsg === \"error\" ? <Redirect to=\"/create\"/> : <Result />}\r\n        </Route>\r\n        <Route path='/' component={Landing}/>\r\n      </Switch>\r\n    </div>\r\n    <p style={{marginBottom: 30, marginTop: 20, letterSpacing: 1.5, color: \"#E33937\", fontSize:13}}>lina nguyen 🍓 2021</p>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect} from \"react\";\r\nimport \"./pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Pixel = (props) => {\r\n  const {formObject, PxModel} = props;\r\n\r\n  function borderColor() {\r\n    var color = PxModel.pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true)\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(PxModel.pixelColor === formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n    if (PxModel.pixelColor !== PxModel.oldColor){\r\n      formObject.updateCounter(PxModel.oldColor, PxModel.pixelColor)\r\n      PxModel.setOldColor(PxModel.pixelColor)\r\n    } \r\n    PxModel.setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    PxModel.setOldColor(PxModel.pixelColor);\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (PxModel.canChangeColor) {\r\n      PxModel.setPixelColor(PxModel.oldColor);\r\n    }\r\n\r\n    PxModel.setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: PxModel.pixelColor, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {PxModel.inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(Pixel);","import React, { useState } from \"react\";\r\nimport \"./specialPixel.css\";\r\n\r\nexport default function SpecialPixel(props) {\r\n  const {on, num, markerNum, displayRowNum, rounded} = props;\r\n\r\n  if (on){\r\n    if (markerNum){\r\n      return (\r\n        <div\r\n          className=\"specialPixelOn\"\r\n        ><p style={{marginTop: -4, fontSize: 10, marginLeft: -1.6, position:'absolute', background: \"#FF6C7B\", paddingLeft: 2.5, paddingRight:3, paddingBottom:0.3, borderRadius:8, color:\"white\"}}> {markerNum}</p></div>\r\n      );\r\n    } else {\r\n      if (rounded){\r\n        return (\r\n          <div className=\"roundedRight\"\r\n          ></div>\r\n        );\r\n      }\r\n      else{\r\n        return (\r\n          <div className=\"specialPixelOn\"\r\n          ></div>\r\n        );\r\n      }\r\n    }\r\n  } \r\n  else {\r\n    if (displayRowNum){\r\n      return (\r\n        <div\r\n          className=\"rowMarkerPixel\"\r\n        >\r\n          <p style={{fontSize:9, marginLeft: 5, marginTop:-0.5, position:'absolute'}}>{displayRowNum}</p>\r\n          </div>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <div\r\n          className=\"specialPixelOff\"\r\n        >\r\n          <p style={{fontSize:10, marginLeft: 4, marginTop: -4, position:'absolute'}}>{num}</p>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n}","import React, {useEffect} from \"react\";\r\nimport \"./row.css\";\r\nimport Pixel from \"../Pixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst Row = (props) => {\r\n  const {formObject, RowModel} = props;\r\n  let pixels = [];\r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  if (RowModel.rowData.length == 0){\r\n    for (let i = 0; i < RowModel.width; i++) {\r\n      RowModel.addPx()\r\n    }\r\n  }\r\n  for (let i = 0; i < RowModel.width; i++) {\r\n    if(formObject.inverted) RowModel.rowData[i].setInverted()\r\n    pixels.push(<Pixel key={i} formObject={formObject} PxModel={RowModel.rowData[i]}/>);\r\n  }\r\n\r\n  pixels.push(<SpecialPixel key={RowModel.width} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  return <div style={{marginLeft: RowModel.offset}} className=\"row\">{pixels}</div>;\r\n}\r\n\r\nexport default observer(Row)","import React from \"react\";\r\nimport \"./specialRow.css\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\n\r\n// at least one of specialTop or specialBottom != null \r\n\r\nexport default function SpecialRow(props) {\r\n  const { width, offset, specialTop, specialBottom } = props;\r\n\r\n  let pixels = [];\r\n\r\n  const my_dict = specialBottom ? specialBottom : specialTop\r\n  let count = 0 \r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} num={\"\"}/>)\r\n\r\n  for (let i = 0; i < width; i++) {\r\n    if (i in my_dict){\r\n      if (my_dict[i] == 1){\r\n        count += 1\r\n        pixels.push(<SpecialPixel key={i} on={true} markerNum={count}/>);\r\n      }\r\n      else if (my_dict[i] == -1){\r\n        pixels.push(<SpecialPixel key={i} on={true} rounded={true}/>);\r\n      }\r\n      else if (i == width-1 && my_dict[i] == 0){\r\n        pixels[0] = <SpecialPixel key={i} on={true}/>\r\n      }\r\n      else{\r\n        pixels.push(<SpecialPixel key={i} on={true}/>);\r\n      }\r\n    }\r\n    else{\r\n        pixels.push(<SpecialPixel key={i} on={false} num = {i+1}/>);\r\n    }\r\n  }\r\n\r\n  return <div style={{marginLeft: offset}} className=\"specialRow\">{pixels}</div>;\r\n}","import React, { useEffect, useState, useRef} from \"react\";\r\nimport \"../Pixel/pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedPixel = (props) => {\r\n  const {formObject, inverted} = props;\r\n\r\n  const [pixelColor, setPixelColor] = useState(formObject.defaultColor);\r\n  const [oldColor, setOldColor] = useState(pixelColor);\r\n  const [canChangeColor, setCanChangeColor] = useState(true);\r\n\r\n  function borderColor() {\r\n    var color = pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n  \r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true, true)\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(pixelColor == formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    setPixelColor(formObject.selectedColor);\r\n    if (pixelColor != oldColor){\r\n      formObject.updateCounter(oldColor, pixelColor)\r\n      setOldColor(pixelColor)\r\n    }\r\n    setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    setOldColor(pixelColor);\r\n    setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (canChangeColor) {\r\n      setPixelColor(oldColor);\r\n    }\r\n\r\n    setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: pixelColor, width: 20, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(UntrackedPixel);","import React, {useEffect} from \"react\";\r\nimport \"../Row/row.css\";\r\nimport UntrackedPixel from \"../UntrackedPixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst UntrackedRow = (props) => {\r\n  const {wing, formObject, numPx, offset, display, inverted} = props;\r\n  let pixels = [];\r\n\r\n  if(display) pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={display}/>)\r\n\r\n  for (let i = 0; i < numPx; i++) {\r\n    pixels.push(<UntrackedPixel key={i} formObject={formObject} inverted={inverted} />);\r\n  }\r\n\r\n  if (!wing) pixels.push(<SpecialPixel key={numPx} on={false} displayRowNum={display} />)\r\n  \r\n  return <div style={{marginLeft: offset}} className=\"row\">{pixels}</div>;\r\n  \r\n}\r\n\r\nexport default observer(UntrackedRow)","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\nimport SpecialRow from \"../SpecialRow\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst TriangleSection = (props) => {\r\n  const {wing, caption, width, formObject, elevation, firstRowDisplay, inverted} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = [];\r\n  \r\n  // height = width \r\n  const px_width = 21 // 21 is the px width w border\r\n  for (let i = 0; i < width; i++) {\r\n    let var_offset = (0.5*(px_width)*(width-i-1))\r\n    let displayNum = elevation+width-i\r\n    if (!firstRowDisplay){\r\n      if (i < width - 1) var_offset = (0.5*(px_width)*(width-i-3))\r\n      else displayNum = false\r\n    }\r\n    rows.push(<UntrackedRow key={i} wing={wing} numPx={i+1} offset={var_offset} formObject={formObject} display={displayNum} inverted={inverted}/>);\r\n    if (!wing && i == width-1){\r\n      rows.push(<SpecialRow key={i+1} width={width} offset={var_offset} specialTop = {{}}/>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"triangleSection\">\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 0, marginLeft: 0, marginRight:0}}>\r\n        {caption && <p id=\"text\">{caption}</p>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(TriangleSection)","  \r\nimport React, { useRef} from \"react\";\r\nimport \"./drawingSection.css\";\r\nimport Row from \"../Row\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport TriangleSection from \"../TriangleSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst DrawingSection = (props) => {\r\n  const {caption, specialTop, specialBottom, formObject, DrawingSectionModel} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = []; \r\n  let swanUpper = [];\r\n\r\n  if (formObject.model === \"swan\"){\r\n    if (formObject.swan_two_wings){\r\n      const wing_width = Math.round(0.4 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - (2 * wing_width)\r\n      const chest_width = Math.ceil(remainder/2)\r\n      const back_width = Math.floor(remainder/2)\r\n      const wing1 = <TriangleSection key={0} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true}/> \r\n      const wing2 = <TriangleSection key={1} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} /> \r\n      const chest = <TriangleSection key={2} wing={true} width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} />\r\n      const back = <TriangleSection key={3} wing={true} width={back_width} formObject={formObject} elevation={DrawingSectionModel.height} inverted={true}/>\r\n      swanUpper.push(wing1, chest, wing2, back)\r\n    } \r\n    else {\r\n      const wing_width = Math.round(0.75 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - wing_width\r\n      const chest_width = remainder - 2\r\n      const wing = <TriangleSection key={0} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} inverted={true}/> \r\n      const chest = <TriangleSection key={1} wing={true} width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} />\r\n      swanUpper.push(wing, chest)\r\n    }\r\n  }\r\n\r\n  if (formObject.model != \"swan\") rows.push(<SpecialRow key={-1} offset={0} width={DrawingSectionModel.width} specialTop={specialTop} />)\r\n  \r\n  if(DrawingSectionModel.drawingSectionData.length === 0){\r\n    for (let i = 0; i < DrawingSectionModel.height; i++){\r\n      DrawingSectionModel.addRow()\r\n    }\r\n  }\r\n  for (let i = 0; i < DrawingSectionModel.height; i++) {\r\n    DrawingSectionModel.drawingSectionData[i].setWidth(DrawingSectionModel.width)\r\n    DrawingSectionModel.drawingSectionData[i].setDisplayRowNum(DrawingSectionModel.height-i)\r\n    if (i%2 === 1){\r\n      DrawingSectionModel.drawingSectionData[i].setOffset()\r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n    else{ \r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n  }\r\n  \r\n  if(DrawingSectionModel.increasing){\r\n    if (DrawingSectionModel.height%2 === 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5*2} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (DrawingSectionModel.height%2 === 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={0} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {formObject.model === \"swan\" && <div style={{display:\"flex\", alignItems:\"flex-end\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n          {swanUpper}\r\n        </div>}\r\n        {caption && <p id=\"text\">{caption}</p>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(DrawingSection)","import React, {useRef} from 'react';\r\nimport DrawingSection from \"../DrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst OrigamiObject = (props) => {\r\n    const {caption, dimensions, formObject} = props;\r\n  \r\n    const objectRef = useRef();\r\n\r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    if (formObject.model === \"swan\"){\r\n      specialTop = Array(dimensions.length).fill({})\r\n      specialBottom = Array(dimensions.length).fill({})\r\n    }\r\n    else {\r\n      if (dimensions.length > 1 && dimensions[dimensions.length-2][0] < dimensions[dimensions.length-1][0]) formObject.setInverted()\r\n\r\n      for (let i = dimensions.length-2; i >= 0; i--){\r\n        let sTopCurr = {}\r\n        let sBottomCurr = {}\r\n\r\n        const curr = dimensions[i+1][0]\r\n        const next = dimensions[i][0]\r\n        let diff = next-curr // number of pieces need to add or subtract \r\n\r\n        let distribute = 0 \r\n        let remainder = 0\r\n        let spacing = 0\r\n        if (diff === 0){\r\n          specialTop = Array(dimensions.length).fill({})\r\n          specialBottom = Array(dimensions.length).fill({})\r\n        }\r\n        else if (diff > 0){ // increasing - 2 pcs per increase\r\n          sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n          distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n          remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = -1\r\n            idx += spacing_arr[i] + 2\r\n            i += 1 \r\n          }\r\n          let last_idx = 2\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n            sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 3\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)    \r\n          increasing.unshift(true) \r\n        } \r\n        else { // decreasing \r\n          sBottomCurr = {0: 1, 1: -1}\r\n          diff = -1 * diff\r\n          distribute = curr - (3 * diff)\r\n          remainder = distribute % diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = 0\r\n            sTopCurr[idx+2] = -1\r\n            idx += spacing_arr[i] + 3\r\n            i += 1 \r\n          }\r\n          let last_idx = 1\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 2\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)  \r\n          increasing.unshift(false)\r\n        }\r\n      }\r\n      if (formObject.model === \"fig\"){\r\n        specialTop[specialTop.length-1] = {}\r\n        specialBottom[specialBottom.length-1] = {}\r\n      } \r\n      specialTop.unshift({})\r\n      specialBottom.push({})\r\n      increasing.push(false)\r\n    }\r\n\r\n    let sections = [];\r\n  \r\n    if (formObject.coloringFormData.length == 0){\r\n      for (let i = 0; i < dimensions.length; i++) {\r\n        formObject.addDrawingSection()\r\n      }\r\n    }\r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      formObject.coloringFormData[i].setWidthHeight(dimensions[i][0], dimensions[i][1])\r\n      formObject.coloringFormData[i].setIncreasing(increasing[i])\r\n      let caption = false\r\n      if (formObject.model === \"fig\" && i === dimensions.length-1) caption = \"figurine body\"\r\n      sections.push(<DrawingSection key={i} caption={caption} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} formObject={formObject} DrawingSectionModel={formObject.coloringFormData[i]} />);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        <div id=\"sections\" ref={objectRef}>\r\n          <p id=\"text\">{caption}</p>\r\n          {sections}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(OrigamiObject)","export default __webpack_public_path__ + \"static/media/rim.90d28599.png\";","export default __webpack_public_path__ + \"static/media/halfRim.934ee4ec.png\";","export default __webpack_public_path__ + \"static/media/neck.d9f33158.png\";","import React from \"react\";\r\nimport rim_image from \"../../assets/rim.png\";\r\nimport half_rim_image from \"../../assets/halfRim.png\";\r\nimport neck_image from \"../../assets/neck.png\"\r\nimport \"./rim.css\"\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\n// input 'length' doesn't have to be int\r\n\r\nconst Rim = (props) => {\r\n    const {swan, full, caption, length, upsize} = props \r\n\r\n    function cmToPcs(cm, height=false){\r\n        const height_factor = upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(cm/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    }\r\n    \r\n    const num_pcs = cmToPcs(length,true)\r\n\r\n    return (\r\n        <div className=\"rimDiv\">\r\n            <p id=\"text\">{caption}</p>\r\n            {full && <img src={rim_image} className=\"rim\" />}\r\n            {!full && !swan  && <img src={half_rim_image} className=\"half_rim\" />}\r\n            {swan && <img src={neck_image} className=\"neck\" />} \r\n            <p id=\"text\">{num_pcs} pieces</p>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Rim;","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedDrawingSection = (props) => {\r\n  const {arm, open, bunny, specialTop, specialBottom, increasing, formObject, dimensions} = props;\r\n\r\n  let rows = []; \r\n  let inverted = false\r\n\r\n  if (!bunny) rows.push(<SpecialRow key={-1} offset={0} width={dimensions[0]} specialTop={specialTop} />)\r\n  else{\r\n    const end_width = Math.floor(dimensions[0]*(0.5))\r\n    const num_rows = dimensions[0] - end_width\r\n    for (let i = 0; i < num_rows; i++){\r\n      rows.push(<UntrackedRow key={dimensions[1]+1+i} numPx={end_width+i} offset={10.5*(num_rows-i)} formObject={formObject} display={dimensions[1]+num_rows-i} inverted={inverted}/>)\r\n    }\r\n\r\n  }\r\n  \r\n  for (let i = 0; i < dimensions[1]; i++) {\r\n    arm && i == dimensions[1]-1 ? inverted = true : inverted = false\r\n    if (i%2 == 1){\r\n      let numPx = dimensions[0]\r\n      if (open) numPx -= 1\r\n      rows.push(<UntrackedRow key={i} numPx={numPx} offset={10.5} formObject={formObject} display={dimensions[1]-i} inverted={inverted}/>);\r\n    }\r\n    else{ \r\n      rows.push(<UntrackedRow key={i} numPx={dimensions[0]} offset={0} formObject={formObject} display={dimensions[1]-i} inverted={inverted}/>);\r\n    }\r\n  }\r\n  \r\n  if(increasing){\r\n    if (dimensions[1]%2 == 1){\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5*2} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (dimensions[1]%2 == 1){\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={0} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(UntrackedDrawingSection)","import React, {useRef} from 'react';\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedOrigamiObject = (props) => {\r\n    const {dimensions, formObject} = props;\r\n  \r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    for (let i = dimensions.length-2; i >= 0; i--){\r\n      let sTopCurr = {}\r\n      let sBottomCurr = {}\r\n\r\n      const curr = dimensions[i+1][0]\r\n      const next = dimensions[i][0]\r\n      let diff = next-curr // number of pieces need to add or subtract \r\n\r\n      let distribute = 0 \r\n      let remainder = 0\r\n      let spacing = 0\r\n      \r\n      if (diff == 0){\r\n        specialTop = Array(dimensions.length).fill({})\r\n        specialBottom = Array(dimensions.length).fill({})\r\n      }\r\n      else if (diff > 0){ // increasing - 2 pcs per increase\r\n        sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n        distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n        remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n        spacing = Math.floor(distribute/diff)\r\n        let spacing_arr = Array(diff).fill(spacing)\r\n        for (let i = 0; i < 2; i++){\r\n          let j = i\r\n          while (j < diff && remainder > 0){\r\n            spacing_arr[j] += 1 \r\n            remainder -= 1 \r\n            j += 2 \r\n          }\r\n        }\r\n        let i = 0 \r\n        let idx = 0 \r\n        while(i < diff){\r\n          sTopCurr[idx] = 1\r\n          sTopCurr[idx+1] = -1\r\n          idx += spacing_arr[i] + 2\r\n          i += 1 \r\n        }\r\n        let last_idx = 2\r\n        for (let i = 0; i < spacing_arr.length-1; i ++){\r\n          sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n          sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n          sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n          last_idx = last_idx + spacing_arr[i] + 3\r\n        }  \r\n        specialTop.unshift(sTopCurr)\r\n        specialBottom.unshift(sBottomCurr)    \r\n        increasing.unshift(true) \r\n      } \r\n      else { // decreasing \r\n        sBottomCurr = {0: 1, 1: -1}\r\n        diff = -1 * diff\r\n        distribute = curr - (3 * diff)\r\n        remainder = distribute % diff\r\n        spacing = Math.floor(distribute/diff)\r\n        let spacing_arr = Array(diff).fill(spacing)\r\n        for (let i = 0; i < 2; i++){\r\n          let j = i\r\n          while (j < diff && remainder > 0){\r\n            spacing_arr[j] += 1 \r\n            remainder -= 1 \r\n            j += 2 \r\n          }\r\n        }\r\n        let i = 0 \r\n        let idx = 0 \r\n        while(i < diff){\r\n          sTopCurr[idx] = 1\r\n          sTopCurr[idx+1] = 0\r\n          sTopCurr[idx+2] = -1\r\n          idx += spacing_arr[i] + 3\r\n          i += 1 \r\n        }\r\n        let last_idx = 1\r\n        for (let i = 0; i < spacing_arr.length-1; i ++){\r\n          sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n          sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n          last_idx = last_idx + spacing_arr[i] + 2\r\n        }  \r\n        specialTop.unshift(sTopCurr)\r\n        specialBottom.unshift(sBottomCurr)  \r\n        increasing.unshift(false)\r\n      }\r\n    }\r\n    specialTop.unshift({})\r\n    specialBottom.push({})\r\n    increasing.push(false)\r\n\r\n    let sections = [];\r\n  \r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      sections.push(<UntrackedDrawingSection key={i} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} increasing={increasing[i]} formObject={formObject} dimensions={dimensions[i]}/>);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        {sections}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(UntrackedOrigamiObject)","import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nfunction getDimensions(widths, heights) {\r\n    let curr_section = []\r\n    // getting from diameter to diameter in 'height' pieces\r\n    for (let i = 0; i < widths.length-1; i++){\r\n        const min_height = 3\r\n        let min_height_needed = min_height\r\n        let diff = widths[i+1]-widths[i]\r\n        let height_diff = heights[i+1] - heights[i]\r\n\r\n        let temp_dbottom = widths[i]\r\n        \r\n        // increasing\r\n        if (diff > 0){\r\n            curr_section.push([temp_dbottom,min_height])\r\n            while (diff > 0){\r\n                const add_to_this_row = Math.floor(temp_dbottom/min_height)\r\n                const actual_add = Math.min(diff, add_to_this_row)\r\n                diff -= actual_add \r\n                temp_dbottom += actual_add\r\n                if (diff == 0 && i < widths.length-2) break\r\n                min_height_needed += min_height\r\n                curr_section.unshift([temp_dbottom, min_height])\r\n            }\r\n        }\r\n        // decreasing\r\n        else if (diff < 0){\r\n            diff = diff * -1\r\n            curr_section.push([temp_dbottom,min_height])\r\n            while (diff > 0) {\r\n                const sub_from_this_row = Math.floor(temp_dbottom/4)\r\n                const actual_sub = Math.min(diff, sub_from_this_row)\r\n                diff -= actual_sub\r\n                temp_dbottom -= actual_sub\r\n                if (diff == 0 && i < widths.length-2) break\r\n                min_height_needed += min_height\r\n                curr_section.unshift([temp_dbottom,min_height])\r\n            }            \r\n        }\r\n        let excess_height = height_diff-min_height_needed\r\n        while (excess_height>0){\r\n            curr_section[excess_height%curr_section.length][1] += 1\r\n            excess_height -= 1\r\n        }\r\n    }\r\n    return curr_section\r\n}\r\n\r\nconst Bottom = (props) => {\r\n    const {flat, upsize, diameter, caption, formObject} = props \r\n    let object = <div></div>\r\n    let dimensions = []\r\n\r\n    function cmToPcs(cm, height=false){\r\n        const height_factor = upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(cm/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    }\r\n\r\n    if (flat){\r\n        const rows = [[192,10],[160,8],[128,5],[96,5],[64,4],[48,4],[32,3],[16,3],[8,2],[4,2]] // backwards\r\n        let tot_height = Math.ceil(cmToPcs(diameter/2, true))\r\n        while (tot_height > 0){\r\n            const curr_row = rows.pop()\r\n            dimensions.unshift([curr_row[0], Math.min(tot_height,curr_row[1])])\r\n            tot_height -= curr_row[1]\r\n        } \r\n        object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n    }\r\n    else{\r\n        // curved bottom/lid for basket\r\n        const widths = [4,cmToPcs(diameter * Math.PI)]\r\n        const heights = [0,Math.ceil(diameter/4)]\r\n        dimensions = getDimensions(widths, heights) // top to bottom \r\n        object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Bottom;","import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Arm = (props) => {\r\n    const {caption, size, formObject} = props;\r\n    const arms = {\r\n        small: [10,4],\r\n        med: [15,6], \r\n        big: [20,8]\r\n    }\r\n    let dimensions = arms.med\r\n    if (size == \"small\") dimensions = arms.small\r\n    else if (size == \"big\") dimensions = arms.large\r\n    const object = <UntrackedDrawingSection arm={true} specialTop = {[]} specialBottom = {[]} formObject={formObject} dimensions={dimensions}/>\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Arm;","import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst BunnyOrHandle = (props) => {\r\n    const {caption, size, formObject, upsize} = props;\r\n    let object = <div></div>\r\n    let height = 0\r\n    const lim = 50\r\n\r\n    function cmToPcs(cm, height=false){\r\n      const height_factor = upsize? 0.7: 0.55 // 0.5 cm height per row\r\n      const width_factor = upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n      if (height){\r\n          return Math.round(cm/height_factor)\r\n      }\r\n      return Math.round(cm/width_factor)\r\n    }\r\n\r\n    if (caption == \"bunny ear\"){\r\n        // height has to be odd number to have the base bigger\r\n        object = <UntrackedDrawingSection bunny={true} open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[size,(2*size)+1]} />\r\n    }\r\n    else {\r\n        height = cmToPcs(1.2 * size * Math.PI/2, true) // length of the handle = a bit more than hemisphere\r\n        const input_height = Math.min(height, lim)\r\n        const width = cmToPcs((38/360) * size * Math.PI)\r\n        object = <UntrackedDrawingSection open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[width,input_height]} />\r\n    }\r\n\r\n    return (    \r\n      <div>\r\n        <p id=\"text\">{caption}</p>\r\n        {object}\r\n        {height > lim && <p id=\"text\">+ {height-lim} more rows ...</p>}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default BunnyOrHandle;","import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Sphere = (props) => {\r\n    const {size, caption, formObject} = props \r\n    let object = <div></div>\r\n    const spheres = {\r\n        small: [[4,2],[6,2],[8,5],[4,2]],\r\n        med: [[8,2],[10,2],[12,2],[16,4],[8,2],[4,2]],\r\n        big: [[16,2],[19,3],[23,2],[24,4],[16,3],[8,1],[4,2]]\r\n    }\r\n    let dimensions = spheres.med\r\n    if (size == \"small\") dimensions = spheres.small\r\n    else if (size == \"big\") dimensions = spheres.big\r\n    else {console.log(\"med\")}\r\n\r\n    object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Sphere;","import React from 'react';\r\nimport { observer } from \"mobx-react\";\r\nimport Rim from \"../Rim\";\r\nimport Bottom from \"../Bottom\";\r\nimport Arm from \"../Arm\"\r\nimport BunnyOrHandle from \"../BunnyOrHandle\"\r\nimport TriangleSection from \"../TriangleSection\"\r\nimport Sphere from \"../Sphere\"\r\n\r\nconst Appendages = (props) => {\r\n    const {modelStore, formObject} = props;\r\n  \r\n    let bottoms = []\r\n    let sections = []\r\n    let rims = []\r\n    let key = 0\r\n    const conv = 2.54\r\n\r\n    if (modelStore.flat_bottom){\r\n      const dbottom = modelStore.cm? modelStore.dbottom: modelStore.dbottom * conv\r\n      bottoms.push(<Bottom key={key} caption={\"flat bottom\"} flat={true} diameter={dbottom} lid={false} formObject={formObject} upsize={modelStore.upsize}/>)\r\n      key += 1\r\n    }\r\n    else if (formObject.model === \"basket\"){\r\n      const dbottom = modelStore.cm? modelStore.dbottom: modelStore.dbottom * conv\r\n      bottoms.push(<Bottom key={key} caption={\"curved bottom\"} flat={false} diameter={dbottom} lid={false} formObject={formObject} upsize={modelStore.upsize}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.lid){\r\n      const dtop = modelStore.cm? modelStore.dtop: modelStore.dtop * conv\r\n      const handle_size = modelStore.dtop <= 15? \"small\": modelStore.dtop >= 35? \"big\":\"med\"\r\n      bottoms.push(<Bottom key={key} caption={\"lid\"} flat={false} diameter={dtop} formObject={formObject} upsize={modelStore.upsize}/>)\r\n      key += 1\r\n      sections.push(<Sphere key={key} caption={\"lid handle\"} size={handle_size} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.top_handle){\r\n      const dtop = modelStore.cm? modelStore.dtop: modelStore.dtop * conv\r\n      sections.push(<BunnyOrHandle key={key} caption={\"top handle\"} size={dtop} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.arms){\r\n      const diameter = modelStore.cm? modelStore.diameter : modelStore.diameter * conv\r\n      const size = diameter <= 15? \"small\": diameter >= 35? \"big\":\"med\"\r\n      sections.push(<Arm key={key} caption={\"arm\"} size={size} formObject={formObject}/>)\r\n      key += 1\r\n      sections.push(<Arm key={key} caption={\"arm\"} size={size} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.ears !== \"\"){\r\n      const ear_scale = 2\r\n      const diameter = modelStore.cm? modelStore.diameter : modelStore.diameter * conv\r\n      const ear_d = Math.ceil(diameter/ear_scale)\r\n      if (modelStore.ears === \"bear\"){\r\n        sections.push(<Rim key={key} full={false} caption={\"bear ear\"} length={ear_d*1.3} upsize={modelStore.upsize}/>)\r\n        key += 1\r\n        sections.push(<Rim key={key} full={false} caption={\"bear ear\"} length={ear_d*1.3} upsize={modelStore.upsize}/>)\r\n        key += 1 \r\n      }\r\n      else if (modelStore.ears === \"bunny\"){\r\n        sections.push(<BunnyOrHandle key={key} caption={\"bunny ear\"} size={ear_d} formObject={formObject}/>)\r\n        key += 1\r\n        sections.push(<BunnyOrHandle key={key} caption={\"bunny ear\"} size={ear_d} formObject={formObject}/>)\r\n      }\r\n      else if (modelStore.ears === \"sphere\"){\r\n        sections.push(<Sphere key={key} caption={\"round ear\"} size={diameter <= 15? \"small\": diameter >= 35? \"big\":\"med\"} formObject={formObject}/>)\r\n        key += 1\r\n        sections.push(<Sphere key={key} caption={\"round ear\"} size={diameter <= 15? \"small\": diameter  >= 35? \"big\":\"med\"} formObject={formObject}/>)\r\n      }\r\n      else if (modelStore.ears === \"cat\"){\r\n        sections.push(<TriangleSection key={key} caption={\"cat ear\"} width={ear_d} formObject={formObject} elevation={0} firstRowDisplay={true} inverted={false} />)\r\n        key += 1\r\n        sections.push(<TriangleSection key={key} caption={\"cat ear\"} width={ear_d} formObject={formObject} elevation={0} firstRowDisplay={true} inverted={false} />)\r\n      }\r\n      key += 1\r\n    }\r\n    if (modelStore.side_handles){\r\n      const dtop = modelStore.cm? modelStore.dtop : modelStore.dtop * conv\r\n      const half_circ = Math.round(dtop/4) // half the circumference of the handle, ie. length of handle\r\n      rims.push(<Rim key={key} full={false} caption={\"side handle\"} length={half_circ} upsize={modelStore.upsize}/>) // static picture\r\n      key += 1\r\n      rims.push(<Rim key={key} full={false} caption={\"side handle\"} length={half_circ} upsize={modelStore.upsize}/>) \r\n      key += 1\r\n    }\r\n    if (modelStore.top_rim){\r\n      const dtop = modelStore.cm? modelStore.dtop : modelStore.dtop * conv\r\n      rims.push(<Rim key={key} full={true} caption={\"top rim\"} length={dtop} upsize={modelStore.upsize}/>) // static picture\r\n      key += 1\r\n    }\r\n    if (formObject.model === \"swan\"){\r\n      if (modelStore.bottom_rim){\r\n        const dbottom = modelStore.cm? modelStore.diameter * modelStore.bottom_scale : modelStore.diameter * modelStore.bottom_scale * conv\r\n        rims.push(<Rim key={key} full={true} caption={\"bottom rim\"} length={dbottom} upsize={modelStore.upsize}/>) // static picture\r\n        key += 1\r\n      }\r\n      const diameter = modelStore.cm? modelStore.diameter : modelStore.diameter * conv\r\n      rims.push(<Rim key={key} swan={true} caption={\"neck\"} length={diameter} upsize={modelStore.upsize}/>) // static picture\r\n      key += 1\r\n    }\r\n    if (formObject.model !== \"swan\" && modelStore.bottom_rim){\r\n      const dbottom = modelStore.cm? modelStore.dbottom : modelStore.dbottom * conv\r\n      rims.push(<Rim key={key} full={true} caption={\"bottom rim\"} length={dbottom} upsize={modelStore.upsize}/>) // static picture\r\n      key += 1\r\n    }\r\n\r\n    return (\r\n      <div id=\"Appendages\">\r\n        <div style={{display:\"inline-block\", marginLeft: 10.5, marginBottom: 3}}>\r\n          {bottoms}\r\n          <div style={{display:\"flex\", alignItems:\"flex-start\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n            {sections}\r\n            {rims}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(Appendages)","import React, {useState, useRef, useEffect, useMemo} from 'react';\r\nimport { TwitterPicker } from \"react-color\";\r\nimport OrigamiObject from \"../components/OrigamiObject\";\r\nimport \"./colouringPage.css\";\r\n// import premade from \"./premade\";\r\nimport Sticky from 'react-stickynode';\r\nimport { observer } from \"mobx-react\";\r\nimport logo from \"../assets/complex-logo.png\"\r\n// import {PlainLink as Link} from '../components/Navbar/NavbarElements';\r\nimport { AiOutlineInfo } from \"react-icons/ai\";\r\nimport { FiTrash } from \"react-icons/fi\";\r\nimport { IoChevronForward, IoChevronBack } from \"react-icons/io5\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport DelayLink from 'react-delay-link';\r\nimport {Link} from 'react-router-dom'\r\nimport Appendages from \"../components/Appendages\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nconst Colouring = () => {\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [showPickerDefault, setShowPickerDefault] = useState(false);\r\n  const [colorPaletteIdx, setColorIdx] = useState(0);\r\n  const [dColorPaletteIdx, setDColorIdx] = useState(0);\r\n  const [colorPalette, setColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']) \r\n  const [dColorPalette, setDColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'])\r\n  \r\n  // useEffect(() => {\r\n  //   // // coloringFormData = drawing sections\r\n  //   // // drawingSectionData = rows\r\n  //   // // rowData = pixels\r\n  //   // if (coloringFormStore.preload){\r\n  //   //   for (let i = 0; i < premade[\"swan1\"][0].length; i++){\r\n  //   //     const curr_px = premade[\"swan1\"][0][i]\r\n  //   //     coloringFormStore.coloringFormData[curr_px[0]].drawingSectionData[curr_px[1]].rowData[curr_px[2]].setPixelColor(curr_px[3])\r\n  //   //   }\r\n  //   // }\r\n  //   coloringFormStore.setMsg(\"error\")\r\n  // }, [])\r\n\r\n  const diagramRef = useRef();\r\n  const appendagesRef = useRef();\r\n  const {coloringFormStore, vaseStore, swanStore, figStore, basketStore} = useStores();\r\n  let modelStore;\r\n  if (coloringFormStore.model === \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model === \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model === \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model === \"basket\") modelStore = basketStore\r\n\r\n  function changeColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setColor(search);\r\n    if (!colorPalette.includes(search)){\r\n      let new_palette = colorPalette\r\n      new_palette[colorPaletteIdx] = search\r\n      setColorPalette(new_palette)\r\n      const new_idx = (colorPaletteIdx + 1) % 10\r\n      setColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  function changeDefaultColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setDefaultColor(search);\r\n    if (!dColorPalette.includes(search)){\r\n      let new_palette = dColorPalette\r\n      new_palette[dColorPaletteIdx] = search\r\n      setDColorPalette(new_palette)\r\n      const new_idx = (dColorPaletteIdx + 1) % 10\r\n      setDColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  const myDimensions = useMemo(() => modelStore.getDimensions(), []);\r\n  const { width } = useWindowDimensions();\r\n  const absolute = modelStore.maxWidth > (width-200)/21 ? true : false \r\n\r\n  let myHeight = 10000\r\n  \r\n  const colorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">pixel color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={()=> setShowPicker(!showPicker)} \r\n        style={{background: coloringFormStore.selectedColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette\">\r\n        {showPicker &&  <TwitterPicker colors={colorPalette} triangle=\"top-left\" color={coloringFormStore.selectedColor} onChangeComplete={changeColor} />}\r\n      </div>\r\n    </div>\r\n  \r\n  const defaultColorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">primary color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={() => setShowPickerDefault(!showPickerDefault)} \r\n        style={{background: coloringFormStore.defaultColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette-d\" >\r\n        {showPickerDefault &&  <TwitterPicker colors={dColorPalette} triangle=\"top-left\" color={coloringFormStore.defaultColor} onChangeComplete={changeDefaultColor} />}\r\n      </div>\r\n    </div>\r\n\r\n  const paintByPixel = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(false)}> \r\n      <p className = \"label-inside\">paint by pixel</p>\r\n    </div>\r\n  </div>\r\n\r\n  const sprayPaint = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(true)}> \r\n      <p className = \"label-inside\">spray paint</p>\r\n    </div>\r\n  </div>\r\n\r\n  const logoObject = <div className = \"logo-object\">\r\n    <p className = \"label\" >3d-o</p>\r\n    <img className = \"logo\" src={logo} onClick={() => savePics()} alt=\"\"/>\r\n    {showInfo && <div className=\"info-popup\">info here</div>}\r\n  </div>  \r\n\r\n  function savePics(){\r\n    exportComponentAsPNG(diagramRef, {fileName: \"3do-diagram\"})\r\n    exportComponentAsPNG(appendagesRef, {fileName: \"3do-diagram-appendages\"})\r\n  }\r\n\r\n  let prevPageRoute = \"\"\r\n  switch(coloringFormStore.model){\r\n    case \"vase\": \r\n      prevPageRoute = \"/create-vase\"\r\n      break;\r\n    case \"swan\": \r\n      prevPageRoute = \"/create-swan\"\r\n      break;\r\n    case \"fig\":\r\n      prevPageRoute = \"/create-fig\"\r\n      break;\r\n    case \"basket\":\r\n      prevPageRoute = \"/create-basket\"\r\n      break;\r\n  }\r\n\r\n  const backButton = \r\n  <div className = \"back\">\r\n    <Link delay={0} to={prevPageRoute} replace={false}>\r\n      <div className = \"nav\"> \r\n        <IoChevronBack size={25} style={{color: 'white'}}/>\r\n      </div>\r\n    </Link>\r\n  </div>\r\n\r\n\r\n  const nextButton = \r\n  <div className = \"next\">\r\n    <DelayLink delay={0} to=\"/result\" clickAction={nextPage} replace={false}>\r\n      <div className = \"nav\"> \r\n          <IoChevronForward size={25} style={{color: 'white'}}/>\r\n      </div>\r\n    </DelayLink>\r\n  </div>\r\n\r\n  function nextPage(){\r\n    coloringFormStore.setMsg(true)\r\n    coloringFormStore.exportComponent(diagramRef)\r\n    coloringFormStore.exportComponent(appendagesRef, true)\r\n    }\r\n\r\n  const clear = <div className = \"logo-object\">\r\n    <p className = \"label\">clear</p>\r\n    <div className = \"icon\"\r\n      onClick={()=> coloringFormStore.clearAll()} >\r\n      <FiTrash  size={20} style={{color: 'white'}}/>\r\n      <br />\r\n    </div>\r\n  </div>\r\n\r\n  const info = <div className = \"logo-object\">\r\n  <p className = \"label\">info</p>\r\n  <div className = \"icon\"\r\n    onClick={()=> setShowInfo(!showInfo)} \r\n    >\r\n    <AiOutlineInfo size={23} style={{color: 'white'}}/>\r\n  </div>\r\n  </div>\r\n\r\n  let caption = `${coloringFormStore.model}`\r\n  if (coloringFormStore.model === \"fig\"){\r\n    caption = \"figurine head\"\r\n  }\r\n  else if (coloringFormStore.model === \"swan\"){\r\n    caption = \"swan wings + body\"\r\n  }\r\n\r\n  function colorEntry(key, col, num){\r\n    let sheets = Math.ceil(parseInt(num)/coloringFormStore.size)\r\n    let sheetsString = \"\"\r\n    sheets > 1 ? sheetsString = \"sheets\" : sheetsString = \"sheet\"\r\n    let pieces = \"\"\r\n    parseInt(num) > 1 ? pieces = \"pieces\" : pieces = \"piece\"\r\n    return <div key={key} style={{display:'inline-block', width: '100%'}}>\r\n      \r\n      <p style={{marginTop:10, marginBottom:0, marginLeft:20, float:\"right\"}}>{num} {pieces}, {sheets} {sheetsString}</p>\r\n      <div style={{marginTop:5, marginBottom:5, borderRadius: 25, height: 35, width: 35, background: col, float:\"right\"}}></div>\r\n    </div>\r\n  }\r\n\r\n  const pc_size = modelStore.upsize ? \"1 / 16\" : \"1 / 32\"\r\n\r\n  //\"#FFE7E5\"\r\n  const stats = \r\n  <div>\r\n    <p id=\"text\">instructions + overview</p>\r\n    <div style={{width: '100%', display:'inline-block'}}>\r\n      <div id=\"text\" style={{marginTop:0, marginBottom:0, marginRight: 0, width: '500px', background: \"#FFE7E5\", float:\"left\"}}>Piece Size: <span style={{fontWeight: \"bold\"}}>{pc_size}</span></div>\r\n      <div id=\"text\" style={{marginTop:0, marginBottom:0, marginLeft: 0, width: '500px', background: \"#FFE7E5\", float:\"right\"}}>\r\n        <div>\r\n          {coloringFormStore.counter.map((col, i) => (\r\n          colorEntry(i, col[0], col[1])\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  const canvas = absolute? \r\n  <div className = \"canvas\">\r\n    <div ref = {diagramRef}>\r\n      {stats}\r\n      <OrigamiObject \r\n        caption={`${caption}`}\r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n  </div> : \r\n  <div className = \"canvas-relative\">\r\n    <div ref = {diagramRef}>\r\n      {stats}\r\n      <OrigamiObject \r\n        caption={`${caption}`}\r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <Sticky innerZ={3}>\r\n        <div className = \"toolbar\">\r\n          {backButton}\r\n          {paintByPixel}\r\n          {clear}\r\n          {colorPicker}\r\n          {logoObject}\r\n          {defaultColorPicker}\r\n          {info}\r\n          {sprayPaint}\r\n          {nextButton}\r\n        </div>\r\n      </Sticky>\r\n      <div style={{position: 'relative', overflowX:'scroll', overflowY:'hidden', height: myHeight, background:\"#FFE7E5\"}}>\r\n        {canvas}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Colouring);","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport '../App.css'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport Home from '../pages';\r\nimport Colouring from '../pages/colouring'\r\n// import makeInspectable from \"mobx-devtools-mst\";\r\nimport RootStore from \"../models/RootStore\";\r\nimport {RootStoreProvider} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst rootStore = RootStore.create()\r\n\r\n// makeInspectable(vase);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{background: \"#FFE7E5\"}}>\r\n        <RootStoreProvider value={rootStore}>\r\n          <Router>\r\n            <Switch>\r\n              <Route path='/colouring'>\r\n                {rootStore.coloringFormStore.msg === \"error\" ? <Redirect to=\"/create\"/> : <Colouring />}\r\n              </Route>\r\n              <Route path='/'>\r\n                <Home/>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </RootStoreProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\"\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById(\"root\"));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}