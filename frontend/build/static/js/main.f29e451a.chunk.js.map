{"version":3,"sources":["components/Navbar/NavbarElements.js","assets/complex-logo.png","components/Navbar/index.js","assets/transparent.png","pages/landing.js","pages/about.js","pages/learn.js","assets/logo-bg.png","assets/strawberry-slider-big.png","pages/contact.js","assets/vase.png","assets/basket.png","assets/swan.png","assets/fig.PNG","models/VaseStore.js","models/PxModel.js","models/RowModel.js","models/DrawingSectionModel.js","models/ColoringForm.js","models/BasketStore.js","models/FigurineStore.js","models/SwanStore.js","models/RootStore.js","models/RootStoreContext.js","pages/create.js","pages/gallery.js","pages/browse.js","pages/login.js","assets/paper.PNG","components/Wing/index.js","components/Swan/index.js","pages/create-swan.js","components/Vase/index.js","pages/create-vase.js","components/Basket/index.js","pages/create-basket.js","components/Figurine/index.js","pages/create-figurine.js","components/ResultVase/index.js","components/ResultFigurine/index.js","components/ResultBasket/index.js","assets/upper-banner.png","assets/lower-banner.png","pages/result.js","pages/index.js","components/Pixel/index.js","components/SpecialPixel/index.js","components/Row/index.js","components/SpecialRow/index.js","components/UntrackedPixel/index.js","components/UntrackedRow/index.js","components/TriangleSection/index.js","components/DrawingSection/index.js","components/OrigamiObject/index.js","assets/rim.png","assets/halfRim.png","assets/neck.png","components/Rim/index.js","components/UntrackedDrawingSection/index.js","components/UntrackedOrigamiObject/index.js","components/Bottom/index.js","components/Arm/index.js","components/BunnyOrHandle/index.js","components/Sphere/index.js","components/Appendages/index.js","pages/colouring.js","components/App.jsx","index.js"],"names":["Nav","styled","nav","NavLink","Link","PlainLink","NavMenu","FaBars","div","NavBtn","NavBtnLink","Navbar","to","style","height","margin","float","src","logo","alt","letterSpacing","marginRight","color","Landing","display","justifyContent","alignItems","className","About","Learn","Contact","backgroundImage","bg","backgroundPosition","straw","href","target","getCurvePointsNew","_pts","tension","numOfSegments","x","y","t1x","t2x","t1y","t2y","c1","c2","c3","c4","st","t","i","res","first_x","first_y","last_x","last_y","unshift","push","length","Math","pow","max","VaseStore","types","model","cm","dtop","d3","d2","d1","dbottom","dtop_h","d3_h","d2_h","d1_h","dbottom_h","top_rim","bottom_rim","flat_bottom","scale_h","default_color","tot_rows_per_section","optional","array","number","subsections","merged_sections","textures","string","modelDimensions","arms","ears","lid","top_handle","side_handles","actions","self","update_top_rim","update_bottom_rim","update_flat_bottom","in_to_cm","conv","round","cm_to_in","update_units","units","update_height","update_dtop","update_d3","update_d2","update_d1","update_dbottom","update_d_heights","vals","storePic","picData","clearTextures","setDefaultColor","cmToPcs","height_factor","width_factor","getDimensions","zero_diff","heights","widths","max_width","min_height_needed","diff","height_diff","temp_dbottom","curr_section","add_to_this_row","floor","actual_add","min","sub_from_this_row","actual_sub","excess_height","idx","conj_idx","next_sec_rows","pop","curr_sec_rows","splice","modelDimensions_merged","concat","apply","j","k","maxWidth","console","log","updateCurvedPts","broken","s_dtop_h","s_dbottom_h","scale_factor","s_dtop","s_dbottom","s_d1","s_d1_h","s_d2","s_d2_h","s_d3","s_d3_h","myPoints","points","new_pts","h","r","THREE","section_pts","broken_pts","broken_pts_three","lo","hi","temp","slice","curr_idx","slice_size","views","PxModel","pixelColor","oldColor","canChangeColor","inverted","setPixelColor","col","setOldColor","setCanChangeColor","val","setInverted","RowModel","rowData","offset","width","displayRowNum","preColor","addPx","create","setOffset","setWidth","setDisplayRowNum","DrawingSectionModel","drawingSectionData","increasing","addRow","setWidthHeight","w","setIncreasing","DEFAULT_PNG","fileName","type","html2CanvasOptions","saveAs","uri","filename","link","document","createElement","download","body","appendChild","click","removeChild","window","open","ColoringForm","selectedColor","defaultColor","oldDefault","preload","clear","mode","size","canvasPic","appendPic","swan_two_wings","coloringFormData","counter","totPcs","doneDefualt","msg","resultMsg","storeAppendPic","setColor","setModel","swan_one_wing","setMsg","result","preloadDefaultColor","clearAll","unsetClear","setMode","setPreload","exportComponent","node","appendage","current","Error","element","ReactDOM","findDOMNode","html2canvas","scrollY","useCORS","imageTimeout","backgroundColor","then","canvas","toDataURL","saveDiagram","addDrawingSection","addPc","clearColoringForm","updateCounter","oldCol","newCol","done","curr_val","parseInt","String","updateCounterDefault","init","count","getCurvePointsBasket","BasketStore","diameter","update_top_handle","update_side_handles","update_lid","update_diameter","s_diameter","s_diameter_h","FigurineStore","body_scale","body_height","tot_rows_head","update_ears","update_arms","d","getBrokenHeadPts","tot_theta_len","theta_start","theta_len","divisions","display_diameter","s_dtop_bottom","getCurvePointsFigurine","SwanStore","top_scale","bottom_scale","height_scale","wings","texture","update_wings","swanBodyPts","getCurvePointsSwan","RootStore","props","vaseStore","coloringFormStore","basketStore","figStore","swanStore","RootStoreContext","React","createContext","RootStoreProvider","Provider","useStores","useContext","Create","useEffect","flexDirection","fig","vase","basket","swan","Gallery","Browse","delay","clickAction","replace","Login","observer","vertices","purpose","my_vertices","useMemo","map","v","faces","onUpdate","geometry","computeFaceNormals","computeVertexNormals","z","verticesNeedUpdate","normalsNeedUpdate","image","grid","load","swan_pts","swan_body","args","PI","side","specular","shininess","bottom","rim_mesh","position","rotation","getX","angle","radius","cos","getY","sin","bottomRad","midRad","midHeight","topHeight","big_vertices","F_vertices","big_F_vertices","L_vertices","B_vertices","y_pos_wing","one_wing","shape","param","moveTo","lineTo","quadraticCurveTo","rad","depth","extrudeSettings","steps","bevelEnabled","neck_mesh","diameter_marker","useState","x_rot","changeXrot","y_rot","changeYrot","z_rot","changeZrot","dist","changeDist","handleKeyDown","event","key","preventDefault","addEventListener","removeEventListener","railStyle","borderRadius","Handle","handle","id","value","percent","getHandleProps","left","marginLeft","marginTop","zIndex","textAlign","cursor","fontFamily","fontSize","min_d","max_d","slider_diameter","rootStyle","domain","step","values","getRailProps","handles","bottom_rim_switch","onChange","options","label","selectedBackgroundColor","initialSelectedIndex","fontColor","optionBorderRadius","wings_switch","units_switch","background","camera","fov","aspect","near","far","intensity","overflow","marginBottom","onClick","top_rim_mesh","bottom_rim_mesh","flat_bottom_mesh","getInputMarker","dtop_marker","dbottom_marker","d1_marker","d2_marker","d3_marker","sliderStyle","MultiHandle","min_h","max_h","ratio","sliderHeight","slider_dtop","slider_d3","slider_d2","slider_d1","slider_dbottom","dSlider","top_rim_switch","flat_bottom_switch","curved_bottom","phi_len","CustomCircleCurve","scale","ty","tz","multiplyScalar","this","tube_scale","path","tube_rad","percent_lid","rad_lid","lid_dist","tan","deco_r","deco_dist","percent_sphere","rad_bottom","bottom_dist","lid_switch","bottom_switch","top_handle_switch","side_handles_switch","head_rad","head","bunny_ears","cat_ears","sphere_ears","bear_ears","tx","y_pos","half_side_len","bshape","ear_rad","arm_rad","x_pos","arms_switch","ears_switch","indexOf","itemsRef","useRef","insideRef","len","_","ref","el","texture_body","divs","broken_head","modelStore","canvasRef","context","getContext","px_size","defaultCol","sec_width","sec_height","fillStyle","fillRect","last_idx","c","ResultFigurine","upperbanner","lowerbanner","Home","component","CreateSwan","CreateVase","CreateBasket","CreateFigurine","formObject","borderColor","substring","applyColor","onMouseEnter","onMouseLeave","onMouseOver","borderStyle","SpecialPixel","on","num","markerNum","rounded","paddingLeft","paddingRight","pixels","SpecialRow","specialTop","specialBottom","my_dict","wing","numPx","caption","elevation","firstRowDisplay","panelRef","rows","var_offset","displayNum","swanUpper","wing_width","remainder","chest_width","ceil","back_width","wing1","wing2","chest","back","dimensions","objectRef","Array","fill","sTopCurr","sBottomCurr","curr","distribute","spacing","0","1","2","spacing_arr","sections","Rim","full","circ","rim_image","half_rim_image","neck_image","arm","bunny","end_width","num_rows","Bottom","flat","object","Arm","BunnyOrHandle","sz","w_sz","input_sz","Sphere","bottoms","rims","showInfo","setShowInfo","showPicker","setShowPicker","showPickerDefault","setShowPickerDefault","colorPaletteIdx","setColorIdx","dColorPaletteIdx","setDColorIdx","colorPalette","setColorPalette","dColorPalette","setDColorPalette","diagramRef","appendagesRef","myDimensions","absolute","colorPicker","colors","triangle","onChangeComplete","search","hex","toString","toUpperCase","includes","new_palette","defaultColorPicker","paintByPixel","sprayPaint","logoObject","exportComponentAsPNG","backButton","nextButton","info","stats","sheets","sheetsString","pieces","colorEntry","innerZ","overflowX","overflowY","rootStore","App","Component","render","getElementById"],"mappings":"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","file":"static/js/main.f29e451a.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #D14240;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // padding: 0.5rem calc((100vw - 4000px) / 2);\r\n  padding: 0.5rem;\r\n  z-index: 10;\r\n  border-radius: 30px 30px 30px 30px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  // height: 70%;\r\n  cursor: pointer;\r\n  border-radius: 30px;\r\n  margin: 5px;\r\n  border-style: solid; \r\n  border-color: #D14240;\r\n\r\n  &:hover {\r\n    // transition: all 0.2s ease-in-out;\r\n    background: #FFE7EC;\r\n    color: red;\r\n    // height: 100%;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n\r\n  &.active {\r\n    color: red;\r\n    background: #FFE7EC;\r\n    // height: 100%;\r\n    border-radius: 40px;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n`;\r\n\r\nexport const PlainLink = styled(Link)`\r\n  text-decoration:none;\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  // margin-right: 24px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 80vw; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 30px;\r\n  background: #256ce1;\r\n  // padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  width: 80px;\r\n  height: 50px;\r\n\r\n\r\n  /* Second Nav */\r\n  // margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #D14240;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/complex-logo.268ab665.png\";","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink, \r\n  PlainLink\r\n} from './NavbarElements';\r\nimport logo from \"../../assets/complex-logo.png\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <PlainLink to='/'><img style={{height: 60, margin: 20, float: 'left'}}src={logo} alt='logo' /></PlainLink>\r\n        <PlainLink to='/'>\r\n          <p style ={{letterSpacing: 3, marginRight: 100, color:\"white\", float: 'left'}}>3d-o</p>\r\n        </PlainLink>\r\n        {/* <Bars /> */}\r\n        <NavMenu>\r\n          <NavLink to='/about'>\r\n            <p style ={{letterSpacing: 2}}>about</p>\r\n          </NavLink>\r\n          <NavLink to='/learn' >\r\n            <p style ={{letterSpacing: 2}}>learn</p>\r\n          </NavLink>\r\n          <NavLink to='/create'>\r\n            <p style ={{letterSpacing: 2}}>create</p>\r\n          </NavLink>\r\n          <NavLink to='/browse'>\r\n            <p style ={{letterSpacing: 2}}>browse</p>\r\n          </NavLink>\r\n          <NavLink to='/gallery'>\r\n            <p style ={{letterSpacing: 2}}>gallery</p>\r\n          </NavLink>\r\n          <NavLink to='/contact'>\r\n            <p style ={{letterSpacing: 2}}>contact</p>\r\n          </NavLink>\r\n          <NavLink to='/login'>\r\n            <p style ={{letterSpacing: 2}}>login</p>\r\n          </NavLink>\r\n          {/* Second Nav */}\r\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n        </NavMenu>\r\n        {/* <NavBtn>\r\n          <NavBtnLink to='/signin'>Sign In</NavBtnLink>\r\n        </NavBtn> */}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/transparent.7b709eb2.png\";","import React from 'react';\r\nimport \"./create.css\"\r\nimport logo from \"../assets/transparent.png\"\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <div className = \"landing\">\r\n        <img className=\"transparent-logo\" src={logo} alt=\"\"/>\r\n        <p className=\"landing-text\">A work in progress, 3d-o is a web application I developed to combat rising COVID19 case counts. 3d-o is based on my lifelong hobby, 3d-origami. Intersecting engineering and art and the first of its kind, 3d-o promotes social distancing by engaging users in a fun, indoor activity.</p>\r\n        <p className=\"landing-text\">Try 3d-o by going to the 'create' tab!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>About</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Learn = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Learn</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Learn;","export default __webpack_public_path__ + \"static/media/logo-bg.1d8d140f.png\";","export default __webpack_public_path__ + \"static/media/strawberry-slider-big.9374e4ca.png\";","import React from 'react';\r\nimport bg from \"../assets/logo-bg.png\"\r\n// import bgOff from \"../assets/logo-bg-off.png\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport \"./create-vase.css\"\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '486px',\r\n        backgroundImage: `url(${bg})`, \r\n        backgroundPosition: \"50%\"\r\n      }}\r\n    >\r\n      <div className=\"info-box\" >\r\n        <img src={straw} alt={\"\"} className =\"straw-l\"/>\r\n        <img src={straw} alt={\"\"} className =\"straw-m\"/>\r\n        <img src={straw} alt={\"\"} className =\"straw-r\"/>\r\n        <p className = \"app-name\">3d-o<br/>engineering x art</p>\r\n        <p className = \"name\">— lina nguyen —</p>\r\n        <div className=\"left\">\r\n          <a href=\"https://www.linkedin.com/in/nlina/\" target=\"_blank\" className=\"link\">linkedin</a>\r\n          <br/>\r\n          <a href=\"https://github.com/n-lina/n-lina/raw/main/Lina%20Nguyen%20Resume.pdf\" target=\"_blank\" className=\"link\">resume</a>\r\n        </div>\r\n        <div className=\"right\">\r\n          <a href=\"https://github.com/n-lina\" target=\"_blank\" className=\"link\">github</a>\r\n          <br/>\r\n          <a href=\"mailto:linanguyen@alumni.ubc.ca\" target=\"_blank\" className=\"link\">email</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","export default __webpack_public_path__ + \"static/media/vase.19cb9836.png\";","export default __webpack_public_path__ + \"static/media/basket.6d6869d7.png\";","export default __webpack_public_path__ + \"static/media/swan.219c1002.png\";","export default __webpack_public_path__ + \"static/media/fig.3fd7ce23.PNG\";","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsNew(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[8]\r\n    const last_y = _pts[9]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(y, 0.5));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n// function getCurvePoints(pts, tension, isClosed, numOfSegments) {\r\n\r\n//     // use input value if provided, or use a default value   \r\n//     tension = (typeof tension != 'undefined') ? tension : 0.5;\r\n//     isClosed = isClosed ? isClosed : false;\r\n//     numOfSegments = numOfSegments ? numOfSegments : 16;\r\n\r\n//     var _pts = [], res = [],    // clone array\r\n//         x, y,           // our x,y coords\r\n//         t1x, t2x, t1y, t2y, // tension vectors\r\n//         c1, c2, c3, c4,     // cardinal points\r\n//         st, t, i;       // steps based on num. of segments\r\n\r\n//     // clone array so we don't change the original\r\n//     //\r\n//     _pts = pts.slice(0);\r\n\r\n//     // The algorithm require a previous and next point to the actual point array.\r\n//     // Check if we will draw closed or open curve.\r\n//     // If closed, copy end points to beginning and first points to end\r\n//     // If open, duplicate first points to befinning, end points to end\r\n//     if (isClosed) {\r\n//         _pts.unshift(pts[pts.length - 1]);\r\n//         _pts.unshift(pts[pts.length - 2]);\r\n//         _pts.unshift(pts[pts.length - 1]);\r\n//         _pts.unshift(pts[pts.length - 2]);\r\n//         _pts.push(pts[0]);\r\n//         _pts.push(pts[1]);\r\n//     }\r\n//     else {\r\n//         _pts.unshift(pts[1]);   //copy 1. point and insert at beginning\r\n//         _pts.unshift(pts[0]);\r\n//         _pts.push(pts[pts.length - 2]); //copy last point and append\r\n//         _pts.push(pts[pts.length - 1]);\r\n//     }\r\n\r\n//     // ok, lets start..\r\n\r\n//     // 1. loop goes through point array\r\n//     // 2. loop goes through each segment between the 2 pts + 1e point before and after\r\n//     for (i=2; i < (_pts.length - 4); i+=2) {\r\n//         for (t=0; t <= numOfSegments; t++) {\r\n\r\n//             // calc tension vectors\r\n//             t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n//             t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n//             t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n//             t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n//             // calc step\r\n//             st = t / numOfSegments;\r\n\r\n//             // calc cardinals\r\n//             c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n//             c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n//             c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n//             c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n//             // calc x and y cords with common control vectors\r\n//             x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n//             y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n//             //store points in array\r\n//             res.push(x);\r\n//             res.push(y);\r\n\r\n//         }\r\n//     }\r\n\r\n//     return res;\r\n// }\r\n\r\nconst VaseStore = types\r\n  .model(\"Vase\", {\r\n    cm: true,\r\n    dtop: 20, //20\r\n    d3: 10, //10\r\n    d2: 10, //10\r\n    d1: 35, //35\r\n    dbottom: 20, //20 \r\n    dtop_h: 100, \r\n    d3_h: 90, \r\n    d2_h: 70, \r\n    d1_h: 50, \r\n    dbottom_h: 0, \r\n    height: 50,\r\n    top_rim: false, \r\n    bottom_rim: true, \r\n    flat_bottom: true, \r\n    scale_h: 36,\r\n    default_color: \"#FFFFFF\",\r\n    tot_rows_per_section: types.optional(types.array(types.number), []), // bottom to top ex. [15,19,10,10]\r\n    subsections: types.optional(types.array(types.array(types.number)),[]), // ex.[[5,4],[3,2],[1],[0]]\r\n    // vase has 4 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    merged_sections: types.optional(types.array(types.array(types.number)), []), // ex. [[0,1,2],[3]] means sections 0, 1, 2 were merged into one section; bottom to top ie. section including bottom diameter = section 0\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), []), // top to bottom ex. [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_flat_bottom(flat_bottom){\r\n        self.flat_bottom = flat_bottom\r\n    },\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop * conv)\r\n        self.d3 = Math.round(self.d3 * conv)\r\n        self.d2 = Math.round(self.d2 * conv)\r\n        self.d1 = Math.round(self.d1 * conv)\r\n        self.dbottom = Math.round(self.dbottom * conv)\r\n        self.height = Math.round(self.height * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop / conv)\r\n        self.d3 = Math.round(self.d3 / conv)\r\n        self.d2 = Math.round(self.d2 / conv)\r\n        self.d1 = Math.round(self.d1 / conv)\r\n        self.dbottom = Math.round(self.dbottom / conv)\r\n        self.height = Math.round(self.height / conv)\r\n        self.cm = false\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_d3(d3){\r\n        self.d3 = d3\r\n    }, \r\n    update_d2(d2){\r\n        self.d2 = d2\r\n    }, \r\n    update_d1(d1){\r\n        self.d1 = d1\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    },\r\n    update_d_heights(vals){\r\n        self.d3_h = vals[3]\r\n        self.d2_h = vals[2]\r\n        self.d1_h = vals[1]\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n        // console.log(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    cmToPcs(cm, height=false){\r\n        const height_factor = 0.55 // 0.5 cm height per row\r\n        const width_factor = 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(((cm/100) * self.height)/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    },\r\n    getDimensions() {\r\n        // INPUTS \r\n        // dtop: 20,\r\n        // d3: 10, \r\n        // d2: 10, \r\n        // d1: 35,\r\n        // dbottom: 20, \r\n        // dtop_h: 100, \r\n        // d3_h: 90, \r\n        // d2_h: 70, \r\n        // d1_h: 50, \r\n        // dbottom_h: 0, \r\n        // height: 50,\r\n\r\n        // OUTPUTS\r\n        // tot_rows_per_section: types.optional(types.array(types.number), [15,19,10,10]), // bottom to top \r\n        // subsections: types.optional(types.array(types.array(types.number)),[[5,4],[3,2],[1],[0]]), // bottom to top\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n\r\n        // max allowed decrease rate: -1 per 5 pcs\r\n        // max increase rate: +1 per 1 pc \r\n        // min 3 rows per section\r\n\r\n        let zero_diff = [];\r\n        let modelDimensions = []\r\n        let subsections = [[],[],[],[]]\r\n        let tot_rows_per_section = [0,0,0,0]\r\n        let merged_sections = [[0],[1],[2],[3]] // bottom to top\r\n\r\n        // convert from in to cm first \r\n        if (!self.cm) self.in_to_cm()\r\n\r\n        const dbottom_h = self.cmToPcs(self.dbottom_h, true)\r\n        const d1_h = self.cmToPcs(self.d1_h, true) // units = pieces\r\n        const d2_h = self.cmToPcs(self.d2_h, true)\r\n        const d3_h = self.cmToPcs(self.d3_h, true)\r\n        const dtop_h = self.cmToPcs(self.dtop_h, true)\r\n        const heights = [dbottom_h, d1_h, d2_h, d3_h, dtop_h]\r\n\r\n        const dtop = self.cmToPcs(self.dtop) // units = pieces\r\n        const d3 = self.cmToPcs(self.d3)\r\n        const d2 = self.cmToPcs(self.d2)\r\n        const d1 = self.cmToPcs(self.d1)\r\n        const dbottom = self.cmToPcs(self.dbottom)\r\n        const widths = [dbottom, d1, d2, d3, dtop]\r\n\r\n        let max_width = widths[0]\r\n\r\n        // getting from dbottom to d1 in d1_h pieces \r\n\r\n        for (let i = 0; i < widths.length-1; i++){\r\n            const min_height = 3\r\n            let min_height_needed = min_height\r\n            let diff = widths[i+1]-widths[i]\r\n            let height_diff = heights[i+1] - heights[i]\r\n\r\n            let temp_dbottom = widths[i]\r\n            let curr_section = []\r\n            \r\n            // decreasing, try making it more spaced out by height?\r\n            if (diff > 0){\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0){\r\n                    const add_to_this_row = Math.floor(temp_dbottom/min_height)\r\n                    const actual_add = Math.min(diff, add_to_this_row)\r\n                    diff -= actual_add \r\n                    temp_dbottom += actual_add\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom, min_height])\r\n                }\r\n            }\r\n            // increasing\r\n            else if (diff < 0){\r\n                diff = diff * -1\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0) {\r\n                    const sub_from_this_row = Math.floor(temp_dbottom/5)\r\n                    const actual_sub = Math.min(diff, sub_from_this_row)\r\n                    diff -= actual_sub\r\n                    temp_dbottom -= actual_sub\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom,min_height])\r\n                }            \r\n            }\r\n            // straight\r\n            else if (diff == 0){\r\n                min_height_needed = height_diff\r\n                curr_section.push([temp_dbottom, height_diff])\r\n                zero_diff.push(widths.length-1-1-i)\r\n            }\r\n            let excess_height = height_diff-min_height_needed\r\n            while (excess_height>0){\r\n                curr_section[excess_height%curr_section.length][1] += 1\r\n                excess_height -= 1\r\n            }\r\n            tot_rows_per_section[i] = Math.max(height_diff, min_height_needed)\r\n            modelDimensions.unshift(curr_section)    \r\n        }\r\n        for(let i = 0; i < zero_diff.length; i++){ // zero_diff is sorted in ascending order\r\n            // merge right into left so that the idx's in zero_diff are still accurate\r\n            const idx = zero_diff[i] // idx of modelDimensions\r\n            const conj_idx = tot_rows_per_section.length-1-idx // idx of tot_rows_per_section\r\n            if (zero_diff[i] > 0){\r\n                if(modelDimensions[idx-1].length > 1) { // partial merge, no section deletion\r\n                    const next_sec_last_arr = modelDimensions[idx-1].pop()\r\n                    const next_sec_rows = next_sec_last_arr[1]\r\n                    modelDimensions[idx][0][1] += next_sec_rows // the diff for this section is 0 so it only has one arr in it\r\n                    tot_rows_per_section[conj_idx] += next_sec_rows\r\n                    tot_rows_per_section[conj_idx+1] -= next_sec_rows\r\n                }\r\n                else { // full merge, section deletion\r\n                    const curr_sec_last_arr = modelDimensions[idx].pop()\r\n                    const curr_sec_rows = curr_sec_last_arr[1]\r\n                    modelDimensions[idx-1][0][1] += curr_sec_rows\r\n                    modelDimensions.splice(idx,1) // deleting the whole section, the right section\r\n                    tot_rows_per_section[conj_idx] -= curr_sec_rows // should i keep it as 0 (empty)?\r\n                    tot_rows_per_section[conj_idx+1] += curr_sec_rows\r\n                    tot_rows_per_section.splice(conj_idx, 1)\r\n                    subsections.pop()\r\n                }\r\n            }\r\n        }\r\n        var modelDimensions_merged = [].concat.apply([], modelDimensions);\r\n\r\n        let curr_section = modelDimensions_merged.length-1\r\n        for (let j = 0; j < subsections.length; j++){\r\n            for (let k = 0; k < modelDimensions[modelDimensions.length - j - 1].length; k++){\r\n                subsections[j].push(curr_section-k)\r\n            }\r\n            curr_section -= modelDimensions[modelDimensions.length - j - 1].length\r\n        }\r\n\r\n        self.maxWidth = max_width // un hard code\r\n        self.modelDimensions = modelDimensions_merged\r\n        self.subsections = subsections\r\n        self.tot_rows_per_section = tot_rows_per_section\r\n        console.log(\"tot_rows_per_section\", tot_rows_per_section)\r\n        console.log(\"subsections\", subsections)\r\n        console.log(\"modelDimensions\", modelDimensions)\r\n        // console.log(\"modelDimensions_merged\", modelDimensions_merged)\r\n        return modelDimensions_merged\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_d1 = self.d1 * scale_factor\r\n        const s_d1_h = (self.d1_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d2 = self.d2 * scale_factor\r\n        const s_d2_h = (self.d2_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d3 = self.d3 * scale_factor\r\n        const s_d3_h = (self.d3_h/100) * self.scale_h - s_dtop_h\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_d1_h,s_d1/2,s_d2_h,s_d2/2, s_d3_h,s_d3/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.4\r\n        var numOfSegments = 6\r\n        let points = [];\r\n        const new_pts = getCurvePointsNew(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] === new_pts[hi+2] && new_pts[hi+1] === new_pts[hi+3]){\r\n                    const temp = new_pts.slice(lo,hi+2)\r\n                    section_pts.push(temp)\r\n                    lo = hi + 2\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            console.log(section_pts)\r\n            for (let i=0; i<section_pts.length; i+=1){ //section_pts.length = 4\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    if (self.subsections[i].length > 1){\r\n                        // console.log(self.modelDimensions[self.subsections[i][j]][1])\r\n                        let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                        slice_size = slice_size * 2\r\n                        const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                        curr_idx += slice_size\r\n                        broken_pts.push(slice)\r\n                    } \r\n                    else {\r\n                        broken_pts.push(section_pts[i])\r\n                    }\r\n                }\r\n            }\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push(new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            \r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default VaseStore;\r\n\r\nconst VaseContext = React.createContext();\r\n\r\nexport const VaseProvider = ({ children, store }) => {\r\n    return (\r\n      <VaseContext.Provider value={store}>{children}</VaseContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useVaseStore = () => React.useContext(VaseContext);\r\n\r\nexport const withVaseStore = (Component) => (props) => {\r\n    return <Component {...props} store={useVaseStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\n\r\nconst PxModel = types\r\n  .model(\"PxModel\", {\r\n    pixelColor: \"#FFFFFF\", \r\n    oldColor: \"#FFFFFE\", \r\n    canChangeColor: true, \r\n    inverted: false\r\n  })\r\n  .actions(self => ({\r\n    setPixelColor(col){\r\n      self.pixelColor = col\r\n    }, \r\n    setOldColor(col){\r\n      self.oldColor = col\r\n    }, \r\n    setCanChangeColor(val){\r\n      self.canChangeColor = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default PxModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport PxModel from './PxModel'\r\n\r\nconst RowModel = types\r\n  .model(\"RowModel\", {\r\n    rowData: types.optional(types.array(PxModel), []),\r\n    offset: 0, \r\n    width: 0, \r\n    displayRowNum: 0,\r\n    preColor: \"#FFFFFF\"\r\n  })\r\n  .actions(self => ({\r\n    addPx(){\r\n      self.rowData.push(PxModel.create({oldColor: self.preColor, pixelColor: self.preColor}))\r\n    },\r\n    setOffset(val = 10.5){\r\n      self.offset = val\r\n    }, \r\n    setWidth(val){\r\n      self.width = val\r\n    }, \r\n    setDisplayRowNum(val){\r\n      self.displayRowNum = val\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default RowModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport RowModel from './RowModel'\r\n\r\nconst DrawingSectionModel = types\r\n  .model(\"DrawingSectionModel\", {\r\n    drawingSectionData: types.optional(types.array(RowModel), []),\r\n    width: 0, \r\n    height: 0, \r\n    increasing: false, \r\n    preColor: \"#FFFFFF\"\r\n  })\r\n  .actions(self => ({\r\n    addRow(){\r\n      self.drawingSectionData.push(RowModel.create({preColor: self.preColor}))\r\n    }, \r\n    setWidthHeight(w, h){\r\n      self.width = w\r\n      self.height = h \r\n    }, \r\n    setIncreasing(val){\r\n      self.increasing = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default DrawingSectionModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport html2canvas from 'html2canvas';\r\nimport DrawingSectionModel from './DrawingSectionModel'\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst fileType = {\r\n  PNG: 'image/png',\r\n  JPEG: 'image/jpeg',\r\n  PDF: 'application/pdf'\r\n};\r\n\r\nconst DEFAULT_PNG = {\r\n  fileName: '3do-diagram.png',\r\n  type: fileType.PNG,\r\n  html2CanvasOptions: {}\r\n};\r\n\r\nconst saveAs = (uri, filename) => {\r\n  const link = document.createElement('a');\r\n\r\n  if (typeof link.download === 'string') {\r\n      link.href = uri;\r\n      link.download = filename;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n  } else {\r\n      window.open(uri);\r\n  }\r\n};\r\n\r\nconst ColoringForm = types\r\n  .model(\"ColoringForm\", {\r\n    selectedColor: \"#FF0000\",\r\n    defaultColor: \"#FFFFFF\",\r\n    oldDefault: \"#FFFFFE\",\r\n    preload: false,\r\n    clear: false,\r\n    mode: false,\r\n    maxWidth: 53,\r\n    size: 32,\r\n    canvasPic: \"\",\r\n    appendPic: \"\",\r\n    model: \"swan\", // vase, swan, fig, basket\r\n    inverted: false,\r\n    swan_two_wings: false,\r\n    coloringFormData: types.optional(types.array(DrawingSectionModel), []), \r\n    counter: types.optional(types.array(types.array(types.string)), []),\r\n    totPcs: 0, \r\n    doneDefualt: false,\r\n    msg: \"error\", \r\n    resultMsg: \"error\"\r\n  })\r\n  .actions(self => ({\r\n    storePic(picData){\r\n      self.canvasPic = picData\r\n      return\r\n    }, \r\n    storeAppendPic(picData){\r\n      self.appendPic = picData\r\n      return\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n    setColor(col){\r\n      self.clear = false\r\n      self.selectedColor = col\r\n    },\r\n    setModel(model, swan_one_wing){\r\n      self.model = model\r\n      if (model === \"swan\"){\r\n        self.swan_two_wings = swan_one_wing\r\n      }\r\n    },\r\n    setMsg(result=false, msg=\"valid\"){\r\n      if (!result) self.msg = msg\r\n      else self.resultMsg = msg\r\n    },\r\n    preloadDefaultColor(col){\r\n      self.defaultColor = col\r\n      self.oldDefault = col\r\n    },\r\n    setDefaultColor(col){\r\n      self.doneDefualt = false\r\n      self.clear = false\r\n      self.oldDefault = self.defaultColor\r\n      self.defaultColor = col\r\n    },\r\n    clearAll(){\r\n      self.doneDefualt = false\r\n      if (self.defaultColor === \"#FFFFFF\"){\r\n        self.oldDefault = \"#FFFFFE\" \r\n        self.defaultColor = \"#FFFFFE\"\r\n      }\r\n      else {\r\n        self.oldDefault = \"#FFFFFF\" \r\n        self.defaultColor = \"#FFFFFF\"\r\n      }\r\n      self.clear = true\r\n    }, \r\n    unsetClear(){\r\n      self.clear = false\r\n    },\r\n    setMode(val){\r\n      self.clear = false\r\n      self.mode = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    },\r\n    setPreload(val=true){\r\n      self.preload = val\r\n    },\r\n    exportComponent (node, appendage=false) {\r\n      if(!node.current) {\r\n          throw new Error(\"'node' must be a RefObject\")\r\n      }\r\n      const element = ReactDOM.findDOMNode(node.current);\r\n      return html2canvas(element, {\r\n          scrollY: -window.scrollY,\r\n          useCORS: true,\r\n          // ...html2CanvasOptions\r\n          imageTimeout: 0,\r\n          backgroundColor: \"#FFFFFF\"\r\n      }).then(canvas => {\r\n          // self.canvasPic = canvas.toDataURL(DEFAULT_PNG, 0.1)\r\n          appendage? self.storeAppendPic(canvas.toDataURL(DEFAULT_PNG, 0.1)): self.storePic(canvas.toDataURL(DEFAULT_PNG, 0.1))\r\n      });\r\n    },\r\n    saveDiagram () {\r\n      saveAs(self.canvasPic, \"3do-diagram\")\r\n      saveAs(self.appendPic, \"3do-diagram-appendages\")\r\n      self.resultMsg = \"error\"\r\n    },\r\n    addDrawingSection(){\r\n      self.coloringFormData.push(DrawingSectionModel.create({preColor: self.defaultColor}))\r\n    }, \r\n    addPc(){\r\n      self.totPcs += 1 \r\n    },\r\n    clearColoringForm(){\r\n      self.coloringFormData = []\r\n      self.counter = []\r\n      self.totPcs = 0\r\n      self.selectedColor = \"#FF0000\"\r\n      self.defaultColor = \"#FFFFFF\"\r\n      self.oldDefault = \"#FFFFFE\"\r\n      self.mode = false\r\n      self.doneDefualt = false\r\n      self.canvasPic = \"\"\r\n      self.appendPic = \"\"\r\n      self.inverted = false\r\n      self.swan_two_wings = false\r\n      self.preload = false\r\n      // self.maxWidth = ??\r\n      // self.size = ??\r\n      // self.model = ??\r\n      // error messages dealt with seperately\r\n    },\r\n    updateCounter(oldCol, newCol){\r\n      let done = false\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        const curr_val = parseInt(self.counter[i][1])\r\n        if (self.counter[i][0] === oldCol){\r\n          if (curr_val <= 1){\r\n            self.counter.splice(i,1)\r\n          }\r\n          else self.counter[i][1] = String(curr_val - 1)\r\n        }\r\n      }\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        const curr_val = parseInt(self.counter[i][1])\r\n        if (self.counter[i][0] === newCol){\r\n          done = true\r\n          self.counter[i][1] = String(curr_val + 1)\r\n        }\r\n      }\r\n      if (!done) {\r\n        self.counter.push([newCol, \"1\"])\r\n      }\r\n    }, \r\n    updateCounterDefault(init=false, clear=false){\r\n      if (self.doneDefualt) return\r\n      if (init) {\r\n        self.counter =[[self.defaultColor, String(self.totPcs)]]\r\n        if (clear) self.doneDefualt = true\r\n        return\r\n      }\r\n      let done = false\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        if (self.counter[i][0] === self.oldDefault){\r\n          self.counter[i][0] = self.defaultColor\r\n          done = true\r\n        }\r\n      }\r\n      self.doneDefualt = true\r\n      if (!done) return\r\n      let count = 0 \r\n      let idx = 0\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        if (self.counter[i][0] === self.defaultColor){\r\n          count += 1 \r\n          if (count === 1){\r\n            idx = i \r\n          }\r\n          else if (count === 2){ // merging by adding both to 1st encounter and deleting 2nd one\r\n            self.counter[idx][1] = String(parseInt(self.counter[idx][1]) + parseInt(self.counter[i][1]))\r\n            self.counter.splice(i,1)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default ColoringForm;\r\n","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsBasket(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst BasketStore = types\r\n  .model(\"Basket\", {\r\n    cm: true,\r\n    height: 20, \r\n    diameter: 34, \r\n    dtop: 20, \r\n    dbottom: 20,\r\n    top_rim: true, \r\n    bottom_rim: true, \r\n    lid: true, \r\n    top_handle: true, \r\n    side_handles: false, \r\n    scale_h: 15,\r\n    flat_bottom: false, \r\n    default_color: \"#FFFFFF\",\r\n    tot_rows_per_section: types.optional(types.array(types.number), [15,29]), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[[4,3],[2,1,0]]), \r\n    // basket has 2 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[53,10],[40,10],[28,9],[16,10],[13,5]]),\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\" \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_top_handle(top_handle){\r\n        self.top_handle = top_handle\r\n    },\r\n    update_side_handles(side_handles){\r\n        self.side_handles = side_handles\r\n    },\r\n    update_lid(lid){\r\n        self.lid = lid \r\n    },\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop * conv)\r\n        self.diameter = Math.round(self.diameter * conv)\r\n        self.dbottom = Math.round(self.dbottom * conv)\r\n        self.height = Math.round(self.height * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop / conv)\r\n        self.diameter = Math.round(self.diameter / conv)\r\n        self.dbottom = Math.round(self.dbottom / conv)\r\n        self.height = Math.round(self.height / conv)\r\n        self.cm = false\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_diameter(diameter){\r\n        self.diameter = diameter\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    }, \r\n    update_flat_bottom(val) {\r\n        self.flat_bottom = val\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53\r\n        return self.modelDimensions\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_diameter = self.diameter * scale_factor\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.8\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsBasket(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] == new_pts[hi+2] && new_pts[hi+1] == new_pts[hi+3]){\r\n                    const temp = new_pts.slice(lo,hi+2)\r\n                    section_pts.push(temp)\r\n                    lo = hi + 2\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            for (let i=0; i<2; i+=1){ //section_pts.length = 4\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    if (self.subsections[i].length > 1){\r\n                        // console.log(self.modelDimensions[self.subsections[i][j]][1])\r\n                        let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                        slice_size = slice_size * 2\r\n                        const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                        curr_idx += slice_size\r\n                        broken_pts.push(slice)\r\n                    } \r\n                    else {\r\n                        broken_pts.push(section_pts[i])\r\n                    }\r\n                }\r\n            }\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push( new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            \r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default BasketStore;\r\n\r\nconst BasketContext = React.createContext();\r\n\r\nexport const BasketProvider = ({ children, store }) => {\r\n    return (\r\n      <BasketContext.Provider value={store}>{children}</BasketContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useBasketStore = () => React.useContext(BasketContext);\r\n\r\nexport const withBasketStore = (Component) => (props) => {\r\n    return <Component {...props} store={useBasketStore()} />;\r\n  };","import {types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsFigurine(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst FigurineStore = types\r\n  .model(\"Figurine\", {\r\n    cm: true,\r\n    diameter: 13,\r\n    arms: true, \r\n    ears: \"bear\", // bear, bunny, cat, sphere\r\n    body_scale: 0.7,\r\n    body_height: 0.35,\r\n    default_color: \"#FFFFFF\",\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    tot_rows_head: 33,\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[30,12],[40,11],[53,10],[40,10]]), // last = body\r\n    // unused, only for consistency: \r\n    flat_bottom: false, \r\n    top_rim: false, \r\n    bottom_rim: false, \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_ears(val){\r\n        self.ears = val\r\n    },\r\n    update_arms(val){\r\n        self.arms = val\r\n    },\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter / conv)\r\n        self.cm = false\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    getDimensions() {\r\n        self.maxWidth = 53\r\n        return self.modelDimensions\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getBrokenHeadPts(tot_theta_len){\r\n        let theta_start = 0 \r\n        let theta_len = 0\r\n        let divisions = []\r\n        for (let i = 0; i < self.modelDimensions.length-1; i++){\r\n            const num_rows = self.modelDimensions[i][1]\r\n            const ratio = num_rows/self.tot_rows_head\r\n            theta_len = ratio * tot_theta_len\r\n            divisions.push([theta_start, theta_len])\r\n            theta_start += theta_len\r\n        }\r\n        return divisions\r\n    },\r\n    updateCurvedPts(){\r\n        let display_diameter = self.diameter\r\n        if (!self.cm){\r\n            display_diameter = Math.round(display_diameter * 2.54)\r\n        }\r\n        const s_dtop_h = display_diameter * self.body_height\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n\r\n        const s_dtop_bottom = display_diameter * self.body_scale\r\n\r\n        const s_diameter = display_diameter\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dtop_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop_bottom/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsFigurine(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    },\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default FigurineStore;\r\n\r\nconst FigurineContext = React.createContext();\r\n\r\nexport const FigurineProvider = ({ children, store }) => {\r\n    return (\r\n      <FigurineContext.Provider value={store}>{children}</FigurineContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useFigurineStore = () => React.useContext(FigurineContext);\r\n\r\nexport const withFigurineStore = (Component) => (props) => {\r\n    return <Component {...props} store={useFigurineStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsSwan(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst SwanStore = types\r\n  .model(\"Swan\", {\r\n    cm: true,\r\n    diameter: 16,\r\n    body_height: 0.35,\r\n    top_scale: 1,\r\n    bottom_scale:0.6, \r\n    height_scale: 0.4,\r\n    default_color: \"#FFFFFF\", \r\n    wings: true, // true = two wings\r\n    bottom_rim: true,\r\n    texture: \"\", \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[8, 2]]), // top to bottom\r\n    // unused, only for consistency: \r\n    flat_bottom: false,\r\n    top_rim: false, \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter / conv)\r\n        self.cm = false\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_wings(val){\r\n        self.wings = val\r\n    },\r\n    update_bottom_rim(val){\r\n        self.bottom_rim = val\r\n    },\r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    storePic(picData){\r\n        self.texture = picData\r\n    },\r\n    clearTextures(){\r\n        self.texture = \"\"\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53 // un hard code\r\n        // calculations\r\n        return self.modelDimensions\r\n    },\r\n    swanBodyPts(){\r\n        let display_diameter = self.diameter\r\n        if (!self.cm){\r\n            display_diameter = Math.round(display_diameter * 2.54)\r\n        }\r\n        const s_dtop_h = display_diameter * self.height_scale\r\n        const s_dbottom_h = -1 * s_dtop_h * 0.8\r\n\r\n        const s_bottom = display_diameter * self.bottom_scale\r\n        const s_top = display_diameter * self.top_scale\r\n\r\n        const s_diameter = display_diameter\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_top/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsSwan(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default SwanStore;\r\n\r\nconst SwanContext = React.createContext();\r\n\r\nexport const SwanProvider = ({ children, store }) => {\r\n    return (\r\n      <SwanContext.Provider value={store}>{children}</SwanContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useSwanStore = () => React.useContext(SwanContext);\r\n\r\nexport const withSwanStore = (Component) => (props) => {\r\n    return <Component {...props} store={useSwanStore()} />;\r\n  };","import VaseStore from \"./VaseStore\"\r\nimport ColoringForm from \"./ColoringForm\"\r\nimport BasketStore from \"./BasketStore\"\r\nimport FigurineStore from \"./FigurineStore\"\r\nimport SwanStore from \"./SwanStore\"\r\nimport { types } from \"mobx-state-tree\";\r\n\r\n/**\r\n * A RootStore model.\r\n */\r\n// prettier-ignore\r\nconst RootStore = types.model(\"RootStore\").props({\r\n  vaseStore: types.optional(VaseStore, {}),\r\n  coloringFormStore: types.optional(ColoringForm, {}),\r\n  basketStore: types.optional(BasketStore, {}),\r\n  figStore: types.optional(FigurineStore, {}),\r\n  swanStore: types.optional(SwanStore, {}),\r\n});\r\n\r\nexport default RootStore;\r\n\r\n","import React, { createContext, useContext } from \"react\";\r\nimport RootStore from \"./RootStore\";\r\n\r\n/**\r\n * Create a context we can use to\r\n * - Provide access to our stores from our root component\r\n * - Consume stores in our screens (or other components, though it's\r\n *   preferable to just connect screens)\r\n */\r\n// const RootStoreContext = createContext();\r\n\r\n// /**\r\n//  * The provider our root component will use to expose the root store\r\n//  */\r\n// export const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n// /**\r\n//  * A hook that screens can use to gain access to our stores, with\r\n//  * `const { someStore, someOtherStore } = useStores()`,\r\n//  * or less likely: `const rootStore = useStores()`\r\n//  */\r\n// export const useStores = () => useContext(RootStoreContext);\r\n\r\n//------------------------------------------------------------------\r\n\r\nconst RootStoreContext = React.createContext();\r\n\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n\r\n// export const RootStoreProvider = ({ children, store }) => {\r\n//     return (\r\n//       <RootStoreContext.Provider value={store}>{children}</RootStoreContext.Provider>\r\n//     );\r\n// };\r\n\r\nexport const useStores = () => React.useContext(RootStoreContext);\r\n","import React, {useEffect} from 'react';\r\nimport vase from \"../assets/vase.png\"\r\nimport basket from \"../assets/basket.png\"\r\nimport swan from \"../assets/swan.png\"\r\nimport fig from \"../assets/fig.PNG\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport {\r\n  PlainLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport \"./create.css\"\r\nimport {useStores} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst Create = () => {\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n  }, [])\r\n\r\n  const {coloringFormStore} = useStores()\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"holderTop\">\r\n      <img src={straw} alt={\"\"} className =\"leftS\"/>\r\n      <p className=\"create-text\">select a model</p>\r\n      <img src={straw} alt={\"\"} className =\"rightS\"/>\r\n      </div>\r\n      <div \r\n        style={{\r\n          flexDirection: 'row',\r\n          height: 'auto'\r\n        }}\r\n      >\r\n        <div className = \"holder\">\r\n          <PlainLink to=\"/create-figurine\">\r\n            <img alt={\"\"} src={fig} className=\"create-link\"/>\r\n            <p className=\"create-text\">• figurine •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-vase\">\r\n            <img alt={\"\"} src={vase} className=\"create-link\"/>\r\n            <p className=\"create-text\">• vase •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-basket\">\r\n            <img alt={\"\"} src={basket} className=\"create-link\"/>\r\n            <p className=\"create-text\">• basket •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-swan\">\r\n            <img alt={\"\"} src={swan} className=\"create-link\"/>\r\n            <p className=\"create-text\">• swan •</p>\r\n          </PlainLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;","import React from 'react';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Gallery</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport DelayLink from 'react-delay-link';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst Browse = () => {\r\n  const {coloringFormStore, swanStore} = useStores();\r\n\r\n  // function loadColoringPage(model){\r\n  //   if (model === \"swan\"){\r\n  //     coloringFormStore.setPreload()\r\n  //     coloringFormStore.preloadDefaultColor(\"#000000\")\r\n  //     coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  //     // set swan dimensions so SwanStore can do the calcs to getDimensions\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n    <DelayLink delay={0} to=\"/colouring\" clickAction={console.log(\"hi\")} replace={false}>\r\n      <h1>Browse</h1>\r\n    </DelayLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;","import React from 'react';\r\nimport \"./create.css\"\r\nimport logo from \"../assets/transparent.png\"\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <div>\r\n        <img className=\"transparent-logo\" src={logo} alt=\"\"/>\r\n        <p className=\"coming-soon-text\">coming soon</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/paper.2a44f726.PNG\";","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Wing = (props) => {\r\n    const {vertices, purpose} = props\r\n    const my_vertices = useMemo(() => vertices.map(v => new THREE.Vector3(...v)), [])\r\n\r\n    const faces = []\r\n    if (purpose == \"wing\"){\r\n        faces.push(\r\n            new THREE.Face3(17, 8, 7),\r\n            new THREE.Face3(16, 17, 7),\r\n            new THREE.Face3(16, 7, 6),\r\n            new THREE.Face3(15, 16, 6),\r\n            new THREE.Face3(15, 6, 5),\r\n            new THREE.Face3(14, 15, 5),\r\n            new THREE.Face3(14, 5, 4),\r\n            new THREE.Face3(13, 14, 4),\r\n            new THREE.Face3(13, 4, 3),\r\n            new THREE.Face3(12, 13, 3),\r\n            new THREE.Face3(12, 3, 2),\r\n            new THREE.Face3(11, 12, 2),\r\n            new THREE.Face3(11, 2, 1),\r\n            new THREE.Face3(10, 11, 1),\r\n            new THREE.Face3(10, 1, 0),\r\n            new THREE.Face3(9, 10, 0),\r\n            // top row \r\n            new THREE.Face3(18, 17, 16),\r\n            new THREE.Face3(18, 16, 15),\r\n            new THREE.Face3(18, 15, 14),\r\n            new THREE.Face3(18, 14, 13),\r\n            new THREE.Face3(18, 13, 12),\r\n            new THREE.Face3(18, 12, 11),\r\n            new THREE.Face3(18, 11, 10),\r\n            new THREE.Face3(18, 10, 9),\r\n        )\r\n    }\r\n    else if (purpose == \"front-back\"){\r\n        faces.push(\r\n            new THREE.Face3(5, 4, 3),\r\n            new THREE.Face3(5, 3, 2),\r\n            new THREE.Face3(5, 2, 1),\r\n            new THREE.Face3(5, 1, 0),\r\n        )\r\n    }\r\n\r\n    else if (purpose == \"one-wing\"){\r\n        faces.push(\r\n            new THREE.Face3(9, 8, 7),\r\n            new THREE.Face3(9, 7, 6),\r\n            new THREE.Face3(9, 6, 5),\r\n            new THREE.Face3(9, 5, 4),\r\n            new THREE.Face3(9, 4, 3),\r\n            new THREE.Face3(9, 3, 2),\r\n            new THREE.Face3(9, 2, 1),\r\n            new THREE.Face3(9, 1, 0),\r\n        )\r\n    }\r\n\r\n    // const uvs = [[\r\n    //     // front\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // right\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // back\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // left\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // top\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // bottom\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    // ]]\r\n\r\n    function update(geometry){\r\n        geometry.computeFaceNormals()\r\n        geometry.computeVertexNormals();\r\n        for (let i = 0; i < geometry.vertices.length; i++){\r\n            geometry.vertices[i].x = vertices[i][0]\r\n            geometry.vertices[i].y = vertices[i][1]\r\n            geometry.vertices[i].z = vertices[i][2]\r\n        }\r\n        geometry.verticesNeedUpdate = true\r\n        geometry.normalsNeedUpdate = true;\r\n    }\r\n\r\n    return (\r\n        // <geometry vertices={my_vertices} faces={faces} faceVertexUVs={uvs} onUpdate={update}/>\r\n        <geometry vertices={my_vertices} faces={faces} onUpdate={update}/>\r\n    )\r\n  }\r\n\r\nexport default observer(Wing);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\nimport Wing from \"../Wing\"\r\n\r\nconst Swan = (props) => {\r\n    const {swanStore, result} = props\r\n    const image = result ? swanStore.texture : grid\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(image), []) \r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const swan_pts = swanStore.swanBodyPts()\r\n\r\n    let display_diameter = swanStore.diameter\r\n    if (!swanStore.cm){\r\n        display_diameter = Math.round(display_diameter * 2.54)\r\n    }\r\n\r\n    const swan_body = \r\n    <group>\r\n        <mesh >\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh>\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const bottom = display_diameter * swanStore.height_scale * 0.8 * -1\r\n    const rim_mesh = <mesh position = {[0,bottom-0.1,0]} rotation = {[1.57,0,0]}> \r\n    <torusGeometry args={[(display_diameter * swanStore.bottom_scale/2)+0.1, display_diameter/70, 10, 50]}/>\r\n    <meshPhongMaterial color={result? swanStore.default_color : \"#FF7E98\"} />\r\n    </mesh>\r\n\r\n    function getX(angle, radius){\r\n        return  radius * Math.cos(angle)\r\n    }\r\n\r\n    function getY(angle, radius){\r\n        return radius * Math.sin(angle)\r\n    }\r\n\r\n    const bottomRad = display_diameter * swanStore.top_scale * 0.5\r\n    const midRad = display_diameter * swanStore.top_scale * 0.5 * 0.73\r\n    const midHeight = display_diameter * swanStore.height_scale * 1.7 * 0.5\r\n    const topHeight = display_diameter * swanStore.height_scale * 1.9\r\n\r\n    const vertices =\r\n    [\r\n        // bottom row\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [getX(Math.PI/3.7, bottomRad), 0, getY(Math.PI/3.7, bottomRad)],  // 1\r\n        [getX(Math.PI/6, bottomRad), 0, getY(Math.PI/6, bottomRad)],  // 2\r\n        [getX(Math.PI/12, bottomRad), 0, getY(Math.PI/12, bottomRad)],  // 3\r\n        [getX(0, bottomRad), 0, getY(0, bottomRad)],  // 4\r\n        [getX(Math.PI/12, bottomRad), 0, -getY(Math.PI/12, bottomRad)],  // 5\r\n        [getX(Math.PI/6, bottomRad), 0, -getY(Math.PI/6, bottomRad)],  // 6\r\n        [getX(Math.PI/3.7, bottomRad), 0, -getY(Math.PI/3.7, bottomRad)],  // 7\r\n        [getX(Math.PI/2.8, bottomRad), 0, -getY(Math.PI/2.8, bottomRad)],  // 8\r\n        // middle row\r\n        [getX(Math.PI/2.8, midRad), midHeight, getY(Math.PI/2.8, midRad)],  // 9\r\n        [getX(Math.PI/3.7, midRad), midHeight, getY(Math.PI/3.7, midRad)],  // 10\r\n        [getX(Math.PI/6, midRad), midHeight, getY(Math.PI/6, midRad)],  // 11\r\n        [getX(Math.PI/12, midRad), midHeight, getY(Math.PI/12, midRad)],  // 12\r\n        [getX(0, midRad), midHeight, getY(0, midRad)],  // 13\r\n        [getX(Math.PI/12, midRad), midHeight, -getY(Math.PI/12, midRad)],  // 14\r\n        [getX(Math.PI/6, midRad), midHeight, -getY(Math.PI/6, midRad)],  // 15\r\n        [getX(Math.PI/3.7, midRad), midHeight, -getY(Math.PI/3.7, midRad)],  // 16\r\n        [getX(Math.PI/2.8, midRad), midHeight, -getY(Math.PI/2.8, midRad)],  // 17\r\n        // heights\r\n        [bottomRad/6, topHeight, 0]  // 18\r\n    ];\r\n\r\n    const big_vertices = \r\n    [\r\n        [-getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 0\r\n        [-getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 1\r\n        [-getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 2\r\n        [-getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 3        \r\n        [getX(Math.PI/2, bottomRad), 0, -getY(Math.PI/2, bottomRad)],  // 4\r\n        [getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 5  \r\n        [getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 6\r\n        [getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 7\r\n        [getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 8\r\n        [0, topHeight*1.1, -bottomRad*1.25]  // 9\r\n    ];\r\n\r\n    const F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [-getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 3\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 4\r\n        [0, topHeight/3, bottomRad/1.3]  // 5\r\n    ];\r\n\r\n    const big_F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 0\r\n        [-getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 3\r\n        [getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 4\r\n        [0, topHeight/1.7, bottomRad/1.8]  // 5\r\n    ];\r\n\r\n    const L_vertices = []\r\n    for (let i = 0; i < vertices.length; i++){\r\n        let temp = []\r\n        temp.push(-1 * vertices[i][0],vertices[i][1],vertices[i][2])\r\n        L_vertices.push(temp)\r\n    }\r\n\r\n    const B_vertices = []\r\n    for (let i = 0; i < F_vertices.length-1; i++){\r\n        let temp = []\r\n        temp.push(F_vertices[i][0],F_vertices[i][1], -1 * F_vertices[i][2])\r\n        B_vertices.push(temp)\r\n    }\r\n    B_vertices.push([0, topHeight/4, -bottomRad * 1.1])\r\n\r\n    const y_pos_wing = display_diameter * swanStore.height_scale\r\n    const wings = \r\n    <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const one_wing = <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const shape = useMemo( () => new THREE.Shape(), [display_diameter]);\r\n    const param = display_diameter * 0.3\r\n    const t = param * 0.4\r\n    shape.moveTo(0, -param*1.3);\r\n    shape.lineTo(param*0.9, 0)\r\n    shape.quadraticCurveTo(param + param/3, param*1.5/2,param, param * 1.4)\r\n    shape.quadraticCurveTo(param/2, param * 1.9, -param/3,param)\r\n    shape.lineTo(-param/2.5, param - (1.5*t))\r\n    shape.quadraticCurveTo(param/2 , (param * 1.9) - t, param -t/1.5 , (param * 1.5) - t/1.5)\r\n    shape.quadraticCurveTo((param + param/3.5) -t/1.5, (param*1.5/2) + t/1.5, param -t/1.5, t/1.5)\r\n    \r\n    const depth = param/6\r\n\r\n    const extrudeSettings = {\r\n        steps: 100,  \r\n        depth: depth,  \r\n        bevelEnabled: false,   \r\n      };\r\n      \r\n\r\n    const offset = display_diameter * swanStore.height_scale + (param*1.3) + ((topHeight/3) * 0)\r\n    const neck_mesh = <mesh position={[-depth/2,offset,(bottomRad/1)]} rotation={[0, Math.PI/2, 0]}>\r\n        <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n        <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n    </mesh>\r\n\r\n\r\n    const diameter_marker = getInputMarker((display_diameter/2) + 0.1, 0)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            {swan_body}\r\n            {!swanStore.wings && one_wing}\r\n            {swanStore.wings && wings}\r\n            {!result && diameter_marker}\r\n            {swanStore.bottom_rim && rim_mesh}\r\n            {neck_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Swan);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Swan from \"../components/Swan\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateSwan = () => {\r\n\r\n  const { swanStore, coloringFormStore } = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  }, [swanStore.wings])\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"∧ ∧\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"∧\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 50\r\n\r\n  // in\r\n  if (!swanStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[swanStore.diameter]} onUpdate={(val) => swanStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\nconst bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_bottom_rim(val)}\r\n    options={options}\r\n    initialSelectedIndex={swanStore.bottom_rim ? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\nconst wings_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_wings(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={swanStore.wings? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => swanStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={swanStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '400px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Swan swanStore={swanStore} result={false}/>\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">wings</p>\r\n          {wings_switch}\r\n          </div>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">bottom_rim</p>\r\n          {bottom_rim_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateSwan);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport {useFrame} from \"react-three-fiber\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n// import temp from \"../../assets/tempp.png\";\r\n\r\nconst Vase = (props) => {\r\n    const {vase} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n    // texture.wrapS = THREE.MirroredRepeatWrapping;\r\n    // texture.wrapT = THREE.MirroredRepeatWrapping;\r\n    // texture.repeat.set(2, 2.6);\r\n\r\n    const s_dtop_h = vase.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vase.scale_h/vase.height\r\n\r\n    const s_dtop = Math.max(1,vase.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,vase.dbottom * scale_factor)\r\n\r\n    const s_d1 = Math.max(1, vase.d1 * scale_factor)\r\n    const s_d1_h = (vase.d1_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d2 = Math.max(1, vase.d2 * scale_factor)\r\n    const s_d2_h = (vase.d2_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d3 = Math.max(1,vase.d3 * scale_factor)\r\n    const s_d3_h = (vase.d3_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = vase.top_rim ? getInputMarker((s_dtop/2) + 0.6, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = vase.bottom_rim ? getInputMarker((s_dbottom/2) + 0.6, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const d1_marker = getInputMarker((s_d1/2) + 0.1, s_d1_h)\r\n    const d2_marker = getInputMarker((s_d2/2) + 0.1, s_d2_h)\r\n    const d3_marker = getInputMarker((s_d3/2) + 0.1, s_d3_h)\r\n\r\n    if (vase.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.3,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (vase.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.3, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    const points = vase.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vase.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {vase.top_rim && top_rim_mesh}\r\n            {vase.bottom_rim && bottom_rim_mesh}\r\n            {vase.flat_bottom && flat_bottom_mesh}\r\n            {dbottom_marker}\r\n            {d1_marker}\r\n            {d2_marker}\r\n            {d3_marker}\r\n            {dtop_marker}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Vase);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Vase from \"../components/Vase\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateVase = () => {\r\n\r\n  const { vaseStore, coloringFormStore} = useStores();\r\n  \r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"vase\")\r\n  }, [])\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  function MultiHandle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    if (id == \"$$-0\" || id == \"$$-4\"){\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 2,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 3,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n          {...getHandleProps(id)}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 4, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 100\r\n  let min_h = 10 \r\n  let max_h = 100\r\n\r\n  // in\r\n  if (!vaseStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n    max_h = Math.round(max_h/ratio)\r\n    min_h = Math.round(min_h/ratio)\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[min_h, max_h]} step={1} mode={2} values={[vaseStore.height]} onUpdate={(val) => vaseStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.dtop]} onUpdate={(val) => vaseStore.update_dtop(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d3 = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.d3]} onUpdate={(val) => vaseStore.update_d3(val[0])} >\r\n    <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d2 = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.d2]} onUpdate={(val) => vaseStore.update_d2(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d1 = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.d1]} onUpdate={(val) => vaseStore.update_d1(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.dbottom]} onUpdate={(val) => vaseStore.update_dbottom(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const dSlider = <Slider\r\n  rootStyle={sliderStyle}\r\n  domain={[0, 100]}\r\n  mode={2}\r\n  values={[0, vaseStore.d1_h, vaseStore.d2_h, vaseStore.d3_h, 100] /* three values = three handles */}\r\n  onUpdate={(val)=>vaseStore.update_d_heights(val)}\r\n  step={5}\r\n  >\r\n  <div style={railStyle} />\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <MultiHandle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const flat_bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_flat_bottom(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.flat_bottom ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={vaseStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            {/* <ambientLight intensity={0} /> */}\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.3}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n             {/* <spotLight position={[1, 10, 10]} angle={0.15} penumbra={1} /> */}\r\n            {/* <pointLight position={[-10, -10, -10]} /> */}\r\n            <Vase vase={vaseStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{background: '#FFE7E5', width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">2nd diameter</p>\r\n              {slider_d3}\r\n              <p className=\"text\">4th diameter</p>\r\n              {slider_d1}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n              <p className=\"text\">3rd diameter</p>\r\n              {slider_d2}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <p className=\"text\">diameter heights ( % )</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {dSlider}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'right', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom cover</p>\r\n            {flat_bottom_switch}\r\n          </div>\r\n          <div style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Basket = (props) => {\r\n    const {basketStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    const s_diameter = Math.max(1, basketStore.diameter * scale_factor)\r\n    const s_diameter_h = 0\r\n\r\n    // need rounded bottom shape , concave\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n    \r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = basketStore.top_rim ? getInputMarker((s_dtop/2) + 0.5, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = basketStore.bottom_rim ? getInputMarker((s_dbottom/2) + 0.5, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    const points = basketStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {diameter_marker}\r\n            {dtop_marker}\r\n            {dbottom_marker}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Basket);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Basket from \"../components/Basket\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateBasket = () => {\r\n\r\n  const { basketStore, coloringFormStore} = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"basket\")\r\n  }, [])\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 100\r\n  let min_h = 10 \r\n  let max_h = 100\r\n\r\n  // in\r\n  if (!basketStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n    max_h = Math.round(max_h/ratio)\r\n    min_h = Math.round(min_h/ratio)\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[min_h, max_h]} step={1} mode={2} values={[basketStore.height]} onUpdate={(val) => basketStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[basketStore.diameter]} onUpdate={(val) => basketStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[basketStore.dbottom]} onUpdate={(val) => basketStore.update_dbottom(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n\r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[basketStore.dtop]} onUpdate={(val) => basketStore.update_dtop(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const lid_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_lid(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.lid ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_flat_bottom(!val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.flat_bottom ? 1 : 0}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n</div>\r\n\r\n  const top_handle_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_top_handle(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.top_handle ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  const side_handles_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_side_handles(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.side_handles ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={basketStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '690px'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 100], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Basket basketStore={basketStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">middle diameter</p>\r\n              {slider_diameter}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">curved bottom</p>\r\n            {bottom_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top handle</p>\r\n            {top_handle_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">lid</p>\r\n            {lid_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">side handles</p>\r\n            {side_handles_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateBasket);","import React, {useState, useMemo} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []) \r\n\r\n    let display_diameter = figStore.diameter\r\n    if (!figStore.cm){\r\n        display_diameter = Math.round(display_diameter * 2.54)\r\n    }\r\n\r\n    const s_diameter = display_diameter \r\n    const s_diameter_h = 0\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (display_diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const head =\r\n    <group>\r\n        <mesh position={[0,(display_diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh position={[0,(display_diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.BackSide}/>\r\n        </mesh>\r\n    </group>\r\n\r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears === \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears === \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = display_diameter/7\r\n        const y_pos = (display_diameter * figStore.body_height)/2\r\n        const x_pos = (display_diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n                    break;\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {head}\r\n            {diameter_marker}\r\n            {figStore.ears === \"bear\" && bear_ears}\r\n            {figStore.ears === \"bunny\" && bunny_ears}\r\n            {figStore.ears === \"cat\" && cat_ears}\r\n            {figStore.ears === \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Figurine from \"../components/Figurine\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateFigurine = () => {\r\n\r\n  const { figStore, coloringFormStore} = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"fig\")\r\n  }, [])\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"◠ ◠\",\r\n        value: \"bear\",\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"〇 〇\",\r\n        value: \"sphere\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∧ ∧\",\r\n        value: \"cat\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∩ ∩\",\r\n        value: \"bunny\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },\r\n  ];\r\n\r\n  const ears = [\"bear\", \"sphere\", \"cat\", \"bunny\"]\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 50\r\n\r\n  // in\r\n  if (!figStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n  }\r\n  \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[figStore.diameter]} onUpdate={(val) => figStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n\r\n  const arms_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => figStore.update_arms(val)}\r\n      options={options}\r\n      initialSelectedIndex={figStore.arms ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  \r\nconst ears_switch = <div className=\"switch\"  style={{width: 360, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => figStore.update_ears(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={ears.indexOf(`${figStore.ears}`)}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n    fontSize={20}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => figStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={figStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '470px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Figurine figStore={figStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <p className=\"text\">arms</p>\r\n          {arms_switch}\r\n          <br/>\r\n          <p className=\"text\">ears</p>\r\n          {ears_switch}\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateFigurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultVase = (props) => {\r\n    const {vaseStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, vaseStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, vaseStore.modelDimensions.length)\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = vaseStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            // console.log(vaseStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n\r\n    const s_dtop_h = vaseStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vaseStore.scale_h/vaseStore.height\r\n\r\n    const s_dtop = vaseStore.dtop * scale_factor\r\n    const s_dbottom = vaseStore.dbottom * scale_factor\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    if (vaseStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.3,10,50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (vaseStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.3, 10, 50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const points = useMemo(() => vaseStore.updateCurvedPts(true), [vaseStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vaseStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshLambertMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh> \r\n            ))}\r\n            </group>\r\n            {vaseStore.top_rim && top_rim_mesh}\r\n            {vaseStore.bottom_rim && bottom_rim_mesh}\r\n            {vaseStore.flat_bottom && flat_bottom_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, figStore.modelDimensions.length-1);\r\n        insideRef.current = insideRef.current.slice(0, figStore.modelDimensions.length-1);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = figStore.modelDimensions.length-1\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            // console.log(figStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const texture_body = useMemo(() => new THREE.TextureLoader().load(figStore.textures[figStore.textures.length-1]), []) \r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (figStore.diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const divs = figStore.getBrokenHeadPts(Math.PI*theta_len)\r\n\r\n    const broken_head = \r\n    <group>\r\n        {divs.map((_, i) => (\r\n            <mesh key={i} position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        ))}\r\n        {divs.map((_, i) => (\r\n            <mesh key={i} position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => insideRef.current[i] = el} side={THREE.BackSide}/>\r\n            </mesh>\r\n        ))}\r\n    </group>\r\n    \r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears === \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears === \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = figStore.diameter/7\r\n        const y_pos = (figStore.diameter * figStore.body_height)/2\r\n        const x_pos = (figStore.diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n                    break;\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {broken_head}\r\n            {figStore.ears === \"bear\" && bear_ears}\r\n            {figStore.ears === \"bunny\" && bunny_ears}\r\n            {figStore.ears === \"cat\" && cat_ears}\r\n            {figStore.ears === \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultBasket = (props) => {\r\n    const {basketStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, basketStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, basketStore.modelDimensions.length);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = basketStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            // console.log(basketStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    // const points = basketStore.updateCurvedPts()\r\n    const points = useMemo(() => basketStore.updateCurvedPts(true), [basketStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh>\r\n            ))}\r\n            </group>   \r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultBasket);","export default __webpack_public_path__ + \"static/media/upper-banner.1523f22e.png\";","export default __webpack_public_path__ + \"static/media/lower-banner.94f2cf86.png\";","import React, {useEffect, useRef} from 'react';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport { observer } from \"mobx-react\";\r\nimport  ResultVase  from \"../components/ResultVase\"\r\nimport  Swan  from \"../components/Swan\"\r\nimport  ResultFigurine  from \"../components/ResultFigurine\"\r\nimport  ResultBasket  from \"../components/ResultBasket\"\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport './create-vase.css'\r\nimport upperbanner from \"../assets/upper-banner.png\"\r\nimport lowerbanner from \"../assets/lower-banner.png\"\r\nimport { FiDownload } from \"react-icons/fi\";\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst Result = () => {\r\n  const {coloringFormStore, vaseStore, swanStore, basketStore, figStore} = useStores()\r\n  \r\n  const canvasRef = useRef()\r\n  let modelStore; \r\n  if (coloringFormStore.model === \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model === \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model === \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model === \"basket\") modelStore = basketStore\r\n  modelStore.setDefaultColor(coloringFormStore.defaultColor)\r\n  modelStore.clearTextures()\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext(\"2d\")\r\n    // console.log(coloringFormStore.coloringFormData)\r\n    // console.log(coloringFormStore.coloringFormData[0].drawingSectionData[0].rowData[0].pixelColor)\r\n    // console.log(\"Num sections\", coloringFormStore.coloringFormData.length)\r\n    const px_size = 20\r\n    const half_px_width = px_size/2\r\n    const defaultCol = coloringFormStore.defaultColor;\r\n\r\n    for (let i = 0; i < coloringFormStore.coloringFormData.length; i++){\r\n      const sec_width = modelStore.modelDimensions[i][0]\r\n      const sec_height = modelStore.modelDimensions[i][1] \r\n      canvas.width = sec_width * px_size\r\n      canvas.height = sec_height * px_size\r\n      context.fillStyle = defaultCol\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n      for (let r = 0; r < sec_height; r++){\r\n        let offset = 0 \r\n        if (coloringFormStore.coloringFormData[i].drawingSectionData[r].offset){\r\n          offset = half_px_width\r\n          const last_idx = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData.length\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[last_idx-1].pixelColor\r\n          context.fillRect(0, px_size * r, half_px_width, px_size)\r\n        }\r\n        for (let c = 0; c < sec_width; c++){\r\n          if (coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor === defaultCol) continue\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor\r\n          context.fillRect((px_size * c) + offset, px_size * r, px_size, px_size)\r\n        }\r\n      }\r\n      var texture = canvas.toDataURL(\"image/png\", 1.0)\r\n      modelStore.storePic(texture)\r\n    }\r\n    coloringFormStore.setMsg(\"error\")\r\n  }, [])\r\n\r\n  // const modelRef = useRef()  \r\n\r\n  return (\r\n    // <canvas ref={canvasRef}/> // to test texture generation\r\n    <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '600px'}}>\r\n      <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '52%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: \"80%\", borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {0.8}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {0.8}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.3} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.1} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.1} />\r\n            {coloringFormStore.model === \"vase\" && <ResultVase vaseStore={vaseStore} />}\r\n            {coloringFormStore.model === \"swan\" && <Swan swanStore={swanStore} result={true}/>}\r\n            {coloringFormStore.model === \"fig\" && <ResultFigurine figStore={figStore}/>}\r\n            {coloringFormStore.model === \"basket\" && <ResultBasket basketStore={basketStore} />}\r\n          </Canvas>\r\n        <div className=\"containerCaption\">\r\n            <div style={{height: 10}}></div>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 10}}></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"containerRight\" style={{width: '48%', height: \"100%\", overflow: 'visible', float:'right', alignItems:\"center\", justifyContent:\"center\", position: \"relative\"}}>\r\n        <canvas style={{display:\"none\"}} ref={canvasRef}/>\r\n        <img alt={\"\"} src={upperbanner} className=\"banner\" style={{marginTop: 2}}/>\r\n        <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d-o diagram <span><FiDownload size={20}/></span></p>\r\n        </div>\r\n        {/* <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d model <span><FiDownload size={20}/></span></p>\r\n        </div> */}\r\n        <img alt={\"\"} src={lowerbanner} className=\"banner-b\"  />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Result);","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport Landing from './landing';\r\nimport About from './about';\r\nimport Learn from './learn';\r\nimport Contact from './contact';\r\nimport Create from './create';\r\nimport Gallery from './gallery';\r\nimport Browse from './browse';\r\nimport Login from './login';\r\nimport CreateSwan from \"./create-swan\"\r\nimport CreateVase from \"./create-vase\"\r\nimport CreateBasket from \"./create-basket\"\r\nimport CreateFigurine from \"./create-figurine\"\r\nimport Result from \"./result\"\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst Home = () => {\r\n\r\n  const {coloringFormStore} = useStores();\r\n\r\n  return (\r\n  <div className=\"Background\">\r\n    <div className=\"InnerApp\"> \r\n      <Navbar/>\r\n      <Switch>\r\n        <Route path='/about' component={About} />\r\n        <Route path='/create' component={Create} />\r\n        <Route path='/learn' component={Learn} />\r\n        <Route path='/contact' component={Contact} />\r\n        <Route path='/gallery' component={Gallery} />\r\n        <Route path='/browse' component={Browse} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/create-swan' component={CreateSwan} />\r\n        <Route path='/create-vase' component={CreateVase} />\r\n        <Route path='/create-basket' component={CreateBasket} />\r\n        <Route path='/create-figurine' component={CreateFigurine} />\r\n        {/* <Route path='/result' component={Result} /> */}\r\n        <Route path='/result'>\r\n          {coloringFormStore.resultMsg === \"error\" ? <Redirect to=\"/create\"/> : <Result />}\r\n        </Route>\r\n        <Route path='/' component={Landing}/>\r\n      </Switch>\r\n    </div>\r\n    <p style={{marginBottom: 30, marginTop: 20, letterSpacing: 1.5, color: \"#E33937\", fontSize:13}}>lina nguyen 🍓 2021</p>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect} from \"react\";\r\nimport \"./pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Pixel = (props) => {\r\n  const {formObject, PxModel} = props;\r\n\r\n  function borderColor() {\r\n    var color = PxModel.pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true)\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(PxModel.pixelColor === formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n    if (PxModel.pixelColor !== PxModel.oldColor){\r\n      formObject.updateCounter(PxModel.oldColor, PxModel.pixelColor)\r\n      PxModel.setOldColor(PxModel.pixelColor)\r\n    } \r\n    PxModel.setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    PxModel.setOldColor(PxModel.pixelColor);\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (PxModel.canChangeColor) {\r\n      PxModel.setPixelColor(PxModel.oldColor);\r\n    }\r\n\r\n    PxModel.setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: PxModel.pixelColor, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {PxModel.inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(Pixel);","import React, { useState } from \"react\";\r\nimport \"./specialPixel.css\";\r\n\r\nexport default function SpecialPixel(props) {\r\n  const {on, num, markerNum, displayRowNum, rounded} = props;\r\n\r\n  if (on){\r\n    if (markerNum){\r\n      return (\r\n        <div\r\n          className=\"specialPixelOn\"\r\n        ><p style={{marginTop: -4, fontSize: 10, marginLeft: -1.1, position:'absolute', background: \"#FF6C7B\", paddingLeft: 2.5, paddingRight:2.5, borderRadius:6, color:\"white\"}}> {markerNum}</p></div>\r\n      );\r\n    } else {\r\n      if (rounded){\r\n        return (\r\n          <div className=\"roundedRight\"\r\n          ></div>\r\n        );\r\n      }\r\n      else{\r\n        return (\r\n          <div className=\"specialPixelOn\"\r\n          ></div>\r\n        );\r\n      }\r\n    }\r\n  } \r\n  else {\r\n    if (displayRowNum){\r\n      return (\r\n        <div\r\n          className=\"rowMarkerPixel\"\r\n        >\r\n          <p style={{fontSize:9, marginLeft: 5, marginTop:-0.5, position:'absolute'}}>{displayRowNum}</p>\r\n          </div>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <div\r\n          className=\"specialPixelOff\"\r\n        >\r\n          <p style={{fontSize:10, marginLeft: 4, marginTop: -4, position:'absolute'}}>{num}</p>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n}","import React, {useEffect} from \"react\";\r\nimport \"./row.css\";\r\nimport Pixel from \"../Pixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst Row = (props) => {\r\n  const {formObject, RowModel} = props;\r\n  let pixels = [];\r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  if (RowModel.rowData.length == 0){\r\n    for (let i = 0; i < RowModel.width; i++) {\r\n      RowModel.addPx()\r\n    }\r\n  }\r\n  for (let i = 0; i < RowModel.width; i++) {\r\n    if(formObject.inverted) RowModel.rowData[i].setInverted()\r\n    pixels.push(<Pixel key={i} formObject={formObject} PxModel={RowModel.rowData[i]}/>);\r\n  }\r\n\r\n  pixels.push(<SpecialPixel key={RowModel.width} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  return <div style={{marginLeft: RowModel.offset}} className=\"row\">{pixels}</div>;\r\n}\r\n\r\nexport default observer(Row)","import React from \"react\";\r\nimport \"./specialRow.css\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\n\r\nexport default function SpecialRow(props) {\r\n  const { width, offset, specialTop, specialBottom } = props;\r\n\r\n  let pixels = [];\r\n\r\n  const my_dict = specialBottom ? specialBottom : specialTop\r\n  let count = 0 \r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} num={\"\"}/>)\r\n\r\n  for (let i = 0; i < width; i++) {\r\n    if (i in my_dict){\r\n      if (my_dict[i] == 1){\r\n        count += 1\r\n        pixels.push(<SpecialPixel key={i} on={true} markerNum={count}/>);\r\n      }\r\n      else if (my_dict[i] == -1){\r\n        pixels.push(<SpecialPixel key={i} on={true} rounded={true}/>);\r\n      }\r\n      else if (i == width-1 && my_dict[i] == 0){\r\n        pixels[0] = <SpecialPixel key={i} on={true}/>\r\n      }\r\n      else{\r\n        pixels.push(<SpecialPixel key={i} on={true}/>);\r\n      }\r\n    }\r\n    else{\r\n        pixels.push(<SpecialPixel key={i} on={false} num = {i+1}/>);\r\n    }\r\n  }\r\n\r\n  return <div style={{marginLeft: offset}} className=\"specialRow\">{pixels}</div>;\r\n}","import React, { useEffect, useState, useRef} from \"react\";\r\nimport \"../Pixel/pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedPixel = (props) => {\r\n  const {formObject, inverted} = props;\r\n\r\n  const [pixelColor, setPixelColor] = useState(formObject.defaultColor);\r\n  const [oldColor, setOldColor] = useState(pixelColor);\r\n  const [canChangeColor, setCanChangeColor] = useState(true);\r\n\r\n  function borderColor() {\r\n    var color = pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n  \r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true, true)\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(pixelColor == formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    setPixelColor(formObject.selectedColor);\r\n    if (pixelColor != oldColor){\r\n      formObject.updateCounter(oldColor, pixelColor)\r\n      setOldColor(pixelColor)\r\n    }\r\n    setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    setOldColor(pixelColor);\r\n    setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (canChangeColor) {\r\n      setPixelColor(oldColor);\r\n    }\r\n\r\n    setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: pixelColor, width: 20, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(UntrackedPixel);","import React, {useEffect} from \"react\";\r\nimport \"../Row/row.css\";\r\nimport UntrackedPixel from \"../UntrackedPixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst UntrackedRow = (props) => {\r\n  const {wing, formObject, numPx, offset, display, inverted} = props;\r\n  let pixels = [];\r\n\r\n  if(display) pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={display}/>)\r\n\r\n  for (let i = 0; i < numPx; i++) {\r\n    pixels.push(<UntrackedPixel key={i} formObject={formObject} inverted={inverted} />);\r\n  }\r\n\r\n  if (!wing) pixels.push(<SpecialPixel key={numPx} on={false} displayRowNum={display} />)\r\n  \r\n  return <div style={{marginLeft: offset}} className=\"row\">{pixels}</div>;\r\n  \r\n}\r\n\r\nexport default observer(UntrackedRow)","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst TriangleSection = (props) => {\r\n  const {wing, caption, width, formObject, elevation, firstRowDisplay, inverted} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = [];\r\n  \r\n  // height = width \r\n  const px_width = 21 // 21 is the px width w border\r\n  for (let i = 0; i < width; i++) {\r\n    let var_offset = (0.5*(px_width)*(width-i-1))\r\n    let displayNum = elevation+width-i\r\n    if (!firstRowDisplay){\r\n      if (i < width - 1) var_offset = (0.5*(px_width)*(width-i-3))\r\n      else displayNum = false\r\n    }\r\n    rows.push(<UntrackedRow key={i} wing={wing} numPx={i+1} offset={var_offset} formObject={formObject} display={displayNum} inverted={inverted}/>);\r\n  }\r\n\r\n  return (\r\n    <div id=\"triangleSection\">\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 0, marginLeft: 0, marginRight:0}}>\r\n        {caption && <p id=\"text\">{caption}</p>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(TriangleSection)","  \r\nimport React, { useRef} from \"react\";\r\nimport \"./drawingSection.css\";\r\nimport Row from \"../Row\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport TriangleSection from \"../TriangleSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst DrawingSection = (props) => {\r\n  const {caption, specialTop, specialBottom, formObject, DrawingSectionModel} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = []; \r\n  let swanUpper = [];\r\n\r\n  if (formObject.model === \"swan\"){\r\n    if (formObject.swan_two_wings){\r\n      const wing_width = Math.round(0.4 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - (2 * wing_width)\r\n      const chest_width = Math.ceil(remainder/2)\r\n      const back_width = Math.floor(remainder/2)\r\n      const wing1 = <TriangleSection key={0} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true}/> \r\n      const wing2 = <TriangleSection key={1} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} /> \r\n      const chest = <TriangleSection key={2} wing={true} width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} />\r\n      const back = <TriangleSection key={3} wing={true} width={back_width} formObject={formObject} elevation={DrawingSectionModel.height} inverted={true}/>\r\n      swanUpper.push(wing1, chest, wing2, back)\r\n    } \r\n    else {\r\n      const wing_width = Math.round(0.75 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - wing_width\r\n      const chest_width = remainder - 2\r\n      const wing = <TriangleSection key={0} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} inverted={true}/> \r\n      const chest = <TriangleSection key={1} wing={true} width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} />\r\n      swanUpper.push(wing, chest)\r\n    }\r\n  }\r\n\r\n  if (formObject.model != \"swan\") rows.push(<SpecialRow key={-1} offset={0} width={DrawingSectionModel.width} specialTop={specialTop} />)\r\n  \r\n  if(DrawingSectionModel.drawingSectionData.length === 0){\r\n    for (let i = 0; i < DrawingSectionModel.height; i++){\r\n      DrawingSectionModel.addRow()\r\n    }\r\n  }\r\n  for (let i = 0; i < DrawingSectionModel.height; i++) {\r\n    DrawingSectionModel.drawingSectionData[i].setWidth(DrawingSectionModel.width)\r\n    DrawingSectionModel.drawingSectionData[i].setDisplayRowNum(DrawingSectionModel.height-i)\r\n    if (i%2 === 1){\r\n      DrawingSectionModel.drawingSectionData[i].setOffset()\r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n    else{ \r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n  }\r\n  \r\n  if(DrawingSectionModel.increasing){\r\n    if (DrawingSectionModel.height%2 === 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5*2} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (DrawingSectionModel.height%2 === 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={0} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {formObject.model === \"swan\" && <div style={{display:\"flex\", alignItems:\"flex-end\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n          {swanUpper}\r\n        </div>}\r\n        {caption && <p id=\"text\">{caption}</p>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(DrawingSection)","import React, {useRef} from 'react';\r\nimport DrawingSection from \"../DrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst OrigamiObject = (props) => {\r\n    const {caption, dimensions, formObject} = props;\r\n  \r\n    const objectRef = useRef();\r\n\r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    if (formObject.model === \"swan\"){\r\n      specialTop = Array(dimensions.length).fill({})\r\n      specialBottom = Array(dimensions.length).fill({})\r\n    }\r\n    else {\r\n      if (dimensions.length > 1 && dimensions[dimensions.length-2][0] < dimensions[dimensions.length-1][0]) formObject.setInverted()\r\n\r\n      for (let i = dimensions.length-2; i >= 0; i--){\r\n        let sTopCurr = {}\r\n        let sBottomCurr = {}\r\n\r\n        const curr = dimensions[i+1][0]\r\n        const next = dimensions[i][0]\r\n        let diff = next-curr // number of pieces need to add or subtract \r\n\r\n        let distribute = 0 \r\n        let remainder = 0\r\n        let spacing = 0\r\n        if (diff === 0){\r\n          specialTop = Array(dimensions.length).fill({})\r\n          specialBottom = Array(dimensions.length).fill({})\r\n        }\r\n        else if (diff > 0){ // increasing - 2 pcs per increase\r\n          sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n          distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n          remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = -1\r\n            idx += spacing_arr[i] + 2\r\n            i += 1 \r\n          }\r\n          let last_idx = 2\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n            sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 3\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)    \r\n          increasing.unshift(true) \r\n        } \r\n        else { // decreasing \r\n          sBottomCurr = {0: 1, 1: -1}\r\n          diff = -1 * diff\r\n          distribute = curr - (3 * diff)\r\n          remainder = distribute % diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = 0\r\n            sTopCurr[idx+2] = -1\r\n            idx += spacing_arr[i] + 3\r\n            i += 1 \r\n          }\r\n          let last_idx = 1\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 2\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)  \r\n          increasing.unshift(false)\r\n        }\r\n      }\r\n      if (formObject.model === \"fig\"){\r\n        specialTop[specialTop.length-1] = {}\r\n        specialBottom[specialBottom.length-1] = {}\r\n      } \r\n      specialTop.unshift({})\r\n      specialBottom.push({})\r\n      increasing.push(false)\r\n    }\r\n\r\n    let sections = [];\r\n  \r\n    if (formObject.coloringFormData.length == 0){\r\n      for (let i = 0; i < dimensions.length; i++) {\r\n        formObject.addDrawingSection()\r\n      }\r\n    }\r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      formObject.coloringFormData[i].setWidthHeight(dimensions[i][0], dimensions[i][1])\r\n      formObject.coloringFormData[i].setIncreasing(increasing[i])\r\n      let caption = false\r\n      if (formObject.model === \"fig\" && i === dimensions.length-1) caption = \"figurine body\"\r\n      sections.push(<DrawingSection key={i} caption={caption} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} formObject={formObject} DrawingSectionModel={formObject.coloringFormData[i]} />);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        <div id=\"sections\" ref={objectRef}>\r\n          <p id=\"text\">{caption}</p>\r\n          {sections}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(OrigamiObject)","export default __webpack_public_path__ + \"static/media/rim.90d28599.png\";","export default __webpack_public_path__ + \"static/media/halfRim.934ee4ec.png\";","export default __webpack_public_path__ + \"static/media/neck.d9f33158.png\";","import React from \"react\";\r\nimport rim_image from \"../../assets/rim.png\";\r\nimport half_rim_image from \"../../assets/halfRim.png\";\r\nimport neck_image from \"../../assets/neck.png\"\r\nimport \"./rim.css\"\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\n\r\nconst Rim = (props) => {\r\n    const {swan, full, caption, circ} = props \r\n    return (\r\n        <div className=\"rimDiv\">\r\n            <p id=\"text\">{caption}</p>\r\n            {full && <img src={rim_image} className=\"rim\" />}\r\n            {!full && !swan  && <img src={half_rim_image} className=\"half_rim\" />}\r\n            {swan && <img src={neck_image} className=\"neck\" />} \r\n            <p id=\"text\">{circ} pieces</p>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Rim;","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedDrawingSection = (props) => {\r\n  const {arm, open, bunny, specialTop, specialBottom, increasing, formObject, dimensions} = props;\r\n\r\n  let rows = []; \r\n  let inverted = false\r\n\r\n  if (!bunny) rows.push(<SpecialRow key={-1} offset={0} width={dimensions[0]} specialTop={specialTop} />)\r\n  else{\r\n    const end_width = Math.floor(dimensions[0]*(0.5))\r\n    const num_rows = dimensions[0] - end_width\r\n    for (let i = 0; i < num_rows; i++){\r\n      rows.push(<UntrackedRow key={dimensions[1]+1+i} numPx={end_width+i} offset={10.5*(num_rows-i)} formObject={formObject} display={dimensions[1]+num_rows-i} inverted={inverted}/>)\r\n    }\r\n\r\n  }\r\n  \r\n  for (let i = 0; i < dimensions[1]; i++) {\r\n    arm && i == dimensions[1]-1 ? inverted = true : inverted = false\r\n    if (i%2 == 1){\r\n      let numPx = dimensions[0]\r\n      if (open) numPx -= 1\r\n      rows.push(<UntrackedRow key={i} numPx={numPx} offset={10.5} formObject={formObject} display={dimensions[1]-i} inverted={inverted}/>);\r\n    }\r\n    else{ \r\n      rows.push(<UntrackedRow key={i} numPx={dimensions[0]} offset={0} formObject={formObject} display={dimensions[1]-i} inverted={inverted}/>);\r\n    }\r\n  }\r\n  \r\n  if(increasing){\r\n    if (dimensions[1]%2 == 1){\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5*2} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (dimensions[1]%2 == 1){\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={0} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(UntrackedDrawingSection)","import React, {useRef} from 'react';\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedOrigamiObject = (props) => {\r\n    const {dimensions, formObject} = props;\r\n  \r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    for (let i = dimensions.length-2; i >= 0; i--){\r\n      let sTopCurr = {}\r\n      let sBottomCurr = {}\r\n\r\n      const curr = dimensions[i+1][0]\r\n      const next = dimensions[i][0]\r\n      let diff = next-curr // number of pieces need to add or subtract \r\n\r\n      let distribute = 0 \r\n      let remainder = 0\r\n      let spacing = 0\r\n      \r\n      if (diff == 0){\r\n        specialTop = Array(dimensions.length).fill({})\r\n        specialBottom = Array(dimensions.length).fill({})\r\n      }\r\n      else if (diff > 0){ // increasing - 2 pcs per increase\r\n        sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n        distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n        remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n        spacing = Math.floor(distribute/diff)\r\n        let spacing_arr = Array(diff).fill(spacing)\r\n        for (let i = 0; i < 2; i++){\r\n          let j = i\r\n          while (j < diff && remainder > 0){\r\n            spacing_arr[j] += 1 \r\n            remainder -= 1 \r\n            j += 2 \r\n          }\r\n        }\r\n        let i = 0 \r\n        let idx = 0 \r\n        while(i < diff){\r\n          sTopCurr[idx] = 1\r\n          sTopCurr[idx+1] = -1\r\n          idx += spacing_arr[i] + 2\r\n          i += 1 \r\n        }\r\n        let last_idx = 2\r\n        for (let i = 0; i < spacing_arr.length-1; i ++){\r\n          sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n          sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n          sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n          last_idx = last_idx + spacing_arr[i] + 3\r\n        }  \r\n        specialTop.unshift(sTopCurr)\r\n        specialBottom.unshift(sBottomCurr)    \r\n        increasing.unshift(true) \r\n      } \r\n      else { // decreasing \r\n        sBottomCurr = {0: 1, 1: -1}\r\n        diff = -1 * diff\r\n        distribute = curr - (3 * diff)\r\n        remainder = distribute % diff\r\n        spacing = Math.floor(distribute/diff)\r\n        let spacing_arr = Array(diff).fill(spacing)\r\n        for (let i = 0; i < 2; i++){\r\n          let j = i\r\n          while (j < diff && remainder > 0){\r\n            spacing_arr[j] += 1 \r\n            remainder -= 1 \r\n            j += 2 \r\n          }\r\n        }\r\n        let i = 0 \r\n        let idx = 0 \r\n        while(i < diff){\r\n          sTopCurr[idx] = 1\r\n          sTopCurr[idx+1] = 0\r\n          sTopCurr[idx+2] = -1\r\n          idx += spacing_arr[i] + 3\r\n          i += 1 \r\n        }\r\n        let last_idx = 1\r\n        for (let i = 0; i < spacing_arr.length-1; i ++){\r\n          sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n          sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n          last_idx = last_idx + spacing_arr[i] + 2\r\n        }  \r\n        specialTop.unshift(sTopCurr)\r\n        specialBottom.unshift(sBottomCurr)  \r\n        increasing.unshift(false)\r\n      }\r\n    }\r\n    specialTop.unshift({})\r\n    specialBottom.push({})\r\n    increasing.push(false)\r\n\r\n    let sections = [];\r\n  \r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      sections.push(<UntrackedDrawingSection key={i} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} increasing={increasing[i]} formObject={formObject} dimensions={dimensions[i]}/>);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        {sections}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(UntrackedOrigamiObject)","import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Bottom = (props) => {\r\n    const {flat, circ, caption, formObject} = props \r\n    let object = <div></div>\r\n    let dimensions = []\r\n\r\n    if (flat){\r\n        dimensions = [[50,12],[40,11],[42,5]] // top to bottom \r\n        object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n    }\r\n    else{\r\n        // curved bottom/lid for basket\r\n        dimensions = [[50,12],[30,11],[20,5]] // top to bottom \r\n        object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Bottom;","import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Arm = (props) => {\r\n    const {caption, size, formObject} = props;\r\n    const dimensions = [10,4] // top to bottom \r\n    const object = <UntrackedDrawingSection arm={true} specialTop = {[]} specialBottom = {[]} formObject={formObject} dimensions={dimensions}/>\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Arm;","import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst BunnyOrHandle = (props) => {\r\n    const {caption, size, formObject} = props;\r\n    let object = <div></div>\r\n    let sz = 0\r\n    let w_sz = 0\r\n    let input_sz = 0\r\n    const lim = 50\r\n\r\n    if (caption == \"bunny ear\"){\r\n        // height has to be odd number to have the base bigger\r\n        object = <UntrackedDrawingSection bunny={true} open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[size,13]} />\r\n    }\r\n    else {\r\n        sz = size*21\r\n        input_sz = Math.min(sz, lim)\r\n        w_sz = size/2 \r\n        object = <UntrackedDrawingSection open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[w_sz,input_sz]} />\r\n    }\r\n\r\n    return (    \r\n      <div>\r\n        <p id=\"text\">{caption}</p>\r\n        {object}\r\n        {sz > lim && <p id=\"text\">+ {sz-lim} more rows ...</p>}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default BunnyOrHandle;","import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Sphere = (props) => {\r\n    const {size, caption, formObject} = props \r\n    let object = <div></div>\r\n    let dimensions = []\r\n\r\n    function calc(){\r\n        return [[6,5],[8,5],[5,5]]\r\n    }\r\n\r\n    // curved Sphere/lid for basket\r\n    dimensions = calc() // top to Sphere \r\n    object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Sphere;","import React from 'react';\r\nimport { observer } from \"mobx-react\";\r\nimport Rim from \"../Rim\";\r\nimport Bottom from \"../Bottom\";\r\nimport Arm from \"../Arm\"\r\nimport BunnyOrHandle from \"../BunnyOrHandle\"\r\nimport TriangleSection from \"../TriangleSection\"\r\nimport Sphere from \"../Sphere\"\r\n\r\nconst Appendages = (props) => {\r\n    const {modelStore, formObject} = props;\r\n  \r\n    let bottoms = []\r\n    let sections = []\r\n    let rims = []\r\n    let key = 0\r\n\r\n    // top_rim, bottom_rim, flat_bottom, arms, ears, lid, top_handle, side_handles\r\n\r\n    if (modelStore.flat_bottom){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      bottoms.push(<Bottom key={key} caption={\"flat bottom\"} flat={true} circ={circ} lid={false} formObject={formObject}/>) // circ = circumfrence\r\n      key += 1\r\n    }\r\n    else if (formObject.model === \"basket\"){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      bottoms.push(<Bottom key={key} caption={\"curved bottom\"} flat={false} circ={circ} lid={false} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.lid){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      bottoms.push(<Bottom key={key} caption={\"lid\"} flat={false} circ={circ} formObject={formObject}/>)\r\n      key += 1\r\n      sections.push(<Sphere key={key} caption={\"lid handle\"} size={circ} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.top_handle){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      sections.push(<BunnyOrHandle key={key} caption={\"top handle\"} size={10} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.arms){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      sections.push(<Arm key={key} caption={\"arm\"} size={circ} formObject={formObject}/>)\r\n      key += 1\r\n      sections.push(<Arm key={key} caption={\"arm\"} size={circ} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.ears !== \"\"){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0] // make ears prop. to body circ\r\n      if (modelStore.ears === \"bear\"){\r\n        sections.push(<Rim key={key} full={false} caption={\"bear ear\"} circ={circ}/>)\r\n        key += 1\r\n        sections.push(<Rim key={key} full={false} caption={\"bear ear\"} circ={circ}/>)\r\n        key += 1 \r\n      }\r\n      else if (modelStore.ears === \"bunny\"){\r\n        sections.push(<BunnyOrHandle key={key} caption={\"bunny ear\"} size={10} formObject={formObject}/>)\r\n        key += 1\r\n        sections.push(<BunnyOrHandle key={key} caption={\"bunny ear\"} size={10} formObject={formObject}/>)\r\n      }\r\n      else if (modelStore.ears === \"sphere\"){\r\n        sections.push(<Sphere key={key} caption={\"round ear\"} size={circ} formObject={formObject}/>)\r\n        key += 1\r\n        sections.push(<Sphere key={key} caption={\"round ear\"} size={circ} formObject={formObject}/>)\r\n      }\r\n      else if (modelStore.ears === \"cat\"){\r\n        sections.push(<TriangleSection key={key} caption={\"cat ear\"} width={10} formObject={formObject} elevation={0} firstRowDisplay={true} inverted={false} />)\r\n        key += 1\r\n        sections.push(<TriangleSection key={key} caption={\"cat ear\"} width={10} formObject={formObject} elevation={0} firstRowDisplay={true} inverted={false} />)\r\n      }\r\n      key += 1\r\n    }\r\n    if (modelStore.side_handles){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      rims.push(<Rim key={key} full={false} caption={\"side handle\"} circ={circ}/>) // static picture\r\n      key += 1\r\n      rims.push(<Rim key={key} full={false} caption={\"side handle\"} circ={circ}/>) \r\n      key += 1\r\n    }\r\n    if (modelStore.top_rim){\r\n      rims.push(<Rim key={key} full={true} caption={\"top rim\"} circ={modelStore.getDimensions()[0][0]}/>) // static picture\r\n      key += 1\r\n    }\r\n    if (modelStore.bottom_rim){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      rims.push(<Rim key={key} full={true} caption={\"bottom rim\"} circ={circ}/>) // static picture\r\n      key += 1\r\n    }\r\n    if (formObject.model === \"swan\"){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      rims.push(<Rim key={key} swan={true} caption={\"neck\"} circ={circ}/>) // static picture\r\n      key += 1\r\n    }\r\n\r\n    return (\r\n      <div id=\"Appendages\">\r\n        <div style={{display:\"inline-block\", marginLeft: 10.5, marginBottom: 3}}>\r\n          {bottoms}\r\n          <div style={{display:\"flex\", alignItems:\"flex-start\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n            {sections}\r\n            {rims}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(Appendages)","import React, {useState, useRef, useEffect, useMemo} from 'react';\r\nimport { TwitterPicker } from \"react-color\";\r\nimport OrigamiObject from \"../components/OrigamiObject\";\r\nimport \"./colouringPage.css\";\r\n// import premade from \"./premade\";\r\nimport Sticky from 'react-stickynode';\r\nimport { observer } from \"mobx-react\";\r\nimport logo from \"../assets/complex-logo.png\"\r\n// import {PlainLink as Link} from '../components/Navbar/NavbarElements';\r\nimport { AiOutlineInfo } from \"react-icons/ai\";\r\nimport { FiTrash } from \"react-icons/fi\";\r\nimport { IoChevronForward, IoChevronBack } from \"react-icons/io5\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport DelayLink from 'react-delay-link';\r\nimport Appendages from \"../components/Appendages\";\r\n\r\n\r\nconst Colouring = () => {\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [showPickerDefault, setShowPickerDefault] = useState(false);\r\n  const [colorPaletteIdx, setColorIdx] = useState(0);\r\n  const [dColorPaletteIdx, setDColorIdx] = useState(0);\r\n  const [colorPalette, setColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']) \r\n  const [dColorPalette, setDColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'])\r\n  \r\n  // useEffect(() => {\r\n  //   // // coloringFormData = drawing sections\r\n  //   // // drawingSectionData = rows\r\n  //   // // rowData = pixels\r\n  //   // if (coloringFormStore.preload){\r\n  //   //   for (let i = 0; i < premade[\"swan1\"][0].length; i++){\r\n  //   //     const curr_px = premade[\"swan1\"][0][i]\r\n  //   //     coloringFormStore.coloringFormData[curr_px[0]].drawingSectionData[curr_px[1]].rowData[curr_px[2]].setPixelColor(curr_px[3])\r\n  //   //   }\r\n  //   // }\r\n  //   coloringFormStore.setMsg(\"error\")\r\n  // }, [])\r\n\r\n  const diagramRef = useRef();\r\n  const appendagesRef = useRef();\r\n  const {coloringFormStore, vaseStore, swanStore, figStore, basketStore} = useStores();\r\n  let modelStore;\r\n  if (coloringFormStore.model === \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model === \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model === \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model === \"basket\") modelStore = basketStore\r\n\r\n  function changeColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setColor(search);\r\n    if (!colorPalette.includes(search)){\r\n      let new_palette = colorPalette\r\n      new_palette[colorPaletteIdx] = search\r\n      setColorPalette(new_palette)\r\n      const new_idx = (colorPaletteIdx + 1) % 10\r\n      setColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  function changeDefaultColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setDefaultColor(search);\r\n    if (!dColorPalette.includes(search)){\r\n      let new_palette = dColorPalette\r\n      new_palette[dColorPaletteIdx] = search\r\n      setDColorPalette(new_palette)\r\n      const new_idx = (dColorPaletteIdx + 1) % 10\r\n      setDColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  const myDimensions = useMemo(() => modelStore.getDimensions(), []);\r\n  const absolute = coloringFormStore.maxWidth > 52 ? true : false \r\n\r\n  let myHeight = 10000\r\n  // const myYMargin = 20\r\n  // const px_y = 13\r\n  // const px_border = 1\r\n  // const marker_y = 20\r\n\r\n  // for (let i = 0; i < myDimensions.length; i++){\r\n  //   const y = myDimensions[i][1]\r\n  //   myHeight += (y * (px_y + px_border)) + (1.5*myYMargin) + (2*marker_y)\r\n  // }\r\n\r\n  // if (coloringFormStore.model === \"swan\"){\r\n  //   myHeight += (swanStore.modelDimensions[0][0] * 0.75 * (px_y + px_border) * 1.2)\r\n  //   myHeight += 600\r\n  // }\r\n\r\n  // else if (coloringFormStore.model === \"fig\"){\r\n  //   myHeight *= 2\r\n  // }\r\n\r\n  // if (modelStore.flat_bottom || coloringFormStore.model === \"basket\"){\r\n  //   myHeight *= 2\r\n  //   if(modelStore.lid){\r\n  //     myHeight *= 2\r\n  //   }\r\n  // }\r\n\r\n  // if ((modelStore.top_rim || modelStore.bottom_rim) && ! coloringFormStore.model === \"swan\"){\r\n  //   myHeight += 600\r\n  // }\r\n\r\n  // myHeight += coloringFormStore.counter.length * 55\r\n  // myHeight *= 2\r\n\r\n  const colorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">pixel color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={()=> setShowPicker(!showPicker)} \r\n        style={{background: coloringFormStore.selectedColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette\">\r\n        {showPicker &&  <TwitterPicker colors={colorPalette} triangle=\"top-left\" color={coloringFormStore.selectedColor} onChangeComplete={changeColor} />}\r\n      </div>\r\n    </div>\r\n  \r\n  const defaultColorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">primary color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={() => setShowPickerDefault(!showPickerDefault)} \r\n        style={{background: coloringFormStore.defaultColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette-d\" >\r\n        {showPickerDefault &&  <TwitterPicker colors={dColorPalette} triangle=\"top-left\" color={coloringFormStore.defaultColor} onChangeComplete={changeDefaultColor} />}\r\n      </div>\r\n    </div>\r\n\r\n  const paintByPixel = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(false)}> \r\n      <p className = \"label-inside\">paint by pixel</p>\r\n    </div>\r\n  </div>\r\n\r\n  const sprayPaint = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(true)}> \r\n      <p className = \"label-inside\">spray paint</p>\r\n    </div>\r\n  </div>\r\n\r\n  const logoObject = <div className = \"logo-object\">\r\n    <p className = \"label\" >3d-o</p>\r\n    <img className = \"logo\" src={logo} onClick={() => savePics()} alt=\"\"/>\r\n    {showInfo && <div className=\"info-popup\">info here</div>}\r\n  </div>  \r\n\r\n  function savePics(){\r\n    exportComponentAsPNG(diagramRef, {fileName: \"3do-diagram\"})\r\n    exportComponentAsPNG(appendagesRef, {fileName: \"3do-diagram-appendages\"})\r\n  }\r\n\r\n  const backButton = \r\n  <div className = \"back\">\r\n    <div className = \"nav\" onClick={() => console.log(\"hi\")}> \r\n      <IoChevronBack size={25} style={{color: 'white'}}/>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  const nextButton = \r\n  <div className = \"next\">\r\n    <DelayLink delay={0} to=\"/result\" clickAction={nextPage} replace={false}>\r\n      <div className = \"nav\"> \r\n          <IoChevronForward size={25} style={{color: 'white'}}/>\r\n      </div>\r\n    </DelayLink>\r\n  </div>\r\n\r\n  function nextPage(){\r\n    coloringFormStore.setMsg(true)\r\n    coloringFormStore.exportComponent(diagramRef)\r\n    coloringFormStore.exportComponent(appendagesRef, true)\r\n    }\r\n\r\n  const clear = <div className = \"logo-object\">\r\n    <p className = \"label\">clear</p>\r\n    <div className = \"icon\"\r\n      onClick={()=> coloringFormStore.clearAll()} >\r\n      <FiTrash  size={20} style={{color: 'white'}}/>\r\n      <br />\r\n    </div>\r\n  </div>\r\n\r\n  const info = <div className = \"logo-object\">\r\n  <p className = \"label\">info</p>\r\n  <div className = \"icon\"\r\n    onClick={()=> setShowInfo(!showInfo)} \r\n    >\r\n    <AiOutlineInfo size={23} style={{color: 'white'}}/>\r\n  </div>\r\n  </div>\r\n\r\n  let caption = `${coloringFormStore.model}`\r\n  if (coloringFormStore.model === \"fig\"){\r\n    caption = \"figurine head\"\r\n  }\r\n  else if (coloringFormStore.model === \"swan\"){\r\n    caption = \"swan wings + body\"\r\n  }\r\n\r\n  function colorEntry(key, col, num){\r\n    let sheets = Math.ceil(parseInt(num)/coloringFormStore.size)\r\n    let sheetsString = \"\"\r\n    sheets > 1 ? sheetsString = \"sheets\" : sheetsString = \"sheet\"\r\n    let pieces = \"\"\r\n    parseInt(num) > 1 ? pieces = \"pieces\" : pieces = \"piece\"\r\n    return <div key={key} style={{display:'inline-block', width: '100%'}}>\r\n      \r\n      <p style={{marginTop:10, marginBottom:0, marginLeft:20, float:\"right\"}}>{num} {pieces}, {sheets} {sheetsString}</p>\r\n      <div style={{marginTop:5, marginBottom:5, borderRadius: 25, height: 35, width: 35, background: col, float:\"right\"}}></div>\r\n    </div>\r\n  }\r\n\r\n  //\"#FFE7E5\"\r\n  const stats = \r\n  <div>\r\n    <p id=\"text\">instructions + overview</p>\r\n    <div style={{width: '100%', display:'inline-block'}}>\r\n      <div id=\"text\" style={{marginTop:0, marginBottom:0, marginRight: 0, width: '500px', background: \"#FFE7E5\", float:\"left\"}}>placeholder</div>\r\n      <div id=\"text\" style={{marginTop:0, marginBottom:0, marginLeft: 0, width: '500px', background: \"#FFE7E5\", float:\"right\"}}>\r\n        <div>\r\n          {coloringFormStore.counter.map((col, i) => (\r\n          colorEntry(i, col[0], col[1])\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  const canvas = absolute? \r\n  <div className = \"canvas\">\r\n    <div ref = {diagramRef}>\r\n      {stats}\r\n      <OrigamiObject \r\n        caption={`${caption}`}\r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n  </div> : \r\n  <div className = \"canvas-relative\">\r\n    <div ref = {diagramRef}>\r\n      {stats}\r\n      <OrigamiObject \r\n        caption={`${caption}`}\r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <Sticky innerZ={3}>\r\n        <div className = \"toolbar\">\r\n          {backButton}\r\n          {paintByPixel}\r\n          {clear}\r\n          {colorPicker}\r\n          {logoObject}\r\n          {defaultColorPicker}\r\n          {info}\r\n          {sprayPaint}\r\n          {nextButton}\r\n        </div>\r\n      </Sticky>\r\n      <div style={{position: 'relative', overflowX:'scroll', overflowY:'hidden', height: myHeight, background:\"#FFE7E5\"}}>\r\n        {canvas}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Colouring);","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport '../App.css'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport Home from '../pages';\r\nimport Colouring from '../pages/colouring'\r\n// import makeInspectable from \"mobx-devtools-mst\";\r\nimport RootStore from \"../models/RootStore\";\r\nimport {RootStoreProvider} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst rootStore = RootStore.create()\r\n\r\n// makeInspectable(vase);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{background: \"#FFE7E5\"}}>\r\n        <RootStoreProvider value={rootStore}>\r\n          <Router>\r\n            <Switch>\r\n              <Route path='/colouring'>\r\n                {rootStore.coloringFormStore.msg === \"error\" ? <Redirect to=\"/create\"/> : <Colouring />}\r\n              </Route>\r\n              <Route path='/'>\r\n                <Home/>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </RootStoreProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}