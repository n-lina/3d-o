{"version":3,"sources":["components/Navbar/NavbarElements.js","assets/complex-logo.png","components/Navbar/index.js","assets/transparent.png","pages/landing.js","pages/about.js","pages/learn.js","assets/logo-bg.png","assets/strawberry-slider-big.png","pages/contact.js","assets/vase.png","assets/basket.png","assets/swan.png","assets/fig.PNG","models/VaseStore.js","models/PxModel.js","models/RowModel.js","models/DrawingSectionModel.js","models/ColoringForm.js","models/BasketStore.js","models/FigurineStore.js","models/SwanStore.js","models/RootStore.js","models/RootStoreContext.js","pages/create.js","pages/gallery.js","pages/browse.js","pages/login.js","assets/paper.PNG","components/Wing/index.js","components/Swan/index.js","pages/create-swan.js","components/Vase/index.js","pages/create-vase.js","components/Basket/index.js","pages/create-basket.js","components/Figurine/index.js","pages/create-figurine.js","components/ResultVase/index.js","components/ResultFigurine/index.js","components/ResultBasket/index.js","assets/upper-banner.png","assets/lower-banner.png","pages/result.js","pages/index.js","components/Pixel/index.js","components/SpecialPixel/index.js","components/Row/index.js","components/SpecialRow/index.js","components/UntrackedPixel/index.js","components/UntrackedRow/index.js","components/TriangleSection/index.js","components/DrawingSection/index.js","components/OrigamiObject/index.js","assets/rim.png","assets/halfRim.png","assets/neck.png","components/Rim/index.js","components/UntrackedDrawingSection/index.js","components/UntrackedOrigamiObject/index.js","components/Bottom/index.js","components/Arm/index.js","components/BunnyOrHandle/index.js","components/Sphere/index.js","components/Appendages/index.js","pages/colouring.js","components/App.jsx","index.js"],"names":["Nav","styled","nav","NavLink","Link","PlainLink","NavMenu","FaBars","div","NavBtn","NavBtnLink","Navbar","to","style","height","margin","float","src","logo","alt","letterSpacing","marginRight","color","Landing","display","justifyContent","alignItems","className","About","Learn","Contact","backgroundImage","bg","backgroundPosition","straw","href","target","getCurvePointsNew","_pts","tension","numOfSegments","x","y","t1x","t2x","t1y","t2y","c1","c2","c3","c4","st","t","i","res","first_x","first_y","last_x","last_y","unshift","push","length","Math","pow","max","VaseStore","types","model","cm","dtop","d3","d2","d1","dbottom","dtop_h","d3_h","d2_h","d1_h","dbottom_h","top_rim","bottom_rim","flat_bottom","scale_h","default_color","tot_rows_per_section","optional","array","number","subsections","textures","string","modelDimensions","arms","ears","lid","top_handle","side_handles","actions","self","update_top_rim","update_bottom_rim","update_flat_bottom","update_units","units","update_height","update_dtop","update_d3","update_d2","update_d1","update_dbottom","update_d_heights","vals","storePic","picData","clearTextures","setDefaultColor","cmToPcs","height_factor","width_factor","round","getDimensions","heights","widths","max_width","min_height_needed","diff","height_diff","temp_dbottom","curr_section","add_to_this_row","floor","actual_add","min","sub_from_this_row","actual_sub","excess_height","modelDimensions_merged","concat","apply","j","k","maxWidth","console","log","updateCurvedPts","broken","s_dtop_h","s_dbottom_h","scale_factor","s_dtop","s_dbottom","s_d1","s_d1_h","s_d2","s_d2_h","s_d3","s_d3_h","myPoints","points","new_pts","h","r","THREE","section_pts","broken_pts","broken_pts_three","lo","hi","temp","slice","curr_idx","slice_size","views","PxModel","pixelColor","oldColor","canChangeColor","inverted","setPixelColor","col","setOldColor","setCanChangeColor","val","setInverted","RowModel","rowData","offset","width","displayRowNum","preColor","addPx","create","setOffset","setWidth","setDisplayRowNum","DrawingSectionModel","drawingSectionData","increasing","addRow","setWidthHeight","w","setIncreasing","DEFAULT_PNG","fileName","type","html2CanvasOptions","saveAs","uri","filename","link","document","createElement","download","body","appendChild","click","removeChild","window","open","ColoringForm","selectedColor","defaultColor","oldDefault","preload","clear","mode","size","canvasPic","appendPic","swan_two_wings","coloringFormData","counter","totPcs","doneDefualt","msg","resultMsg","storeAppendPic","setColor","setModel","swan_one_wing","setMsg","result","preloadDefaultColor","clearAll","unsetClear","setMode","setPreload","exportComponent","node","appendage","current","Error","element","ReactDOM","findDOMNode","html2canvas","scrollY","useCORS","imageTimeout","backgroundColor","then","canvas","toDataURL","saveDiagram","addDrawingSection","addPc","clearColoringForm","updateCounter","oldCol","newCol","done","curr_val","parseInt","splice","String","updateCounterDefault","init","count","idx","getCurvePointsBasket","BasketStore","diameter","update_top_handle","update_side_handles","update_lid","update_diameter","s_diameter","s_diameter_h","FigurineStore","body_scale","body_height","tot_rows_head","update_ears","update_arms","d","getBrokenHeadPts","tot_theta_len","theta_start","theta_len","divisions","s_dtop_bottom","getCurvePointsFigurine","SwanStore","top_scale","bottom_scale","height_scale","wings","texture","update_wings","swanBodyPts","s_bottom","s_top","getCurvePointsSwan","RootStore","props","vaseStore","coloringFormStore","basketStore","figStore","swanStore","RootStoreContext","React","createContext","RootStoreProvider","Provider","useStores","useContext","Create","useEffect","flexDirection","fig","vase","basket","swan","Gallery","Browse","delay","clickAction","replace","Login","observer","vertices","purpose","my_vertices","useMemo","map","v","faces","onUpdate","geometry","computeFaceNormals","computeVertexNormals","z","verticesNeedUpdate","normalsNeedUpdate","image","grid","load","swan_pts","swan_body","args","PI","side","specular","shininess","bottom","rim_mesh","position","rotation","getX","angle","radius","cos","getY","sin","bottomRad","midRad","midHeight","topHeight","big_vertices","F_vertices","big_F_vertices","L_vertices","B_vertices","y_pos_wing","one_wing","shape","param","moveTo","lineTo","quadraticCurveTo","rad","depth","extrudeSettings","steps","bevelEnabled","neck_mesh","diameter_marker","useState","x_rot","changeXrot","y_rot","changeYrot","z_rot","changeZrot","dist","changeDist","handleKeyDown","event","key","preventDefault","addEventListener","removeEventListener","railStyle","borderRadius","Handle","handle","id","value","percent","getHandleProps","left","marginLeft","marginTop","zIndex","textAlign","cursor","fontFamily","fontSize","slider_diameter","rootStyle","domain","step","values","getRailProps","handles","bottom_rim_switch","onChange","options","label","selectedBackgroundColor","initialSelectedIndex","fontColor","optionBorderRadius","wings_switch","units_switch","background","camera","fov","aspect","near","far","intensity","overflow","marginBottom","onClick","top_rim_mesh","bottom_rim_mesh","flat_bottom_mesh","getInputMarker","dtop_marker","dbottom_marker","d1_marker","d2_marker","d3_marker","sliderStyle","MultiHandle","sliderHeight","slider_dtop","slider_d3","slider_d2","slider_d1","slider_dbottom","dSlider","top_rim_switch","flat_bottom_switch","curved_bottom","phi_len","CustomCircleCurve","scale","ty","tz","multiplyScalar","this","tube_scale","path","tube_rad","percent_lid","rad_lid","lid_dist","tan","deco_r","deco_dist","percent_sphere","rad_bottom","bottom_dist","lid_switch","bottom_switch","top_handle_switch","side_handles_switch","head_rad","head","bunny_ears","cat_ears","sphere_ears","bear_ears","tx","y_pos","half_side_len","bshape","ear_rad","arm_rad","x_pos","arms_switch","ears_switch","indexOf","itemsRef","useRef","insideRef","len","_","ref","el","texture_body","divs","broken_head","modelStore","canvasRef","context","getContext","px_size","defaultCol","sec_width","sec_height","fillStyle","fillRect","last_idx","c","ResultFigurine","upperbanner","lowerbanner","Home","component","CreateSwan","CreateVase","CreateBasket","CreateFigurine","formObject","borderColor","substring","applyColor","onMouseEnter","onMouseLeave","onMouseOver","borderStyle","SpecialPixel","on","num","markerNum","rounded","paddingLeft","paddingRight","pixels","SpecialRow","specialTop","specialBottom","my_dict","wing","numPx","caption","elevation","firstRowDisplay","panelRef","rows","var_offset","displayNum","swanUpper","wing_width","remainder","chest_width","ceil","back_width","wing1","wing2","chest","back","dimensions","objectRef","Array","fill","sTopCurr","sBottomCurr","curr","distribute","spacing","0","1","2","spacing_arr","sections","Rim","full","circ","rim_image","half_rim_image","neck_image","arm","bunny","end_width","num_rows","Bottom","flat","object","Arm","BunnyOrHandle","sz","w_sz","input_sz","Sphere","bottoms","rims","showInfo","setShowInfo","showPicker","setShowPicker","showPickerDefault","setShowPickerDefault","colorPaletteIdx","setColorIdx","dColorPaletteIdx","setDColorIdx","colorPalette","setColorPalette","dColorPalette","setDColorPalette","diagramRef","appendagesRef","myDimensions","absolute","colorPicker","colors","triangle","onChangeComplete","search","hex","toString","toUpperCase","includes","new_palette","defaultColorPicker","paintByPixel","sprayPaint","logoObject","exportComponentAsPNG","backButton","nextButton","info","stats","sheets","sheetsString","pieces","colorEntry","innerZ","overflowX","overflowY","rootStore","App","Component","render","getElementById"],"mappings":"25FAIO,IAAMA,EAAMC,IAAOC,IAAV,KAeHC,EAAUF,YAAOG,UAAPH,CAAH,KAgCPI,EAAYJ,YAAOG,UAAPH,CAAH,KAmBTK,GAfOL,YAAOM,IAAPN,CAAH,KAeMA,IAAOO,IAAV,MAiBPC,EAASR,IAAOC,IAAV,KAeNQ,EAAaT,YAAOG,UAAPH,CAAH,KCtGR,MAA0B,yCCsD1BU,EA1CA,WACb,OACE,mCACE,eAACX,EAAD,WACE,cAACK,EAAD,CAAWO,GAAG,IAAd,SAAkB,qBAAKC,MAAO,CAACC,OAAQ,GAAIC,OAAQ,GAAIC,MAAO,QAAQC,IAAKC,EAAMC,IAAI,WACrF,cAACd,EAAD,CAAWO,GAAG,IAAd,SACE,mBAAGC,MAAQ,CAACO,cAAe,EAAGC,YAAa,IAAKC,MAAM,QAASN,MAAO,QAAtE,oBAGF,eAACV,EAAD,WACE,cAACH,EAAD,CAASS,GAAG,SAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,qBAEF,cAACjB,EAAD,CAASS,GAAG,SAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,qBAEF,cAACjB,EAAD,CAASS,GAAG,UAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,sBAEF,cAACjB,EAAD,CAASS,GAAG,UAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,sBAEF,cAACjB,EAAD,CAASS,GAAG,WAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,uBAEF,cAACjB,EAAD,CAASS,GAAG,WAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,uBAEF,cAACjB,EAAD,CAASS,GAAG,SAAZ,SACE,mBAAGC,MAAQ,CAACO,cAAe,GAA3B,8BCzCG,G,OAAA,IAA0B,yCCuB1BG,EAnBC,WACd,OACE,qBACEV,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQE,sBAAKa,UAAY,UAAjB,UACE,qBAAKA,UAAU,mBAAmBV,IAAKC,EAAMC,IAAI,KACjD,mBAAGQ,UAAU,eAAb,sSACA,mBAAGA,UAAU,eAAb,0DCAOC,EAfD,WACZ,OACE,qBACEf,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQE,0CCKSe,EAfD,WACZ,OACE,qBACEhB,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQE,0CCZS,MAA0B,oCCA1B,MAA0B,kDCoC1BgB,G,MA9BC,WACd,OACE,qBACEjB,MAAO,CACLC,OAAQ,QACRiB,gBAAgB,OAAD,OAASC,EAAT,KACfC,mBAAoB,OAJxB,SAOE,sBAAKN,UAAU,WAAf,UACE,qBAAKV,IAAKiB,EAAOf,IAAK,GAAIQ,UAAW,YACrC,qBAAKV,IAAKiB,EAAOf,IAAK,GAAIQ,UAAW,YACrC,qBAAKV,IAAKiB,EAAOf,IAAK,GAAIQ,UAAW,YACrC,oBAAGA,UAAY,WAAf,iBAA8B,uBAA9B,uBACA,mBAAGA,UAAY,OAAf,uCACA,sBAAKA,UAAU,OAAf,UACE,mBAAGQ,KAAK,qCAAqCC,OAAO,SAAST,UAAU,OAAvE,sBACA,uBACA,mBAAGQ,KAAK,uEAAuEC,OAAO,SAAST,UAAU,OAAzG,uBAEF,sBAAKA,UAAU,QAAf,UACE,mBAAGQ,KAAK,4BAA4BC,OAAO,SAAST,UAAU,OAA9D,oBACA,uBACA,mBAAGQ,KAAK,kCAAkCC,OAAO,SAAST,UAAU,OAApE,6BC7BK,MAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,gC,qBCIzC,SAASU,EAAkBC,EAAMC,EAASC,GAEtC,IACIC,EAAGC,EACHC,EAAKC,EAAKC,EAAKC,EACfC,EAAIC,EAAIC,EAAIC,EACZC,EAAIC,EAAGC,EAJPC,EAAM,GAMJC,EAAUjB,EAAK,GACfkB,EAAUlB,EAAK,GACfmB,EAASnB,EAAK,GACdoB,EAASpB,EAAK,GAOpB,IALAA,EAAKqB,QAAQH,GACblB,EAAKqB,QAAQJ,GACbjB,EAAKsB,KAAKH,GACVnB,EAAKsB,KAAKF,GAELL,EAAE,EAAGA,EAAKf,EAAKuB,OAAS,EAAIR,GAAG,EAChC,IAAKD,EAAE,EAAGA,GAAKZ,EAAeY,IAG1BT,GAAOL,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCK,GAAON,EAAKe,EAAE,GAAKf,EAAKe,IAAMd,EAE9BM,GAAOP,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCO,GAAOR,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAGhCY,EAAKC,EAAIZ,EAGTO,EAAO,EAAIe,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAK,EACpDH,GAAO,EAAIc,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAC/CF,EAAWa,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAKA,EACpDD,EAAWY,KAAKC,IAAIZ,EAAI,GAAUW,KAAKC,IAAIZ,EAAI,GAG/CV,EAAIM,EAAKT,EAAKe,GAAQL,EAAKV,EAAKe,EAAE,GAAKJ,EAAKN,EAAMO,EAAKN,EACvDF,EAAIK,EAAKT,EAAKe,EAAE,GAAML,EAAKV,EAAKe,EAAE,GAAKJ,EAAKJ,EAAMK,EAAKJ,EAGvDQ,EAAIM,KAAKnB,GACTa,EAAIM,KAAKE,KAAKE,IAAItB,EAAG,KAI7B,OAAOY,EA4EX,IAyQeW,EAzQGC,IACfC,MAAM,OAAQ,CACbC,IAAI,EACJC,KAAM,IACNC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,QAAS,EACTC,OAAQ,IACRC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,UAAW,EACXhE,OAAQ,GACRiE,SAAS,EACTC,YAAY,EACZC,aAAa,EACbC,QAAS,GACTC,cAAe,UACfC,qBAAsBlB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMqB,QAAS,CAAC,GAAG,GAAG,GAAG,KAC1EC,YAAatB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,KAGrFE,SAAUvB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMwB,QAAS,IACpDC,gBAAiBzB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAU,CAAC,CAAC,GAAI,IAAK,CAAC,GAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAI,CAAC,GAAG,IAAK,CAAC,GAAG,KAEzHK,MAAM,EACNC,KAAM,GACNC,KAAK,EACLC,YAAY,EACZC,cAAc,IAEfC,SAAQ,SAAAC,GAAI,MAAK,CAChBC,eADgB,SACDpB,GACXmB,EAAKnB,QAAUA,GAEnBqB,kBAJgB,SAIEpB,GACdkB,EAAKlB,WAAaA,GAEtBqB,mBAPgB,SAOGpB,GACfiB,EAAKjB,YAAcA,GAEvBqB,aAVgB,SAUHC,GACTL,EAAK9B,GAAKmC,GAEdC,cAbgB,SAaF1F,GACVoF,EAAKpF,OAASA,GAElB2F,YAhBgB,SAgBJpC,GACR6B,EAAK7B,KAAOA,GAEhBqC,UAnBgB,SAmBNpC,GACN4B,EAAK5B,GAAKA,GAEdqC,UAtBgB,SAsBNpC,GACN2B,EAAK3B,GAAKA,GAEdqC,UAzBgB,SAyBNpC,GACN0B,EAAK1B,GAAKA,GAEdqC,eA5BgB,SA4BDpC,GACXyB,EAAKzB,QAAUA,GAEnBqC,iBA/BgB,SA+BCC,GACbb,EAAKvB,KAAOoC,EAAK,GACjBb,EAAKtB,KAAOmC,EAAK,GACjBb,EAAKrB,KAAOkC,EAAK,IAErBC,SApCgB,SAoCPC,GACLf,EAAKT,SAAS7B,KAAKqD,IAGvBC,cAxCgB,WAyCZhB,EAAKT,SAAW,IAEpB0B,gBA3CgB,SA2CA7F,GACZ4E,EAAKf,cAAgB7D,GAEzB8F,QA9CgB,SA8CRhD,GAAkB,IAAdtD,EAAa,wDACfuG,EAAgB,IAChBC,EAAe,GACrB,OAAIxG,EACOgD,KAAKyD,MAAQnD,EAAG,IAAO8B,EAAKpF,OAAQuG,GAExCvD,KAAKyD,MAAMnD,EAAGkD,IAEzBE,cAtDgB,WAkGZ,IArBA,IAAI7B,EAAkB,GAClBH,EAAc,CAAC,GAAG,GAAG,GAAG,IACxBJ,EAAuB,CAAC,EAAE,EAAE,EAAE,GAM5BqC,EAAU,CALEvB,EAAKkB,QAAQlB,EAAKpB,WAAW,GAClCoB,EAAKkB,QAAQlB,EAAKrB,MAAM,GACxBqB,EAAKkB,QAAQlB,EAAKtB,MAAM,GACxBsB,EAAKkB,QAAQlB,EAAKvB,MAAM,GACtBuB,EAAKkB,QAAQlB,EAAKxB,QAAQ,IAGnCL,EAAO6B,EAAKkB,QAAQlB,EAAK7B,MACzBC,EAAK4B,EAAKkB,QAAQlB,EAAK5B,IACvBC,EAAK2B,EAAKkB,QAAQlB,EAAK3B,IACvBC,EAAK0B,EAAKkB,QAAQlB,EAAK1B,IAEvBkD,EAAS,CADCxB,EAAKkB,QAAQlB,EAAKzB,SACTD,EAAID,EAAID,EAAID,GAEjCsD,EAAYD,EAAO,GAIdrE,EAAI,EAAGA,EAAIqE,EAAO7D,OAAO,EAAGR,IAAI,CACrC,IACIuE,EADe,EAEfC,EAAOH,EAAOrE,EAAE,GAAGqE,EAAOrE,GAC1ByE,EAAcL,EAAQpE,EAAE,GAAKoE,EAAQpE,GAErC0E,EAAeL,EAAOrE,GACtB2E,EAAe,CAAC,CAACD,EANF,IASnB,GAAIF,EAAO,EACP,KAAOA,EAAO,GAAE,CACZ,IAAMI,EAAkBnE,KAAKoE,MAAMH,EAXxB,GAYLI,EAAarE,KAAKsE,IAAIP,EAAMI,GAIlC,GAHAJ,GAAQM,EACRJ,GAAgBI,EAChBR,EAAY7D,KAAKE,IAAI2D,EAAWI,GACpB,GAARF,GAAaxE,EAAIqE,EAAO7D,OAAO,EAAG,MACtC+D,GAjBW,EAkBXI,EAAarE,QAAQ,CAACoE,EAlBX,SAqBd,GAAIF,EAAO,EAEZ,IADAA,IAAe,EACRA,EAAO,GAAG,CACb,IAAMQ,EAAoBvE,KAAKoE,MAAMH,EAAa,GAC5CO,EAAaxE,KAAKsE,IAAIP,EAAMQ,GAIlC,GAHAR,GAAQS,EACRP,GAAgBO,EAChBX,EAAY7D,KAAKE,IAAI2D,EAAWI,GACpB,GAARF,GAAaxE,EAAIqE,EAAO7D,OAAO,EAAG,MACtC+D,GA9BW,EA+BXI,EAAarE,QAAQ,CAACoE,EA/BX,IAmCnB,IADA,IAAIQ,EAAgBT,EAAYF,EACzBW,EAAc,GACjBP,EAAaO,EAAcP,EAAanE,QAAQ,IAAM,EACtD0E,GAAiB,EAErBnD,EAAqB/B,GAAKS,KAAKE,IAAI8D,EAAaF,GAChDjC,EAAgBhC,QAAQqE,GAI5B,IAFA,IAAIQ,EAAyB,GAAGC,OAAOC,MAAM,GAAI/C,GAC7CqC,EAAeQ,EAAuB3E,OAAO,EACxC8E,EAAI,EAAGA,EAAInD,EAAY3B,OAAQ8E,IAAI,CACxC,IAAK,IAAIC,EAAI,EAAGA,EAAIjD,EAAgBA,EAAgB9B,OAAS8E,EAAI,GAAG9E,OAAQ+E,IACxEpD,EAAYmD,GAAG/E,KAAKoE,EAAaY,GAErCZ,GAAgBrC,EAAgBA,EAAgB9B,OAAS8E,EAAI,GAAG9E,OAQpE,OALAqC,EAAK2C,SAAWlB,EAChBzB,EAAKP,gBAAkB6C,EACvBtC,EAAKV,YAAcA,EACnBU,EAAKd,qBAAuBA,EAC5B0D,QAAQC,IAAI3D,GACLoD,GAEXQ,gBA7JgB,WAmLZ,IAtB0B,IAAdC,EAAa,wDACnBC,EAAWhD,EAAKhB,QAAQ,EACxBiE,GAAe,EAAID,EACnBE,EAAelD,EAAKhB,QAAQgB,EAAKpF,OAEjCuI,EAASnD,EAAK7B,KAAO+E,EACrBE,EAAYpD,EAAKzB,QAAU2E,EAE3BG,EAAOrD,EAAK1B,GAAK4E,EACjBI,EAAUtD,EAAKrB,KAAK,IAAOqB,EAAKhB,QAAUgE,EAE1CO,EAAOvD,EAAK3B,GAAK6E,EACjBM,EAAUxD,EAAKtB,KAAK,IAAOsB,EAAKhB,QAAUgE,EAE1CS,EAAOzD,EAAK5B,GAAK8E,EACjBQ,EAAU1D,EAAKvB,KAAK,IAAOuB,EAAKhB,QAAUgE,EAE5CW,EAAW,CAACV,EAAYG,EAAU,EAAGE,EAAOD,EAAK,EAAEG,EAAOD,EAAK,EAAGG,EAAOD,EAAK,EAAGT,EAASG,EAAO,GACjG9G,EAAU,GACVC,EAAgB,EAChBsH,EAAS,GACPC,EAAU1H,EAAkBwH,EAAUtH,EAASC,GAC5Ca,EAAE,EAAGA,EAAE0G,EAAQlG,OAAQR,GAAG,EAAE,CACjC,IAAM2G,EAAID,EAAQ1G,GACZ4G,EAAIF,EAAQ1G,EAAE,GACpByG,EAAOlG,KAAM,IAAIsG,UAAcD,EAAGD,IAEtC,GAAKf,EACD,CAMA,IALA,IAAIkB,EAAc,GACdC,EAAa,GACbC,EAAmB,GACnBC,EAAK,EACLC,EAAK,EACFA,EAAG,EAAIR,EAAQlG,QAAO,CACzB,GAAIkG,EAAQQ,KAAQR,EAAQQ,EAAG,IAAMR,EAAQQ,EAAG,KAAOR,EAAQQ,EAAG,GAAG,CACjE,IAAMC,EAAOT,EAAQU,MAAMH,EAAGC,EAAG,GACjCJ,EAAYvG,KAAK4G,GACjBF,EAAKC,EAAK,EAEdA,GAAM,EAEVJ,EAAYvG,KAAKmG,EAAQU,MAAMH,EAAGP,EAAQlG,SAC1C,IAAK,IAAIR,EAAE,EAAGA,EAAE,EAAGA,GAAG,EAElB,IADA,IAAIqH,EAAW,EACN/B,EAAE,EAAGA,EAAEzC,EAAKV,YAAYnC,GAAGQ,OAAQ8E,GAAG,EAC3C,GAAIzC,EAAKV,YAAYnC,GAAGQ,OAAS,EAAE,CAE/B,IAAI8G,EAAa7G,KAAKyD,MAAOrB,EAAKP,gBAAgBO,EAAKV,YAAYnC,GAAGsF,IAAI,GAAKzC,EAAKd,qBAAqB/B,IAAO8G,EAAY9G,GAAGQ,OAAO,IACtI8G,GAA0B,EAC1B,IAAMF,EAAQN,EAAY9G,GAAGoH,MAAMC,EAASA,EAAWC,EAAW,GAClED,GAAYC,EACZP,EAAWxG,KAAK6G,QAGhBL,EAAWxG,KAAKuG,EAAY9G,IAIxC,IAAI,IAAIsF,EAAE,EAAGA,EAAEyB,EAAWvG,OAAQ8E,GAAI,EAAE,CAEpC,IADA,IAAI6B,EAAO,GACH5B,EAAI,EAAGA,EAAIwB,EAAWzB,GAAG9E,OAAQ+E,GAAK,EAAE,CAC5C,IAAMoB,EAAII,EAAWzB,GAAGC,GAClBqB,EAAIG,EAAWzB,GAAGC,EAAE,GAC1B4B,EAAK5G,KAAK,IAAIsG,UAAcD,EAAGD,IAEnCK,EAAiBzG,KAAK4G,GAG1B,OAAOH,EA1CE,OAAOP,OA8CzBc,OAAM,SAAA1E,GAAI,MAAK,M,kBC3WH2E,EAxBC3G,IACbC,MAAM,UAAW,CAChB2G,WAAY,UACZC,SAAU,UACVC,gBAAgB,EAChBC,UAAU,IAEXhF,SAAQ,SAAAC,GAAI,MAAK,CAChBgF,cADgB,SACFC,GACZjF,EAAK4E,WAAaK,GAEpBC,YAJgB,SAIJD,GACVjF,EAAK6E,SAAWI,GAElBE,kBAPgB,SAOEC,GAChBpF,EAAK8E,eAAiBM,GAExBC,YAVgB,WAUM,IAAVD,IAAS,yDACnBpF,EAAK+E,SAAWK,OAGnBV,OAAM,SAAA1E,GAAI,MAAK,MCOHsF,EA3BEtH,IACdC,MAAM,WAAY,CACjBsH,QAASvH,IAAMmB,SAASnB,IAAMoB,MAAMuF,GAAU,IAC9Ca,OAAQ,EACRC,MAAO,EACPC,cAAe,EACfC,SAAU,YAEX5F,SAAQ,SAAAC,GAAI,MAAK,CAChB4F,MADgB,WAEd5F,EAAKuF,QAAQ7H,KAAKiH,EAAQkB,OAAO,CAAChB,SAAU7E,EAAK2F,SAAUf,WAAY5E,EAAK2F,aAE9EG,UAJgB,WAIM,IAAZV,EAAW,uDAAL,KACdpF,EAAKwF,OAASJ,GAEhBW,SAPgB,SAOPX,GACPpF,EAAKyF,MAAQL,GAEfY,iBAVgB,SAUCZ,GACfpF,EAAK0F,cAAgBN,OAGxBrF,SAAQ,SAAAC,GAAI,MAAK,MAEjB0E,OAAM,SAAA1E,GAAI,MAAK,MCDHiG,EAvBajI,IACzBC,MAAM,sBAAuB,CAC5BiI,mBAAoBlI,IAAMmB,SAASnB,IAAMoB,MAAMkG,GAAW,IAC1DG,MAAO,EACP7K,OAAQ,EACRuL,YAAY,EACZR,SAAU,YAEX5F,SAAQ,SAAAC,GAAI,MAAK,CAChBoG,OADgB,WAEdpG,EAAKkG,mBAAmBxI,KAAK4H,EAASO,OAAO,CAACF,SAAU3F,EAAK2F,aAE/DU,eAJgB,SAIDC,EAAGxC,GAChB9D,EAAKyF,MAAQa,EACbtG,EAAKpF,OAASkJ,GAEhByC,cARgB,SAQFnB,GACZpF,EAAKmG,WAAaf,OAGrBV,OAAM,SAAA1E,GAAI,MAAK,MCZZwG,GAAc,CAClBC,SAAU,kBACVC,KAPK,YAQLC,mBAAoB,IAGhBC,GAAS,SAACC,EAAKC,GACnB,IAAMC,EAAOC,SAASC,cAAc,KAEP,kBAAlBF,EAAKG,UACZH,EAAK9K,KAAO4K,EACZE,EAAKG,SAAWJ,EAChBE,SAASG,KAAKC,YAAYL,GAC1BA,EAAKM,QACLL,SAASG,KAAKG,YAAYP,IAE1BQ,OAAOC,KAAKX,IA8LHY,GA1LMzJ,IAClBC,MAAM,eAAgB,CACrByJ,cAAe,UACfC,aAAc,UACdC,WAAY,UACZC,SAAS,EACTC,OAAO,EACPC,MAAM,EACNpF,SAAU,GACVqF,KAAM,GACNC,UAAW,GACXC,UAAW,GACXjK,MAAO,OACP8G,UAAU,EACVoD,gBAAgB,EAChBC,iBAAkBpK,IAAMmB,SAASnB,IAAMoB,MAAM6G,GAAsB,IACnEoC,QAASrK,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMwB,SAAU,IAChE8I,OAAQ,EACRC,aAAa,EACbC,IAAK,QACLC,UAAW,UAEZ1I,SAAQ,SAAAC,GAAI,MAAK,CAChBc,SADgB,SACPC,GACPf,EAAKiI,UAAYlH,GAGnB2H,eALgB,SAKD3H,GACbf,EAAKkI,UAAYnH,OAIpBhB,SAAQ,SAAAC,GAAI,MAAK,CAChB2I,SADgB,SACP1D,GACPjF,EAAK8H,OAAQ,EACb9H,EAAK0H,cAAgBzC,GAEvB2D,SALgB,SAKP3K,EAAO4K,GACd7I,EAAK/B,MAAQA,EACC,SAAVA,IACF+B,EAAKmI,eAAiBU,IAG1BC,OAXgB,WAWkB,IAA3BC,EAA0B,wDAAZP,EAAY,uDAAR,QAClBO,EACA/I,EAAKyI,UAAYD,EADTxI,EAAKwI,IAAMA,GAG1BQ,oBAfgB,SAeI/D,GAClBjF,EAAK2H,aAAe1C,EACpBjF,EAAK4H,WAAa3C,GAEpBhE,gBAnBgB,SAmBAgE,GACdjF,EAAKuI,aAAc,EACnBvI,EAAK8H,OAAQ,EACb9H,EAAK4H,WAAa5H,EAAK2H,aACvB3H,EAAK2H,aAAe1C,GAEtBgE,SAzBgB,WA0BdjJ,EAAKuI,aAAc,EACO,YAAtBvI,EAAK2H,cACP3H,EAAK4H,WAAa,UAClB5H,EAAK2H,aAAe,YAGpB3H,EAAK4H,WAAa,UAClB5H,EAAK2H,aAAe,WAEtB3H,EAAK8H,OAAQ,GAEfoB,WArCgB,WAsCdlJ,EAAK8H,OAAQ,GAEfqB,QAxCgB,SAwCR/D,GACNpF,EAAK8H,OAAQ,EACb9H,EAAK+H,KAAO3C,GAEdC,YA5CgB,WA4CM,IAAVD,IAAS,yDACnBpF,EAAK+E,SAAWK,GAElBgE,WA/CgB,WA+CK,IAAVhE,IAAS,yDAClBpF,EAAK6H,QAAUzC,GAEjBiE,gBAlDgB,SAkDCC,GAAwB,IAAlBC,EAAiB,wDACtC,IAAID,EAAKE,QACL,MAAM,IAAIC,MAAM,8BAEpB,IAAMC,EAAUC,IAASC,YAAYN,EAAKE,SAC1C,OAAOK,IAAYH,EAAS,CACxBI,SAAUvC,OAAOuC,QACjBC,SAAS,EAETC,aAAc,EACdC,gBAAiB,YAClBC,MAAK,SAAAC,GAEJZ,EAAWvJ,EAAK0I,eAAeyB,EAAOC,UAAU5D,GAAa,KAAOxG,EAAKc,SAASqJ,EAAOC,UAAU5D,GAAa,SAGtH6D,YAlEgB,WAmEdzD,GAAO5G,EAAKiI,UAAW,eACvBrB,GAAO5G,EAAKkI,UAAW,0BACvBlI,EAAKyI,UAAY,SAEnB6B,kBAvEgB,WAwEdtK,EAAKoI,iBAAiB1K,KAAKuI,EAAoBJ,OAAO,CAACF,SAAU3F,EAAK2H,iBAExE4C,MA1EgB,WA2EdvK,EAAKsI,QAAU,GAEjBkC,kBA7EgB,WA8EdxK,EAAKoI,iBAAmB,GACxBpI,EAAKqI,QAAU,GACfrI,EAAKsI,OAAS,EACdtI,EAAK0H,cAAgB,UACrB1H,EAAK2H,aAAe,UACpB3H,EAAK4H,WAAa,UAClB5H,EAAK+H,MAAO,EACZ/H,EAAKuI,aAAc,EACnBvI,EAAKiI,UAAY,GACjBjI,EAAKkI,UAAY,GACjBlI,EAAK+E,UAAW,EAChB/E,EAAKmI,gBAAiB,EACtBnI,EAAK6H,SAAU,GAMjB4C,cAhGgB,SAgGFC,EAAQC,GAEpB,IADA,IAAIC,GAAO,EACFzN,EAAI,EAAGA,EAAI6C,EAAKqI,QAAQ1K,OAAQR,IAAI,CAC3C,IAAM0N,EAAWC,SAAS9K,EAAKqI,QAAQlL,GAAG,IACtC6C,EAAKqI,QAAQlL,GAAG,KAAOuN,IACrBG,GAAY,EACd7K,EAAKqI,QAAQ0C,OAAO5N,EAAE,GAEnB6C,EAAKqI,QAAQlL,GAAG,GAAK6N,OAAOH,EAAW,IAGhD,IAAK,IAAI1N,EAAI,EAAGA,EAAI6C,EAAKqI,QAAQ1K,OAAQR,IAAI,CAC3C,IAAM0N,EAAWC,SAAS9K,EAAKqI,QAAQlL,GAAG,IACtC6C,EAAKqI,QAAQlL,GAAG,KAAOwN,IACzBC,GAAO,EACP5K,EAAKqI,QAAQlL,GAAG,GAAK6N,OAAOH,EAAW,IAGtCD,GACH5K,EAAKqI,QAAQ3K,KAAK,CAACiN,EAAQ,OAG/BM,qBAtHgB,WAsH8B,IAAzBC,EAAwB,wDAAZpD,EAAY,wDAC3C,IAAI9H,EAAKuI,YAAT,CACA,GAAI2C,EAGF,OAFAlL,EAAKqI,QAAS,CAAC,CAACrI,EAAK2H,aAAcqD,OAAOhL,EAAKsI,eAC3CR,IAAO9H,EAAKuI,aAAc,IAIhC,IADA,IAAIqC,GAAO,EACFzN,EAAI,EAAGA,EAAI6C,EAAKqI,QAAQ1K,OAAQR,IACnC6C,EAAKqI,QAAQlL,GAAG,KAAO6C,EAAK4H,aAC9B5H,EAAKqI,QAAQlL,GAAG,GAAK6C,EAAK2H,aAC1BiD,GAAO,GAIX,GADA5K,EAAKuI,aAAc,EACdqC,EAGL,IAFA,IAAIO,EAAQ,EACRC,EAAM,EACDjO,EAAI,EAAGA,EAAI6C,EAAKqI,QAAQ1K,OAAQR,IACnC6C,EAAKqI,QAAQlL,GAAG,KAAO6C,EAAK2H,eAEhB,KADdwD,GAAS,GAEPC,EAAMjO,EAEW,IAAVgO,IACPnL,EAAKqI,QAAQ+C,GAAK,GAAKJ,OAAOF,SAAS9K,EAAKqI,QAAQ+C,GAAK,IAAMN,SAAS9K,EAAKqI,QAAQlL,GAAG,KACxF6C,EAAKqI,QAAQ0C,OAAO5N,EAAE,WAO/BuH,OAAM,SAAA1E,GAAI,MAAK,M,SClNlB,SAASqL,GAAqBjP,EAAMC,EAASC,GAEzC,IACIC,EAAGC,EACHC,EAAKC,EAAKC,EAAKC,EACfC,EAAIC,EAAIC,EAAIC,EACZC,EAAIC,EAAGC,EAJPC,EAAM,GAMJC,EAAUjB,EAAK,GACfkB,EAAUlB,EAAK,GACfmB,EAASnB,EAAK,GACdoB,EAASpB,EAAK,GAOpB,IALAA,EAAKqB,QAAQH,GACblB,EAAKqB,QAAQJ,GACbjB,EAAKsB,KAAKH,GACVnB,EAAKsB,KAAKF,GAELL,EAAE,EAAGA,EAAKf,EAAKuB,OAAS,EAAIR,GAAG,EAChC,IAAKD,EAAE,EAAGA,GAAKZ,EAAeY,IAG1BT,GAAOL,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCK,GAAON,EAAKe,EAAE,GAAKf,EAAKe,IAAMd,EAE9BM,GAAOP,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCO,GAAOR,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAGhCY,EAAKC,EAAIZ,EAGTO,EAAO,EAAIe,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAK,EACpDH,GAAO,EAAIc,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAC/CF,EAAWa,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAKA,EACpDD,EAAWY,KAAKC,IAAIZ,EAAI,GAAUW,KAAKC,IAAIZ,EAAI,GAG/CV,EAAIM,EAAKT,EAAKe,GAAQL,EAAKV,EAAKe,EAAE,GAAKJ,EAAKN,EAAMO,EAAKN,EACvDF,EAAIK,EAAKT,EAAKe,EAAE,GAAML,EAAKV,EAAKe,EAAE,GAAKJ,EAAKJ,EAAMK,EAAKJ,EAGvDQ,EAAIM,KAAKnB,GACTa,EAAIM,KAAKE,KAAKE,IAAI,GAAKtB,IAI/B,OAAOY,EAGX,IAiJekO,GAjJKtN,IACjBC,MAAM,SAAU,CACfC,IAAI,EACJtD,OAAQ,GACR2Q,SAAU,GACVpN,KAAM,GACNI,QAAS,GACTM,SAAS,EACTC,YAAY,EACZc,KAAK,EACLC,YAAY,EACZC,cAAc,EACdd,QAAS,GACTD,aAAa,EACbE,cAAe,UACfC,qBAAsBlB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMqB,QAAS,CAAC,GAAG,KACpEC,YAAatB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,KAG/EE,SAAUvB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMwB,QAAS,IACpDC,gBAAiBzB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAU,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,KAE5GK,MAAM,EACNC,KAAM,KAEPI,SAAQ,SAAAC,GAAI,gBACXC,eADW,SACIpB,GACXmB,EAAKnB,QAAUA,GAEnBqB,kBAJW,SAIOpB,GACdkB,EAAKlB,WAAaA,GAEtB0M,kBAPW,SAOO3L,GACdG,EAAKH,WAAaA,GAEtB4L,oBAVW,SAUS3L,GAChBE,EAAKF,aAAeA,GAExB4L,WAbW,SAaA9L,GACPI,EAAKJ,IAAMA,GAEfQ,aAhBW,SAgBEC,GACTL,EAAK9B,GAAKmC,GAEdC,cAnBW,SAmBG1F,GACVoF,EAAKpF,OAASA,GAElB+Q,gBAtBW,SAsBKJ,GACZvL,EAAKuL,SAAWA,GAEpBhL,YAzBW,SAyBCpC,GACR6B,EAAK7B,KAAOA,GAEhBwC,eA5BW,SA4BIpC,GACXyB,EAAKzB,QAAUA,GAEnB4B,mBA/BW,SA+BQiF,GACfpF,EAAKjB,YAAcqG,GAEvBnE,gBAlCW,SAkCK7F,GACZ4E,EAAKf,cAAgB7D,GAEzBkG,cArCW,WAuCP,OADAtB,EAAK2C,SAAW,GACT3C,EAAKP,iBAEhBqB,SAzCW,SAyCFC,GACLf,EAAKT,SAAS7B,KAAKqD,IAEvBC,cA5CW,WA6CPhB,EAAKT,SAAW,KA7CT,2CA+CKnE,GACZ4E,EAAKf,cAAgB7D,KAhDd,6CAkEP,IAhB0B,IAAd2H,EAAa,wDACnBC,EAAWhD,EAAKhB,QAAQ,EACxBiE,GAAe,EAAID,EACnBE,EAAelD,EAAKhB,QAAQgB,EAAKpF,OAEjCuI,EAASnD,EAAK7B,KAAO+E,EACrBE,EAAYpD,EAAKzB,QAAU2E,EAE3B0I,EAAa5L,EAAKuL,SAAWrI,EAC7B2I,EAAe,EAEjBlI,EAAW,CAACV,EAAYG,EAAU,EAAGyI,EAAaD,EAAW,EAAG5I,EAASG,EAAO,GAChF9G,EAAU,GACVC,EAAgB,GAChBsH,EAAS,GACPC,EAAUwH,GAAqB1H,EAAUtH,EAASC,GAC/Ca,EAAE,EAAGA,EAAE0G,EAAQlG,OAAQR,GAAG,EAAE,CACjC,IAAM2G,EAAID,EAAQ1G,GACZ4G,EAAIF,EAAQ1G,EAAE,GACpByG,EAAOlG,KAAM,IAAIsG,UAAcD,EAAGD,IAEtC,GAAKf,EACD,CAMA,IALA,IAAIkB,EAAc,GACdC,EAAa,GACbC,EAAmB,GACnBC,EAAK,EACLC,EAAK,EACFA,EAAG,EAAIR,EAAQlG,QAAO,CACzB,GAAIkG,EAAQQ,IAAOR,EAAQQ,EAAG,IAAMR,EAAQQ,EAAG,IAAMR,EAAQQ,EAAG,GAAG,CAC/D,IAAMC,EAAOT,EAAQU,MAAMH,EAAGC,EAAG,GACjCJ,EAAYvG,KAAK4G,GACjBF,EAAKC,EAAK,EAEdA,GAAM,EAEVJ,EAAYvG,KAAKmG,EAAQU,MAAMH,EAAGP,EAAQlG,SAC1C,IAAK,IAAIR,EAAE,EAAGA,EAAE,EAAGA,GAAG,EAElB,IADA,IAAIqH,EAAW,EACN/B,EAAE,EAAGA,EAAEzC,EAAKV,YAAYnC,GAAGQ,OAAQ8E,GAAG,EAC3C,GAAIzC,EAAKV,YAAYnC,GAAGQ,OAAS,EAAE,CAE/B,IAAI8G,EAAa7G,KAAKyD,MAAOrB,EAAKP,gBAAgBO,EAAKV,YAAYnC,GAAGsF,IAAI,GAAKzC,EAAKd,qBAAqB/B,IAAO8G,EAAY9G,GAAGQ,OAAO,IACtI8G,GAA0B,EAC1B,IAAMF,EAAQN,EAAY9G,GAAGoH,MAAMC,EAASA,EAAWC,EAAW,GAClED,GAAYC,EACZP,EAAWxG,KAAK6G,QAGhBL,EAAWxG,KAAKuG,EAAY9G,IAIxC,IAAI,IAAIsF,EAAE,EAAGA,EAAEyB,EAAWvG,OAAQ8E,GAAI,EAAE,CAEpC,IADA,IAAI6B,EAAO,GACH5B,EAAI,EAAGA,EAAIwB,EAAWzB,GAAG9E,OAAQ+E,GAAK,EAAE,CAC5C,IAAMoB,EAAII,EAAWzB,GAAGC,GAClBqB,EAAIG,EAAWzB,GAAGC,EAAE,GAC1B4B,EAAK5G,KAAM,IAAIsG,UAAcD,EAAGD,IAEpCK,EAAiBzG,KAAK4G,GAG1B,OAAOH,EA1CE,OAAOP,KAvEb,KAqHZc,OAAM,SAAA1E,GAAI,MAAK,MC9IlB,IAoFe8L,GApFO9N,IACnBC,MAAM,WAAY,CACjBC,IAAI,EACJqN,SAAU,GACV7L,MAAM,EACNC,KAAM,OACNoM,WAAY,GACZC,YAAa,IACb/M,cAAe,UACfM,SAAUvB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMwB,QAAS,IACpDyM,cAAe,GACfxM,gBAAiBzB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAU,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,MAErGN,aAAa,EACbF,SAAS,EACTC,YAAY,EACZc,KAAK,EACLC,YAAY,EACZC,cAAc,IAEfC,SAAQ,SAAAC,GAAI,MAAK,CAChBkM,YADgB,SACJ9G,GACRpF,EAAKL,KAAOyF,GAEhB+G,YAJgB,SAIJ/G,GACRpF,EAAKN,KAAO0F,GAEhBhF,aAPgB,SAOHC,GACTL,EAAK9B,GAAKmC,GAEdsL,gBAVgB,SAUAS,GACZpM,EAAKuL,SAAWa,GAEpB9K,cAbgB,WAeZ,OADAtB,EAAK2C,SAAW,GACT3C,EAAKP,iBAEhBqB,SAjBgB,SAiBPC,GACLf,EAAKT,SAAS7B,KAAKqD,IAEvBC,cApBgB,WAqBZhB,EAAKT,SAAW,IAEpB0B,gBAvBgB,SAuBA7F,GACZ4E,EAAKf,cAAgB7D,GAEzBiR,iBA1BgB,SA0BCC,GAIb,IAHA,IAAIC,EAAc,EACdC,EAAY,EACZC,EAAY,GACPtP,EAAI,EAAGA,EAAI6C,EAAKP,gBAAgB9B,OAAO,EAAGR,IAAI,CAGnDqP,EAFiBxM,EAAKP,gBAAgBtC,GAAG,GAClB6C,EAAKiM,cACRK,EACpBG,EAAU/O,KAAK,CAAC6O,EAAaC,IAC7BD,GAAeC,EAEnB,OAAOC,GAEX3J,gBAvCgB,WAqDZ,IAbA,IAAME,EAAWhD,EAAKuL,SAAWvL,EAAKgM,YAChC/I,GAAe,EAAID,EAEnB0J,EAAgB1M,EAAKuL,SAAWvL,EAAK+L,WAQvCnI,EAAS,GACPC,EA1Hd,SAAgCzH,EAAMC,EAASC,GAE3C,IACIC,EAAGC,EACHC,EAAKC,EAAKC,EAAKC,EACfC,EAAIC,EAAIC,EAAIC,EACZC,EAAIC,EAAGC,EAJPC,EAAM,GAMJC,EAAUjB,EAAK,GACfkB,EAAUlB,EAAK,GACfmB,EAASnB,EAAK,GACdoB,EAASpB,EAAK,GAOpB,IALAA,EAAKqB,QAAQH,GACblB,EAAKqB,QAAQJ,GACbjB,EAAKsB,KAAKH,GACVnB,EAAKsB,KAAKF,GAELL,EAAE,EAAGA,EAAKf,EAAKuB,OAAS,EAAIR,GAAG,EAChC,IAAKD,EAAE,EAAGA,GAAKZ,EAAeY,IAG1BT,GAAOL,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCK,GAAON,EAAKe,EAAE,GAAKf,EAAKe,IAAMd,EAE9BM,GAAOP,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCO,GAAOR,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAGhCY,EAAKC,EAAIZ,EAGTO,EAAO,EAAIe,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAK,EACpDH,GAAO,EAAIc,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAC/CF,EAAWa,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAKA,EACpDD,EAAWY,KAAKC,IAAIZ,EAAI,GAAUW,KAAKC,IAAIZ,EAAI,GAG/CV,EAAIM,EAAKT,EAAKe,GAAQL,EAAKV,EAAKe,EAAE,GAAKJ,EAAKN,EAAMO,EAAKN,EACvDF,EAAIK,EAAKT,EAAKe,EAAE,GAAML,EAAKV,EAAKe,EAAE,GAAKJ,EAAKJ,EAAMK,EAAKJ,EAGvDQ,EAAIM,KAAKnB,GACTa,EAAIM,KAAKE,KAAKE,IAAI,GAAKtB,IAI/B,OAAOY,EA2EauP,CAJD,CAAC1J,EAAYyJ,EAAc,EAFrB,EADF1M,EAAKuL,SAG6C,EAAGvI,EAAS0J,EAAc,GACjF,IACM,IAGXvP,EAAE,EAAGA,EAAE0G,EAAQlG,OAAQR,GAAG,EAAE,CACjC,IAAM2G,EAAID,EAAQ1G,GACZ4G,EAAIF,EAAQ1G,EAAE,GACpByG,EAAOlG,KAAM,IAAIsG,UAAcD,EAAGD,IAEtC,OAAOF,OAGZc,OAAM,SAAA1E,GAAI,MAAK,MCjFlB,IA2Ee4M,GA3EG5O,IACfC,MAAM,OAAQ,CACbC,IAAI,EACJqN,SAAU,GACVS,YAAa,IACba,UAAW,EACXC,aAAa,GACbC,aAAc,GACd9N,cAAe,UACf+N,OAAO,EACPlO,YAAY,EACZmO,QAAS,GACTxN,gBAAiBzB,IAAMmB,SAASnB,IAAMoB,MAAMpB,IAAMoB,MAAMpB,IAAMqB,SAAU,CAAC,CAAC,EAAG,KAE7EN,aAAa,EACbF,SAAS,EACTa,MAAM,EACNC,KAAM,GACNC,KAAK,EACLC,YAAY,EACZC,cAAc,IAEfC,SAAQ,SAAAC,GAAI,MAAK,CAChBI,aADgB,SACHC,GACTL,EAAK9B,GAAKmC,GAEd6M,aAJgB,SAIH9H,GACTpF,EAAKgN,MAAQ5H,GAEjBlF,kBAPgB,SAOEkF,GACdpF,EAAKlB,WAAasG,GAEtBuG,gBAVgB,SAUAS,GACZpM,EAAKuL,SAAWa,GAEpBtL,SAbgB,SAaPC,GACLf,EAAKiN,QAAUlM,GAEnBC,cAhBgB,WAiBZhB,EAAKiN,QAAU,IAEnBhM,gBAnBgB,SAmBA7F,GACZ4E,EAAKf,cAAgB7D,GAEzBkG,cAtBgB,WAyBZ,OAFAtB,EAAK2C,SAAW,GAET3C,EAAKP,iBAEhB0N,YA3BgB,WA0CZ,IAdA,IAAMnK,EAAWhD,EAAKuL,SAAWvL,EAAK+M,aAChC9J,GAAe,EAAID,EAAW,GAE9BoK,EAAWpN,EAAKuL,SAAWvL,EAAK8M,aAChCO,EAAQrN,EAAKuL,SAAWvL,EAAK6M,UAQ/BjJ,EAAS,GACPC,EAjHd,SAA4BzH,EAAMC,EAASC,GAEvC,IACIC,EAAGC,EACHC,EAAKC,EAAKC,EAAKC,EACfC,EAAIC,EAAIC,EAAIC,EACZC,EAAIC,EAAGC,EAJPC,EAAM,GAMJC,EAAUjB,EAAK,GACfkB,EAAUlB,EAAK,GACfmB,EAASnB,EAAK,GACdoB,EAASpB,EAAK,GAOpB,IALAA,EAAKqB,QAAQH,GACblB,EAAKqB,QAAQJ,GACbjB,EAAKsB,KAAKH,GACVnB,EAAKsB,KAAKF,GAELL,EAAE,EAAGA,EAAKf,EAAKuB,OAAS,EAAIR,GAAG,EAChC,IAAKD,EAAE,EAAGA,GAAKZ,EAAeY,IAG1BT,GAAOL,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCK,GAAON,EAAKe,EAAE,GAAKf,EAAKe,IAAMd,EAE9BM,GAAOP,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAChCO,GAAOR,EAAKe,EAAE,GAAKf,EAAKe,EAAE,IAAMd,EAGhCY,EAAKC,EAAIZ,EAGTO,EAAO,EAAIe,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAK,EACpDH,GAAO,EAAIc,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAC/CF,EAAWa,KAAKC,IAAIZ,EAAI,GAAM,EAAIW,KAAKC,IAAIZ,EAAI,GAAKA,EACpDD,EAAWY,KAAKC,IAAIZ,EAAI,GAAUW,KAAKC,IAAIZ,EAAI,GAG/CV,EAAIM,EAAKT,EAAKe,GAAQL,EAAKV,EAAKe,EAAE,GAAKJ,EAAKN,EAAMO,EAAKN,EACvDF,EAAIK,EAAKT,EAAKe,EAAE,GAAML,EAAKV,EAAKe,EAAE,GAAKJ,EAAKJ,EAAMK,EAAKJ,EAGvDQ,EAAIM,KAAKnB,GACTa,EAAIM,KAAKE,KAAKE,IAAI,GAAKtB,IAI/B,OAAOY,EAkEakQ,CAJD,CAACrK,EAAYmK,EAAS,EAFhB,EADFpN,EAAKuL,SAGwC,EAAGvI,EAASqK,EAAM,GACpE,IACM,IAGXlQ,EAAE,EAAGA,EAAE0G,EAAQlG,OAAQR,GAAG,EAAE,CACjC,IAAM2G,EAAID,EAAQ1G,GACZ4G,EAAIF,EAAQ1G,EAAE,GACpByG,EAAOlG,KAAM,IAAIsG,UAAcD,EAAGD,IAEtC,OAAOF,OAGZc,OAAM,SAAA1E,GAAI,MAAK,MC3GHuN,GARGvP,IAAMC,MAAM,aAAauP,MAAM,CAC/CC,UAAWzP,IAAMmB,SAASpB,EAAW,IACrC2P,kBAAmB1P,IAAMmB,SAASsI,GAAc,IAChDkG,YAAa3P,IAAMmB,SAASmM,GAAa,IACzCsC,SAAU5P,IAAMmB,SAAS2M,GAAe,IACxC+B,UAAW7P,IAAMmB,SAASyN,GAAW,MCSjCkB,GAAmBC,IAAMC,gBAElBC,GAAoBH,GAAiBI,SASrCC,GAAY,kBAAMJ,IAAMK,WAAWN,KCsBjCO,GA7CA,WAEbC,qBAAU,WACRZ,EAAkB5E,QAAO,EAAM,SAC/B4E,EAAkBlD,sBACjB,IALgB,IAOZkD,EAAqBS,KAArBT,kBAEP,OACE,gCACE,sBAAKjS,UAAU,YAAf,UACA,qBAAKV,IAAKiB,EAAOf,IAAK,GAAIQ,UAAW,UACrC,mBAAGA,UAAU,cAAb,4BACA,qBAAKV,IAAKiB,EAAOf,IAAK,GAAIQ,UAAW,cAErC,qBACEd,MAAO,CACL4T,cAAe,MACf3T,OAAQ,QAHZ,SAME,sBAAKa,UAAY,SAAjB,UACE,eAACtB,EAAD,CAAWO,GAAG,mBAAd,UACE,qBAAKO,IAAK,GAAIF,IAAKyT,EAAK/S,UAAU,gBAClC,mBAAGA,UAAU,cAAb,uCAEF,eAACtB,EAAD,CAAWO,GAAG,eAAd,UACE,qBAAKO,IAAK,GAAIF,IAAK0T,EAAMhT,UAAU,gBACnC,mBAAGA,UAAU,cAAb,mCAEF,eAACtB,EAAD,CAAWO,GAAG,iBAAd,UACE,qBAAKO,IAAK,GAAIF,IAAK2T,EAAQjT,UAAU,gBACrC,mBAAGA,UAAU,cAAb,qCAEF,eAACtB,EAAD,CAAWO,GAAG,eAAd,UACE,qBAAKO,IAAK,GAAIF,IAAK4T,EAAMlT,UAAU,gBACnC,mBAAGA,UAAU,cAAb,4CCjCGmT,GAfC,WACd,OACE,qBACEjU,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQE,4C,oBCqBSiU,GA5BA,WAAO,IAAD,EACoBV,KADpB,EACZT,kBADY,EACOG,UAW1B,OACE,qBACElT,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQA,cAAC,KAAD,CAAWkU,MAAO,EAAGpU,GAAG,aAAaqU,YAAanM,QAAQC,IAAI,MAAOmM,SAAS,EAA9E,SACE,6CCLSC,GAlBD,WACZ,OACE,qBACEtU,MAAO,CACLW,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZZ,OAAQ,QALZ,SAQE,gCACE,qBAAKa,UAAU,mBAAmBV,IAAKC,EAAMC,IAAI,KACjD,mBAAGQ,UAAU,mBAAb,+B,kBChBO,OAA0B,kC,kBCoG1ByT,gBA/FF,SAAC1B,GAAW,IACd2B,EAAqB3B,EAArB2B,SAAUC,EAAW5B,EAAX4B,QACXC,EAAcC,mBAAQ,kBAAMH,EAASI,KAAI,SAAAC,GAAC,oBAAQxL,UAAR,aAAyBwL,SAAK,IAExEC,EAAQ,GAqFd,MApFe,QAAXL,EACAK,EAAM/R,KACF,IAAIsG,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,GAAI,GAAI,GACxB,IAAIA,QAAY,GAAI,EAAG,GACvB,IAAIA,QAAY,EAAG,GAAI,GAEvB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IACxB,IAAIA,QAAY,GAAI,GAAI,IAGZ,cAAXoL,EACLK,EAAM/R,KACF,IAAIsG,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,IAIV,YAAXoL,GACLK,EAAM/R,KACF,IAAIsG,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,GACtB,IAAIA,QAAY,EAAG,EAAG,IAuC1B,aADA,CACA,YAAUmL,SAAUE,EAAaI,MAAOA,EAAOC,SAdnD,SAAgBC,GACZA,EAASC,qBACTD,EAASE,uBACT,IAAK,IAAI1S,EAAI,EAAGA,EAAIwS,EAASR,SAASxR,OAAQR,IAC1CwS,EAASR,SAAShS,GAAGZ,EAAI4S,EAAShS,GAAG,GACrCwS,EAASR,SAAShS,GAAGX,EAAI2S,EAAShS,GAAG,GACrCwS,EAASR,SAAShS,GAAG2S,EAAIX,EAAShS,GAAG,GAEzCwS,EAASI,oBAAqB,EAC9BJ,EAASK,mBAAoB,QC0LtBd,gBA/QF,SAAC1B,GAAW,IACdK,EAAqBL,EAArBK,UAAW9E,EAAUyE,EAAVzE,OACZkH,EAAQlH,EAAS8E,EAAUZ,QAAUiD,GACrCjD,EAAUqC,mBAAQ,kBAAM,IAAItL,iBAAsBmM,KAAKF,KAAQ,IAWrE,IAAMG,EAAWvC,EAAUV,cAErBkD,EACN,kCACI,iCACI,+BAAeC,KAAM,CAACF,EAAU,GAAI,EAAG,EAAExS,KAAK2S,MAC9C,mCAAmBhB,IAAOtC,EAAUuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE/F,iCACI,+BAAeJ,KAAM,CAACF,EAAU,GAAI,EAAG,EAAExS,KAAK2S,MAC9C,mCAAmBhB,IAAOtC,EAAUuD,KAAQxM,mBAI9C2M,EAAS9C,EAAUtC,SAAWsC,EAAUd,aAAe,IAAO,EAC9D6D,EAAW,uBAAMC,SAAY,CAAC,EAAEF,EAAO,GAAI,GAAIG,SAAY,CAAC,KAAK,EAAE,GAAxD,UACjB,+BAAeR,KAAM,CAAEzC,EAAUtC,SAAWsC,EAAUf,aAAa,EAAG,GAAKe,EAAUtC,SAAS,GAAI,GAAI,MACtG,mCAAmBnQ,MAAO2N,EAAQ8E,EAAU5O,cAAgB,eAG5D,SAAS8R,EAAKC,EAAOC,GACjB,OAAQA,EAASrT,KAAKsT,IAAIF,GAG9B,SAASG,EAAKH,EAAOC,GACjB,OAAOA,EAASrT,KAAKwT,IAAIJ,GAqE7B,IAlEA,IAAMK,EAAYxD,EAAUtC,SAAWsC,EAAUhB,UAAY,GACvDyE,EAASzD,EAAUtC,SAAWsC,EAAUhB,UAAY,GAAM,IAC1D0E,EAAY1D,EAAUtC,SAAWsC,EAAUd,aAAe,IAAM,GAChEyE,EAAY3D,EAAUtC,SAAWsC,EAAUd,aAAe,IAE1DoC,EACN,CAEI,CAAC4B,EAAKnT,KAAK2S,GAAG,IAAKc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,IAAKc,IACpD,CAACN,EAAKnT,KAAK2S,GAAG,IAAKc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,IAAKc,IACpD,CAACN,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,EAAGc,IAChD,CAACN,EAAKnT,KAAK2S,GAAG,GAAIc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,GAAIc,IAClD,CAACN,EAAK,EAAGM,GAAY,EAAGF,EAAK,EAAGE,IAChC,CAACN,EAAKnT,KAAK2S,GAAG,GAAIc,GAAY,GAAIF,EAAKvT,KAAK2S,GAAG,GAAIc,IACnD,CAACN,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,GAAIF,EAAKvT,KAAK2S,GAAG,EAAGc,IACjD,CAACN,EAAKnT,KAAK2S,GAAG,IAAKc,GAAY,GAAIF,EAAKvT,KAAK2S,GAAG,IAAKc,IACrD,CAACN,EAAKnT,KAAK2S,GAAG,IAAKc,GAAY,GAAIF,EAAKvT,KAAK2S,GAAG,IAAKc,IAErD,CAACN,EAAKnT,KAAK2S,GAAG,IAAKe,GAASC,EAAWJ,EAAKvT,KAAK2S,GAAG,IAAKe,IACzD,CAACP,EAAKnT,KAAK2S,GAAG,IAAKe,GAASC,EAAWJ,EAAKvT,KAAK2S,GAAG,IAAKe,IACzD,CAACP,EAAKnT,KAAK2S,GAAG,EAAGe,GAASC,EAAWJ,EAAKvT,KAAK2S,GAAG,EAAGe,IACrD,CAACP,EAAKnT,KAAK2S,GAAG,GAAIe,GAASC,EAAWJ,EAAKvT,KAAK2S,GAAG,GAAIe,IACvD,CAACP,EAAK,EAAGO,GAASC,EAAWJ,EAAK,EAAGG,IACrC,CAACP,EAAKnT,KAAK2S,GAAG,GAAIe,GAASC,GAAYJ,EAAKvT,KAAK2S,GAAG,GAAIe,IACxD,CAACP,EAAKnT,KAAK2S,GAAG,EAAGe,GAASC,GAAYJ,EAAKvT,KAAK2S,GAAG,EAAGe,IACtD,CAACP,EAAKnT,KAAK2S,GAAG,IAAKe,GAASC,GAAYJ,EAAKvT,KAAK2S,GAAG,IAAKe,IAC1D,CAACP,EAAKnT,KAAK2S,GAAG,IAAKe,GAASC,GAAYJ,EAAKvT,KAAK2S,GAAG,IAAKe,IAE1D,CAACD,EAAU,EAAGG,EAAW,IAGvBC,EACN,CACI,EAAEV,GAAMnT,KAAK2S,GAAG,EAAGc,GAAY,GAAIF,GAAMvT,KAAK2S,GAAG,EAAGc,IACpD,EAAEN,EAAK,EAAGM,GAAY,GAAIF,EAAK,EAAGE,IAClC,EAAEN,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,GAAIF,EAAKvT,KAAK2S,GAAG,EAAGc,IAClD,EAAEN,EAAK,EAAEnT,KAAK2S,GAAG,GAAIc,GAAY,GAAIF,EAAK,EAAEvT,KAAK2S,GAAG,GAAIc,IACxD,CAACN,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,GAAIF,EAAKvT,KAAK2S,GAAG,EAAGc,IACjD,CAACN,EAAK,EAAEnT,KAAK2S,GAAG,GAAIc,GAAY,GAAIF,EAAK,EAAEvT,KAAK2S,GAAG,GAAIc,IACvD,CAACN,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,GAAIF,EAAKvT,KAAK2S,GAAG,EAAGc,IACjD,CAACN,EAAK,EAAGM,GAAY,GAAIF,EAAK,EAAGE,IACjC,CAACN,GAAMnT,KAAK2S,GAAG,EAAGc,GAAY,GAAIF,GAAMvT,KAAK2S,GAAG,EAAGc,IACnD,CAAC,EAAa,IAAVG,EAA0B,MAAVH,IAGlBK,EAAa,CAEf,EAAEX,EAAKnT,KAAK2S,GAAG,IAAKc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,IAAKc,IACrD,EAAEN,EAAKnT,KAAK2S,GAAG,IAAKc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,IAAKc,IACrD,CAACN,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,EAAGc,IAChD,CAACN,EAAKnT,KAAK2S,GAAG,IAAKc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,IAAKc,IACpD,CAACN,EAAKnT,KAAK2S,GAAG,IAAKc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,IAAKc,IACpD,CAAC,EAAGG,EAAU,EAAGH,EAAU,MAGzBM,EAAiB,CAEnB,EAAEZ,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,EAAGc,IACjD,EAAEN,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,EAAGc,IACjD,CAACN,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,EAAGc,IAChD,CAACN,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,EAAGc,IAChD,CAACN,EAAKnT,KAAK2S,GAAG,EAAGc,GAAY,EAAGF,EAAKvT,KAAK2S,GAAG,EAAGc,IAChD,CAAC,EAAGG,EAAU,IAAKH,EAAU,MAG3BO,EAAa,GACVzU,EAAI,EAAGA,EAAIgS,EAASxR,OAAQR,IAAI,CACrC,IAAImH,EAAO,GACXA,EAAK5G,MAAM,EAAIyR,EAAShS,GAAG,GAAGgS,EAAShS,GAAG,GAAGgS,EAAShS,GAAG,IACzDyU,EAAWlU,KAAK4G,GAIpB,IADA,IAAMuN,EAAa,GACV1U,EAAI,EAAGA,EAAIuU,EAAW/T,OAAO,EAAGR,IAAI,CACzC,IAAImH,EAAO,GACXA,EAAK5G,KAAKgU,EAAWvU,GAAG,GAAGuU,EAAWvU,GAAG,IAAK,EAAIuU,EAAWvU,GAAG,IAChE0U,EAAWnU,KAAK4G,GAEpBuN,EAAWnU,KAAK,CAAC,EAAG8T,EAAU,EAAgB,KAAZH,IAElC,IAAMS,EAAajE,EAAUtC,SAAWsC,EAAUd,aAC5CC,EACN,kCACI,uBAAM6D,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUA,EAAUC,QAAS,SACnC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUA,EAAUC,QAAS,SACnC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,gBAEhF,uBAAM6M,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUyC,EAAYxC,QAAS,SACrC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUyC,EAAYxC,QAAS,SACrC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,gBAEhF,uBAAM6M,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUuC,EAAYtC,QAAS,eACrC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUuC,EAAYtC,QAAS,eACrC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,gBAEhF,uBAAM6M,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAU0C,EAAYzC,QAAS,eACrC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAU0C,EAAYzC,QAAS,eACrC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,mBAI9E+N,EAAW,kCACb,uBAAMlB,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUsC,EAAcrC,QAAS,aACvC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUsC,EAAcrC,QAAS,aACvC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,gBAEhF,uBAAM6M,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUwC,EAAgBvC,QAAS,eACzC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAEjI,uBAAMG,SAAU,CAAC,EAAEiB,EAAW,GAA9B,UACI,cAAC,GAAD,CAAM3C,SAAUwC,EAAgBvC,QAAS,eACzC,mCAAmBhU,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,mBAI9EgO,EAAQ1C,mBAAS,kBAAM,IAAItL,UAAe,CAAC6J,EAAUtC,WACrD0G,EAA6B,GAArBpE,EAAUtC,SAClBrO,EAAY,GAAR+U,EACVD,EAAME,OAAO,EAAU,KAAND,GACjBD,EAAMG,OAAa,GAANF,EAAW,GACxBD,EAAMI,iBAAiBH,EAAQA,EAAM,EAAS,IAANA,EAAU,EAAEA,EAAe,IAARA,GAC3DD,EAAMI,iBAAiBH,EAAM,EAAW,IAARA,GAAcA,EAAM,EAAEA,GACtDD,EAAMG,QAAQF,EAAM,IAAKA,EAAS,IAAI/U,GACtC8U,EAAMI,iBAAiBH,EAAM,EAAa,IAARA,EAAe/U,EAAG+U,EAAO/U,EAAE,IAAe,IAAR+U,EAAe/U,EAAE,KACrF8U,EAAMI,iBAAkBH,EAAQA,EAAM,IAAM/U,EAAE,IAAY,IAAN+U,EAAU,EAAK/U,EAAE,IAAK+U,EAAO/U,EAAE,IAAKA,EAAE,KAE1F,IAxLwBmV,EAAKzX,EAwLvB0X,EAAQL,EAAM,EAEdM,EAAkB,CACpBC,MAAO,IACPF,MAAOA,EACPG,cAAc,GAIZjN,EAASqI,EAAUtC,SAAWsC,EAAUd,aAAsB,IAANkF,EAAeT,EAAU,EAAK,EACtFkB,EAAY,uBAAM7B,SAAU,EAAEyB,EAAM,EAAE9M,EAAQ6L,EAAU,GAAKP,SAAU,CAAC,EAAGlT,KAAK2S,GAAG,EAAG,GAA1E,UACd,iCAAiBD,KAAM,CAAC0B,EAAOO,KAC/B,mCAAmBnX,MAAO2N,EAAQ8E,EAAU5O,cAAe,UAAWuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAI3HiC,GAxMkBN,EAwMgBxE,EAAUtC,SAAS,EAAK,GAxMnC3Q,EAwMwC,EAtM7D,uBAAMiW,SAAY,CAAC,EAAEjW,EAAO,GAA5B,UACI,kCAAkB0V,KAAM,CAAC+B,EAAKA,EAAK,IAAM,GAAI,GAAG,EAAK,EAAa,EAAVzU,KAAK2S,MAC7D,mCAAmBnV,MAAM,YATjB,EA+MKwX,mBAAS,GA/Md,oBA+MfC,EA/Me,KA+MTC,EA/MS,OAgNKF,mBAAS,GAhNd,oBAgNfG,EAhNe,KAgNTC,EAhNS,OAiNKJ,mBAAS,GAjNd,oBAiNfK,EAjNe,KAiNTC,EAjNS,QAkNIN,mBAAS,GAlNb,sBAkNfO,GAlNe,MAkNVC,GAlNU,MAoNdC,GAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,GAAOvV,KAAKE,IAAIqV,GAAO,GAAG,KAC1BC,GAAWD,IACX,MACR,IAAK,IACGA,GAAOvV,KAAKsE,IAAIiR,GAAO,EAAE,IACzBC,GAAWD,IACX,MACR,IAAK,IACGG,EAAME,iBAENT,EAAQ,EACRE,EAAQ,EACRE,GAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,EAAWD,GACXG,GAAWD,MAe3B,OATApF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOkM,iBAAiB,UAAWJ,IAG5B,WACH9L,OAAOmM,oBAAoB,UAAWL,OAE3C,IAGC,wBAAOxC,SAAU,CAAC,GAAG,EAAEsC,IAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAArD,UACK5C,GACCxC,EAAUb,OAAS+E,EACpBlE,EAAUb,OAASA,GAClBjE,GAAU4J,EACX9E,EAAU/O,YAAc8R,EACxB8B,Q,6BCnEExD,gBA/LI,WAAO,IAAD,EAEkBf,KAAjCN,EAFe,EAEfA,UAAWH,EAFI,EAEJA,kBAEnBY,qBAAU,WACRZ,EAAkB5E,QAAO,EAAM,SAC/B4E,EAAkBlD,oBAClBkD,EAAkB9E,SAAS,OAAQiF,EAAUb,SAC5C,CAACa,EAAUb,QAEd,IA2CM2G,EAAY,CAChB9C,SAAU,WACVpL,MAAO,OACP7K,OAAQ,EAERgZ,aAAc,EACd3J,gBAAiB,QAGnB,SAAS4J,EAAT,GAGI,IAAD,IAFDC,OAAUC,EAET,EAFSA,GAAIC,EAEb,EAFaA,MAAOC,EAEpB,EAFoBA,QACrBC,EACC,EADDA,eAEA,OACE,6CAAKzY,UAAY,QACfd,MAAO,CACLwZ,KAAK,GAAD,OAAKF,EAAL,KACJpD,SAAU,WACVuD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,YAENN,EAAeH,IAVrB,aAYE,qBAAKpZ,MAAO,CAAE8Z,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGvD,SAAS,WAAYyD,OAAQ,EAAGlZ,MAAO,QAAtH,SACG4Y,OAMT,IAAMW,EAAkB,eAAC,KAAD,CAAQC,UAxCZ,CAClB/D,SAAU,WACVpL,MAAO,OACP7K,OAAQ,IAqC8Cia,OAAQ,CAAC,EAAG,IAAKC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAAClH,EAAUtC,UAAWmE,SAAU,SAACtK,GAAD,OAASyI,EAAUlC,gBAAgBvG,EAAI,KAAlJ,UACtB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUpBmB,EAAoB,qBAAKzZ,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SAC1B,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASyI,EAAU3N,kBAAkBkF,IAC/CgQ,QAxFc,CACd,CACIC,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,YAiF7BC,qBAAsB1H,EAAU/O,WAAa,EAAI,EACjDmL,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAIlBC,EAAe,qBAAKja,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SACrB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASyI,EAAUX,aAAa9H,IAC1CgQ,QA/GmB,CACnB,CACIC,MAAO,gBACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,SACPrB,OAAO,EACPsB,wBAAyB,YAwG7BC,qBAAsB1H,EAAUb,MAAO,EAAI,EAC3C/C,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAIhBE,EAAe,qBAAKla,UAAU,SAASd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAApD,SACjB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASyI,EAAUzN,aAAagF,IAC1CgQ,QAlGY,CAClB,CACIC,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,YA2FvBC,qBAAsB1H,EAAUxN,MAAQ,EAAI,EAC5C4J,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAI5B,OACE,mCACE,sBAAKha,UAAU,YAAYd,MAAO,CAACib,WAAY,UAAWta,QAAS,OAAQiT,cAAc,MAAO9I,MAAO,OAAQ7K,OAAQ,QAAvH,UACE,sBAAKa,UAAU,gBAAgBd,MAAO,CAACib,WAAY,UAAWnQ,MAAO,MAAO7K,OAAQ,OAAOE,MAAM,QAAjG,UACE,eAAC,KAAD,CAAQ+a,OAAQ,CAAChF,SAAS,CAAC,EAAG,EAAG,IAAKiF,IAAI,GAAIC,OAAQ,IAAI,IAAKC,KAAM,GAAIC,IAAK,KAAOtb,MAAO,CAACib,WAAY,OAAQhb,OAAQ,QAASgZ,aAAa,GAAIS,UAAU,KAAMD,WAAW,KAAK3O,MAAM,OAAzL,UACE,2BAAWoL,SAAU,EAAE,IAAK,IAAK,IAAKqF,UAAa,MACnD,2BAAWrF,SAAU,CAAC,GAAI,GAAI,IAAKqF,UAAa,MAChD,2BAAWrF,SAAU,EAAE,KAAM,IAAK,KAAMqF,UAAa,KACrD,2BAAWrF,SAAU,CAAC,KAAM,IAAK,KAAMqF,UAAW,KAClD,2BAAWrF,SAAU,EAAE,GAAI,EAAG,IAAKqF,UAAW,KAC9C,cAAC,GAAD,CAAMrI,UAAWA,EAAW9E,QAAQ,OAEtC,sBAAKtN,UAAU,uBAAf,UACE,qBAAKd,MAAO,CAACC,OAAQ,MACrB,uCAAS,qCAAT,MAA0B,qCAA1B,UAA+C,qCAA/C,0BAAoF,uBAAK,qCAAzF,QAA4G,qCAA5G,yBAAgJ,uBAAhJ,OAAyJ,yCAAzJ,kCACA,qBAAKD,MAAO,CAACC,OAAQ,YAGzB,sBAAKa,UAAU,iBAAiBd,MAAO,CAAC8K,MAAO,MAAO7K,OAAQ,OAAQub,SAAU,UAAWrb,MAAM,SAAjG,UACE,uBACA,uBACA,uBACA,mBAAGW,UAAU,aAAb,mBACCka,EACD,uBACA,mBAAGla,UAAU,OAAb,2BACA,qBAAKd,MAAO,CAAC8K,MAAM,MAAO2O,WAAW,MAArC,SACGO,IAEH,uBACA,sBAAKha,MAAO,CAACW,QAAS,eAAgBmK,MAAO,OAA7C,UACA,mBAAGhK,UAAU,OAAb,mBACCia,KAED,sBAAK/a,MAAO,CAACW,QAAS,eAAgBmK,MAAO,OAA7C,UACA,mBAAGhK,UAAU,OAAb,wBACCyZ,KAED,qBAAKzZ,UAAU,cAAcd,MAAO,CAAC8K,MAAO,GAAI2Q,aAAa,IAA7D,SACE,cAAC7b,EAAD,UACE,cAACC,EAAD,CAAYG,MAAO,CAACib,WAAY,WAAYS,QAAS,kBAAM3I,EAAkB5E,UAAUpO,GAAG,aAA1F,SACE,mBAAGe,UAAY,aAAf,mCClDDyT,gBA1IF,SAAC1B,GAAW,IACdiB,EAAQjB,EAARiB,KACDxB,EAAUqC,mBAAQ,kBAAM,IAAItL,iBAAsBmM,KAAKD,MAAO,IAK9DlN,EAAWyL,EAAKzP,QAAQ,EACxBiE,GAAe,EAAID,EACnBE,EAAeuL,EAAKzP,QAAQyP,EAAK7T,OAEjCuI,EAASvF,KAAKE,IAAI,EAAE2Q,EAAKtQ,KAAO+E,GAChCE,EAAYxF,KAAKE,IAAI,EAAE2Q,EAAKlQ,QAAU2E,GAEtCG,EAAOzF,KAAKE,IAAI,EAAG2Q,EAAKnQ,GAAK4E,GAC7BI,EAAUmL,EAAK9P,KAAK,IAAO8P,EAAKzP,QAAUgE,EAE1CO,EAAO3F,KAAKE,IAAI,EAAG2Q,EAAKpQ,GAAK6E,GAC7BM,EAAUiL,EAAK/P,KAAK,IAAO+P,EAAKzP,QAAUgE,EAE1CS,EAAO7F,KAAKE,IAAI,EAAE2Q,EAAKrQ,GAAK8E,GAC5BQ,EAAU+K,EAAKhQ,KAAK,IAAOgQ,EAAKzP,QAAUgE,EAE5CsT,EAAe,yBACfC,EAAkB,yBAClBC,EAAmB,yBAEvB,SAASC,EAAepE,EAAKzX,GACzB,OACI,uBAAMiW,SAAY,CAAC,EAAEjW,EAAO,GAA5B,UACI,kCAAkB0V,KAAM,CAAC+B,EAAKA,EAAK,IAAM,GAAI,GAAG,EAAK,EAAa,EAAVzU,KAAK2S,MAC7D,mCAAmBnV,MAAM,WAKrC,IAAMsb,EAAcjI,EAAK5P,QAAU4X,EAAgBtT,EAAO,EAAK,GAAKH,GAAYyT,EAAgBtT,EAAO,EAAK,GAAKH,GAC3G2T,EAAiBlI,EAAK3P,WAAa2X,EAAgBrT,EAAU,EAAK,GAAKH,GAAewT,EAAgBrT,EAAU,EAAK,GAAKH,GAC1H2T,EAAYH,EAAgBpT,EAAK,EAAK,GAAKC,GAC3CuT,EAAYJ,EAAgBlT,EAAK,EAAK,GAAKC,GAC3CsT,EAAYL,EAAgBhT,EAAK,EAAK,GAAKC,GAE7C+K,EAAK5P,UACLyX,EAAe,uBAAMzF,SAAY,CAAC,EAAE7N,EAAS,GAAI,GAAI8N,SAAY,CAAC,KAAK,EAAE,GAA1D,UACf,+BAAeR,KAAM,CAAEnN,EAAO,EAAG,GAAI,GAAI,GAAG,MAC5C,mCAAmB/H,MAAM,gBAGzBqT,EAAK3P,aACLyX,EAAkB,uBAAM1F,SAAY,CAAC,EAAE5N,EAAY,GAAI,GAAI6N,SAAY,CAAC,KAAK,EAAE,GAA7D,UAClB,+BAAeR,KAAM,CAAElN,EAAU,EAAG,GAAK,GAAK,GAAI,MAClD,mCAAmBhI,MAAM,gBAI7B,IAAMwI,EAAS6K,EAAK3L,kBAvDA,EAyDK8P,mBAAS,GAzDd,oBAyDfC,EAzDe,KAyDTC,EAzDS,OA0DKF,mBAAS,GA1Dd,oBA0DfG,EA1De,KA0DTC,EA1DS,OA2DKJ,mBAAS,GA3Dd,oBA2DfK,EA3De,KA2DTC,EA3DS,OA4DIN,mBAAS,GA5Db,oBA4DfO,EA5De,KA4DVC,EA5DU,KA8DhB3E,EAAK1P,cACLyX,EAAmB,uBAAM3F,SAAY,CAAC,EAAE5N,EAAY,GAAjC,UACf,kCAAkBqN,KAAM,CAAClN,EAAU,EAAGA,EAAU,EAAG,GAAK,MACxD,mCAAoBmM,IAAKtC,QAIjC,IAAMoG,EAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,EAAOvV,KAAKE,IAAIqV,EAAO,GAAG,KAC1BC,EAAWD,GACX,MACR,IAAK,IACGA,EAAOvV,KAAKsE,IAAIiR,EAAO,EAAE,IACzBC,EAAWD,GACX,MACR,IAAK,IACGG,EAAME,iBAENT,EAAQ,EACRE,EAAQ,EACRE,EAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,EAAWD,GACXG,EAAWD,KAe3B,OATApF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOkM,iBAAiB,UAAWJ,GAG5B,WACH9L,OAAOmM,oBAAoB,UAAWL,MAE3C,IAGC,wBAAOxC,SAAU,CAAC,EAAE,EAAEsC,GAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAApD,UACI,iCACI,+BAAe3C,KAAM,CAAC1M,EAAQ,GAAI,EAAG,EAAEhG,KAAK2S,MAC5C,mCAAmBhB,IAAOtC,EAAUuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE/F,iCACI,+BAAeJ,KAAM,CAAC1M,EAAQ,GAAI,EAAG,EAAEhG,KAAK2S,MAC5C,mCAAmBhB,IAAOtC,EAAUuD,KAAQxM,gBAE/CyK,EAAK5P,SAAWyX,EAChB7H,EAAK3P,YAAcyX,EACnB9H,EAAK1P,aAAeyX,EACpBG,EACAC,EACAC,EACAC,EACAJ,QCgQExH,gBA/XI,WAAO,IAAD,EAEiBf,KAAhCV,EAFe,EAEfA,UAAWC,EAFI,EAEJA,kBAEnBY,qBAAU,WACRZ,EAAkB5E,QAAO,EAAM,SAC/B4E,EAAkBlD,oBAClBkD,EAAkB9E,SAAS,UAC1B,IAEH,IAAMmO,EAAc,CAClBlG,SAAU,WACVpL,MAAO,OACP7K,OAAQ,IAIJ+Y,EAAY,CAChB9C,SAAU,WACVpL,MAAO,OACP7K,OAAQ,EAERgZ,aAAc,EACd3J,gBAAiB,QAGnB,SAAS4J,EAAT,GAGI,IAAD,IAFDC,OAAUC,EAET,EAFSA,GAAIC,EAEb,EAFaA,MAAOC,EAEpB,EAFoBA,QACrBC,EACC,EADDA,eAEA,OACE,6CAAKzY,UAAY,QACfd,MAAO,CACLwZ,KAAK,GAAD,OAAKF,EAAL,KACJpD,SAAU,WACVuD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,YAENN,EAAeH,IAVrB,aAYE,qBAAKpZ,MAAO,CAAE8Z,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGvD,SAAS,WAAYyD,OAAQ,EAAGlZ,MAAO,QAAtH,SACG4Y,OAMT,SAASgD,EAAT,GAGI,IAAD,IAFDlD,OAAUC,EAET,EAFSA,GAAIC,EAEb,EAFaA,MAAOC,EAEpB,EAFoBA,QACrBC,EACC,EADDA,eAEA,MAAU,QAANH,GAAsB,QAANA,EAEhB,qBAAKtY,UAAY,QACfd,MAAO,CACLwZ,KAAK,GAAD,OAAKF,EAAL,KACJpD,SAAU,WACVuD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,WARZ,SAWE,qBAAK7Z,MAAO,CAAE8Z,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGvD,SAAS,WAAYyD,OAAQ,EAAGlZ,MAAO,QAAtH,SACG4Y,MAML,6CAAKvY,UAAY,QACfd,MAAO,CACLwZ,KAAK,GAAD,OAAKF,EAAL,KACJpD,SAAU,WACVuD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,YAENN,EAAeH,IAVrB,aAYE,qBAAKpZ,MAAO,CAAE8Z,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGvD,SAAS,WAAYyD,OAAQ,EAAGlZ,MAAO,QAAtH,SACG4Y,OAOX,IAAMiD,EAAe,eAAC,KAAD,CAAQrC,UAAWmC,EAAalC,OAAQ,CAAC,GAAI,KAAMC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACtH,EAAU7S,QAAS8U,SAAU,SAACtK,GAAD,OAASqI,EAAUnN,cAAc8E,EAAI,KAAhJ,UACnB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBmD,EAAc,eAAC,KAAD,CAAQtC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACtH,EAAUtP,MAAOuR,SAAU,SAACtK,GAAD,OAASqI,EAAUlN,YAAY6E,EAAI,KAA3I,UAClB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBoD,EAAY,eAAC,KAAD,CAAQvC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACtH,EAAUrP,IAAKsR,SAAU,SAACtK,GAAD,OAASqI,EAAUjN,UAAU4E,EAAI,KAAvI,UAChB,cAAC,KAAD,UACC,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG7B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBqD,EAAY,eAAC,KAAD,CAAQxC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACtH,EAAUpP,IAAKqR,SAAU,SAACtK,GAAD,OAASqI,EAAUhN,UAAU2E,EAAI,KAAvI,UAChB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBsD,EAAY,eAAC,KAAD,CAAQzC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACtH,EAAUnP,IAAKoR,SAAU,SAACtK,GAAD,OAASqI,EAAU/M,UAAU0E,EAAI,KAAvI,UAChB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBuD,EAAiB,eAAC,KAAD,CAAQ1C,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACtH,EAAUlP,SAAUmR,SAAU,SAACtK,GAAD,OAASqI,EAAU9M,eAAeyE,EAAI,KAAjJ,UACrB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBwD,EAAU,eAAC,KAAD,CAChB3C,UAAWmC,EACXlC,OAAQ,CAAC,EAAG,KACZ9M,KAAM,EACNgN,OAAQ,CAAC,EAAGtH,EAAU9O,KAAM8O,EAAU/O,KAAM+O,EAAUhP,KAAM,KAC5DiR,SAAU,SAACtK,GAAD,OAAOqI,EAAU7M,iBAAiBwE,IAC5C0P,KAAM,EANU,UAQhB,qBAAKna,MAAOgZ,IACZ,cAAC,KAAD,UACG,gBAAGsB,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACkD,EAAD,CAEElD,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUhBqB,EAAU,CACd,CACIC,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,YAgBzBkC,EAAiB,qBAAK/b,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SACnB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASqI,EAAUxN,eAAemF,IAC5CgQ,QAASA,EACTG,qBAAsB9H,EAAU5O,QAAU,EAAI,EAC9CoL,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAItBP,EAAoB,qBAAKzZ,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SACtB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASqI,EAAUvN,kBAAkBkF,IAC/CgQ,QAASA,EACTG,qBAAsB9H,EAAU3O,WAAa,EAAI,EACjDmL,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAItBgC,EAAqB,qBAAKhc,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SACvB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASqI,EAAUtN,mBAAmBiF,IAChDgQ,QAASA,EACTG,qBAAsB9H,EAAU1O,YAAc,EAAI,EAClDkL,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAItBE,EAAe,qBAAKla,UAAU,SAASd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAApD,SACjB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASqI,EAAUrN,aAAagF,IAC1CgQ,QAhDY,CAClB,CACIC,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,YAyCvBC,qBAAsB9H,EAAUpN,MAAQ,EAAI,EAC5C4J,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAI5B,OACE,mCACE,sBAAKha,UAAU,YAAYd,MAAO,CAACib,WAAY,UAAWta,QAAS,OAAQiT,cAAc,MAAO9I,MAAO,OAAQ7K,OAAQ,QAAvH,UACE,sBAAKa,UAAU,gBAAgBd,MAAO,CAACib,WAAY,UAAWnQ,MAAO,MAAO7K,OAAQ,OAAOE,MAAM,QAAjG,UACE,eAAC,KAAD,CAAQ+a,OAAQ,CAAChF,SAAS,CAAC,EAAG,EAAG,KAAMiF,IAAI,GAAIC,OAAQ,IAAI,IAAKC,KAAM,GAAIC,IAAK,KAAOtb,MAAO,CAACib,WAAY,OAAQhb,OAAQ,MAAOgZ,aAAa,GAAIS,UAAU,KAAMD,WAAW,KAAK3O,MAAM,OAAxL,UAEE,2BAAWoL,SAAU,EAAE,IAAK,IAAK,IAAKqF,UAAa,MACnD,2BAAWrF,SAAU,CAAC,IAAK,GAAI,IAAKqF,UAAa,MACjD,2BAAWrF,SAAU,EAAE,KAAM,IAAK,KAAMqF,UAAa,KACrD,2BAAWrF,SAAU,CAAC,KAAM,IAAK,KAAMqF,UAAW,KAClD,2BAAWrF,SAAU,EAAE,GAAI,EAAG,IAAKqF,UAAW,KAG9C,cAAC,GAAD,CAAMzH,KAAMhB,OAEd,sBAAKhS,UAAU,mBAAf,UACE,uBACA,uCAAS,qCAAT,MAA0B,qCAA1B,UAA+C,qCAA/C,0BAAoF,uBAAK,qCAAzF,QAA4G,qCAA5G,yBAAgJ,uBAAhJ,OAAyJ,yCAAzJ,wCAGJ,sBAAKA,UAAU,iBAAiBd,MAAO,CAACib,WAAY,UAAWnQ,MAAO,MAAO7K,OAAQ,OAAQub,SAAU,UAAWrb,MAAM,SAAxH,UACE,uBACA,mBAAGW,UAAU,aAAb,mBACCka,EACD,sBAAKhb,MAAO,CAACW,QAAQ,eAAgBmK,MAAO,QAA5C,UACE,sBAAK9K,MAAO,CAACib,WAAY,UAAWnQ,MAAO,QAAS3K,MAAO,OAAQsb,aAAa,GAAIhC,WAAW,GAAIC,UAAU,IAA7G,UACE,mBAAG5Y,UAAU,OAAb,oBACCwb,EACD,mBAAGxb,UAAU,OAAb,0BACC0b,EACD,mBAAG1b,UAAU,OAAb,0BACC4b,KAEH,sBAAK1c,MAAO,CAACib,WAAY,UAAWnQ,MAAO,QAAS3K,MAAO,QAASsb,aAAa,GAAIjb,YAAY,GAAIkZ,UAAU,IAA/G,UACE,mBAAG5Y,UAAU,OAAb,0BACCyb,EACD,mBAAGzb,UAAU,OAAb,0BACC2b,EACD,mBAAG3b,UAAU,OAAb,6BACC6b,QAGL,mBAAG7b,UAAU,OAAb,oCACA,qBAAKd,MAAO,CAAC8K,MAAM,MAAO2O,WAAW,MAArC,SACGmD,IAEH,sBAAK5c,MAAO,CAACG,MAAO,OAAQ2K,MAAO,QAAS0Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAG3a,UAAU,aAAb,qBACC+b,KAEH,sBAAK7c,MAAO,CAACG,MAAO,OAAQ2K,MAAO,QAAS0Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAG3a,UAAU,aAAb,wBACCyZ,KAEH,sBAAKva,MAAO,CAACG,MAAO,QAAS2K,MAAO,QAAS0Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA5F,UACE,mBAAG3a,UAAU,aAAb,0BACCgc,KAEH,qBAAK9c,MAAO,CAAC8K,MAAO,GAAI2Q,aAAa,GAAI9a,QAAQ,eAAgB+Y,UAAW,IAA5E,SACE,cAAC9Z,EAAD,UACE,cAACC,EAAD,CAAYG,MAAO,CAACib,WAAY,WAAYS,QAAS,kBAAM3I,EAAkB5E,UAAUpO,GAAG,aAA1F,SACE,mBAAGe,UAAY,aAAf,mCCxJDyT,gBArOA,SAAC1B,GAAW,IAChBG,EAAeH,EAAfG,YACDV,EAAUqC,mBAAQ,kBAAM,IAAItL,iBAAsBmM,KAAKD,MAAO,IAE9DlN,EAAW2K,EAAY3O,QAAQ,EAC/BiE,GAAe,EAAID,EACnBE,EAAeyK,EAAY3O,QAAQ2O,EAAY/S,OAE/CuI,EAASvF,KAAKE,IAAI,EAAE6P,EAAYxP,KAAO+E,GACvCE,EAAYxF,KAAKE,IAAI,EAAE6P,EAAYpP,QAAU2E,GAE7C0I,EAAahO,KAAKE,IAAI,EAAG6P,EAAYpC,SAAWrI,GAKlDoT,EAAe,yBACfC,EAAkB,yBAClBzC,EAAS,yBACTlU,EAAM,yBACNE,EAAe,yBACf0W,EAAmB,yBACnBkB,EAAgB,yBAepB,GAbI/J,EAAY9O,UACZyX,EAAe,uBAAMzF,SAAY,CAAC,EAAE7N,EAAS,GAAI,GAAI8N,SAAY,CAAC,KAAK,EAAE,GAA1D,UACf,+BAAeR,KAAM,CAAEnN,EAAO,EAAG,IAAK,IAAK,GAAG,MAC9C,mCAAmB/H,MAAM,gBAGzBuS,EAAY7O,aACZyX,EAAkB,uBAAM1F,SAAY,CAAC,EAAE5N,EAAY,GAAI,GAAI6N,SAAY,CAAC,KAAK,EAAE,GAA7D,UAClB,+BAAeR,KAAM,CAAElN,EAAU,EAAG,IAAM,IAAM,GAAI,MACpD,mCAAmBhI,MAAM,gBAIzBuS,EAAY9N,WAAW,CACvB,IAAM8X,EAAoB,EAAV/Z,KAAK2S,GACf/D,EAAY,GAAM5O,KAAK2S,GACvBhE,EAAwB,IAAV3O,KAAK2S,GAEzBuD,EACA,kCACI,uBAAMjD,SAAU,CAAC,EAAE7N,EAAS,GAAI8N,SAAU,EAAElT,KAAK2S,GAAG,EAAE,EAAE,GAAxD,UACI,gCAAgBD,KAAM,CAACnN,EAAO,EAAG,GAAI,GAAI,EAAGwU,EAASpL,EAAaC,KAClE,mCAAmB+C,IAAOtC,EAAUuD,KAAQxM,iBAEhD,uBAAM6M,SAAU,CAAC,EAAE7N,EAAS,GAAK8N,SAAU,EAAElT,KAAK2S,GAAG,EAAE,EAAE,GAAzD,UACI,gCAAgBD,KAAM,CAACnN,EAAO,EAAG,GAAI,GAAI,EAAGwU,EAASpL,EAAaC,KAClE,mCAAmB+C,IAAOtC,EAAUuD,KAAQxM,mBAKpD2J,EAAY5O,cACZyX,EAAmB,uBAAM3F,SAAY,CAAC,EAAE5N,EAAY,GAAjC,UACf,kCAAkBqN,KAAM,CAAClN,EAAU,EAAGA,EAAU,EAAG,GAAK,MACxD,mCAAoBmM,IAAKtC,QA1DX,IA8DhB2K,EA9DgB,kDA+DlB,WAAYC,GAAQ,IAAD,8BACjB,gBACKA,MAAQA,EAFI,EA/DD,qDAmET3a,GACP,IACM4a,EAAKla,KAAKE,KAAK,GAAKF,KAAKwT,IAAI,EAAIxT,KAAK2S,GAAKrT,IAC3C6a,EAAKna,KAAKsT,IAAI,EAAItT,KAAK2S,GAAKrT,GAClC,OAAO,IAAI8G,UAHA,EAGkB8T,EAAIC,GAAIC,eAAeC,KAAKJ,WAvEzC,GA8DU7T,SAahC,GAAI2J,EAAY7N,aAAa,CACzB,IAAMoY,EAAa/U,EAAO,EACpBgV,EAAO,IAAIP,EAAkBM,GAE7BE,EAAWxa,KAAKsE,IAAI,GAAKgW,EAAW,IAI1CpY,EACA,kCACA,uBAAM+Q,SAAU,EAAG1N,EAAO,EAAa,EAATiV,EAAapV,EAAWoV,EAAY,GAAIF,EAAa,GAAnF,UACI,8BAAc5H,KAAM,CAAC6H,EARZ,GAQwBC,EANpB,EACF,SAMX,mCAAmB7I,IAAOtC,EAAUuD,KAAQxM,iBAEhD,uBAAM6M,SAAU,CAAE1N,EAAO,EAAa,EAATiV,EAAapV,EAAWoV,EAAY,GAAIF,EAAa,GAAlF,UACI,8BAAc5H,KAAM,CAAC6H,EAZZ,GAYwBC,EAVpB,EACF,SAUX,mCAAmB7I,IAAOtC,EAAUuD,KAAQxM,oBAKpD,GAAI2J,EAAY/N,IAAI,CAChB,IACMyY,EAAc,IACdC,EAFY,EAEDnV,EAAmB,EAAKvF,KAAKwT,IAAIxT,KAAK2S,GAAK8H,GACtDE,EAAWvV,EAHC,EAGWG,EAAkB,EAAKvF,KAAK4a,IAAI5a,KAAK2S,GAAK8H,GACjEI,EAASH,EAAQ,GACjBI,EAAYH,EAAWD,EAAUG,EAAS,GAEhD7Y,EACA,kCACI,uBAAMiR,SAAU,CAAC,EAAE0H,EAAS,GAAI,GAAhC,UACI,gCAAgBjI,KAAM,CAACgI,EAAS,GAAI,GAAI,EAAa,EAAV1a,KAAK2S,GAAQ,EAAG3S,KAAK2S,GAAK8H,KACrE,mCAAmB9I,IAAOtC,EAAUuD,KAAQxM,iBAEhD,uBAAM6M,SAAU,CAAC,EAAE0H,EAAS,GAA5B,UACI,gCAAgBjI,KAAM,CAACgI,EAAS,GAAI,GAAI,EAAa,EAAV1a,KAAK2S,GAAQ,EAAG3S,KAAK2S,GAAK8H,KACrE,mCAAmB9I,IAAOtC,EAAUuD,KAAQxM,gBAEhD,uBAAM6M,SAAU,CAAC,EAAE6H,EAAU,GAA7B,UACI,gCAAgBpI,KAAM,CAACmI,EAAQ,GAAI,MACnC,mCAAmBlJ,IAAOtC,EAAUuD,KAAQxM,oBAKxD,IAAK2J,EAAY5O,YAAY,CACzB,IAAM4Z,EAAiB,GACjBC,EAAcxV,EAAU,EAAKxF,KAAKwT,IAAIxT,KAAK2S,GAAKoI,GAChDE,EAAc5V,EAAeG,EAAU,EAAKxF,KAAK4a,IAAI5a,KAAK2S,GAAKoI,GAErEjB,EAAgB,kCAChB,uBAAM7G,SAAU,CAAC,EAAEgI,EAAY,GAAI,GAAnC,UACI,gCAAgBvI,KAAM,CAACsI,EAAY,GAAI,GAAI,EAAa,EAAVhb,KAAK2S,GAAQ,EAAG3S,KAAK2S,GAAKoI,KACxE,mCAAmBpJ,IAAOtC,EAAUuD,KAAMxM,iBAE9C,uBAAM6M,SAAU,CAAC,EAAEgI,EAAY,GAAI,GAAnC,UACI,gCAAgBvI,KAAM,CAACsI,EAAY,GAAI,GAAI,EAAa,EAAVhb,KAAK2S,GAAQ,EAAG3S,KAAK2S,GAAKoI,KACxE,mCAAmBpJ,IAAOtC,EAAUuD,KAAQxM,mBAKpD,SAASyS,EAAepE,EAAKzX,GACzB,OACI,uBAAMiW,SAAY,CAAC,EAAEjW,EAAO,GAA5B,UACI,kCAAkB0V,KAAM,CAAC+B,EAAKA,EAAK,IAAM,GAAI,GAAG,EAAK,EAAa,EAAVzU,KAAK2S,MAC7D,mCAAmBnV,MAAM,WAKrC,IAAMsb,EAAc/I,EAAY9O,QAAU4X,EAAgBtT,EAAO,EAAK,GAAKH,GAAYyT,EAAgBtT,EAAO,EAAK,GAAKH,GAClH2T,EAAiBhJ,EAAY7O,WAAa2X,EAAgBrT,EAAU,EAAK,GAAKH,GAAewT,EAAgBrT,EAAU,EAAK,GAAKH,GACjI0P,EAAkB8D,EAAgB7K,EAAW,EAAK,GAzInC,GA2IfhI,EAAS+J,EAAY7K,kBAvJL,EAyJG8P,mBAAS,GAzJZ,oBAyJjBC,EAzJiB,KAyJXC,EAzJW,OA0JGF,mBAAS,GA1JZ,oBA0JjBG,EA1JiB,KA0JXC,EA1JW,OA2JGJ,mBAAS,GA3JZ,oBA2JjBK,GA3JiB,KA2JXC,GA3JW,QA4JEN,mBAAS,GA5JX,sBA4JjBO,GA5JiB,MA4JZC,GA5JY,MA8JhBC,GAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,GADAD,IAAgB,IAEhB,MACR,IAAK,IACGE,GAAOvV,KAAKE,IAAIqV,GAAO,GAAG,KAC1BC,GAAWD,IACX,MACR,IAAK,IACGA,GAAOvV,KAAKsE,IAAIiR,GAAO,EAAE,IACzBC,GAAWD,IACX,MACR,IAAK,IACGG,EAAME,iBAENT,EAAQ,EACRE,GAAQ,EACRE,GAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,GAAWD,IACXG,GAAWD,MAe3B,OATApF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOkM,iBAAiB,UAAWJ,IAG5B,WACH9L,OAAOmM,oBAAoB,UAAWL,OAE3C,IAGC,wBAAOxC,SAAU,CAAC,GAAG,EAAEsC,IAAOrC,SAAU,CAAC+B,EAAME,EAAME,IAArD,UACI,iCACI,+BAAe3C,KAAM,CAAC1M,EAAQ,GAAI,EAAG,EAAEhG,KAAK2S,MAC5C,mCAAmBhB,IAAOtC,EAAUuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE/F,iCACI,+BAAeJ,KAAM,CAAC1M,EAAQ,GAAI,EAAG,EAAEhG,KAAK2S,MAC5C,mCAAmBhB,IAAOtC,EAAUuD,KAAQxM,gBAE/C2J,EAAY/N,KAAOA,EACnB+N,EAAY9O,SAAWyX,EACvB3I,EAAY7O,YAAcyX,EAC1B5D,EACA+D,EACAC,EACAhJ,EAAY9N,YAAciU,EAC1BnG,EAAY7N,cAAgBA,EAC5B6N,EAAY5O,aAAeyX,GAC1B7I,EAAY5O,aAAe2Y,QC2F1BxI,gBAnTM,WAAO,IAAD,EAEiBf,KAAlCR,EAFiB,EAEjBA,YAAaD,EAFI,EAEJA,kBAErBY,qBAAU,WACRZ,EAAkB5E,QAAO,EAAM,SAC/B4E,EAAkBlD,oBAClBkD,EAAkB9E,SAAS,YAC1B,IAEH,IAAMwM,EAAU,CACd,CACIC,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,YAgBzByB,EAAc,CAClBlG,SAAU,WACVpL,MAAO,OACP7K,OAAQ,IAIJ+Y,EAAY,CAChB9C,SAAU,WACVpL,MAAO,OACP7K,OAAQ,EAERgZ,aAAc,EACd3J,gBAAiB,QAGnB,SAAS4J,EAAT,GAGI,IAAD,IAFDC,OAAUC,EAET,EAFSA,GAAIC,EAEb,EAFaA,MAAOC,EAEpB,EAFoBA,QACrBC,EACC,EADDA,eAEA,OACE,6CAAKzY,UAAY,QACfd,MAAO,CACLwZ,KAAK,GAAD,OAAKF,EAAL,KACJpD,SAAU,WACVuD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,YAENN,EAAeH,IAVrB,aAYE,qBAAKpZ,MAAO,CAAE8Z,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGvD,SAAS,WAAYyD,OAAQ,EAAGlZ,MAAO,QAAtH,SACG4Y,OAMT,IAAMiD,EAAe,eAAC,KAAD,CAAQrC,UAAWmC,EAAalC,OAAQ,CAAC,GAAI,KAAMC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACpH,EAAY/S,QAAS8U,SAAU,SAACtK,GAAD,OAASuI,EAAYrN,cAAc8E,EAAI,KAApJ,UACnB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBY,EAAkB,eAAC,KAAD,CAAQC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACpH,EAAYpC,UAAWmE,SAAU,SAACtK,GAAD,OAASuI,EAAYhC,gBAAgBvG,EAAI,KAAvJ,UACtB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUlBuD,EAAiB,eAAC,KAAD,CAAQ1C,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACpH,EAAYpP,SAAUmR,SAAU,SAACtK,GAAD,OAASuI,EAAYhN,eAAeyE,EAAI,KAArJ,UACvB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUhBmD,EAAc,eAAC,KAAD,CAAQtC,UAAWmC,EAAalC,OAAQ,CAAC,EAAG,KAAMC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACpH,EAAYxP,MAAOuR,SAAU,SAACtK,GAAD,OAASuI,EAAYpN,YAAY6E,EAAI,KAA/I,UACpB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAUhByD,EAAiB,qBAAK/b,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SACnB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASuI,EAAY1N,eAAemF,IAC9CgQ,QAASA,EACTG,qBAAsB5H,EAAY9O,QAAU,EAAI,EAChDoL,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAItBP,EAAoB,qBAAKzZ,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SACtB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASuI,EAAYzN,kBAAkBkF,IACjDgQ,QAASA,EACTG,qBAAsB5H,EAAY7O,WAAa,EAAI,EACnDmL,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAItBqD,EAAa,qBAAKrd,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SACf,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASuI,EAAYjC,WAAWtG,IAC1CgQ,QAASA,EACTG,qBAAsB5H,EAAY/N,IAAM,EAAI,EAC5CqK,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAItBsD,EAAgB,qBAAKtd,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SACtB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASuI,EAAYxN,oBAAoBiF,IACnDgQ,QAASA,EACTG,qBAAsB5H,EAAY5O,YAAc,EAAI,EACpDkL,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAIlBuD,EAAoB,qBAAKvd,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SAC1B,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASuI,EAAYnC,kBAAkBpG,IACjDgQ,QAASA,EACTG,qBAAsB5H,EAAY9N,WAAa,EAAI,EACnDoK,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAIlBwD,EAAsB,qBAAKxd,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SAC5B,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASuI,EAAYlC,oBAAoBrG,IACnDgQ,QAASA,EACTG,qBAAsB5H,EAAY7N,aAAe,EAAI,EACrDmK,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAIlBE,EAAe,qBAAKla,UAAU,SAASd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAApD,SACjB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASuI,EAAYvN,aAAagF,IAC5CgQ,QA7MY,CAClB,CACIC,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,YAsMvBC,qBAAsB5H,EAAYtN,MAAQ,EAAI,EAC9C4J,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAI5B,OACE,mCACE,sBAAKha,UAAU,YAAYd,MAAO,CAACib,WAAY,UAAWta,QAAS,OAAQiT,cAAc,MAAO9I,MAAO,OAAQ7K,OAAQ,SAAvH,UACE,sBAAKa,UAAU,gBAAgBd,MAAO,CAACib,WAAY,UAAWnQ,MAAO,MAAO7K,OAAQ,OAAOE,MAAM,QAAjG,UACE,eAAC,KAAD,CAAQ+a,OAAQ,CAAChF,SAAS,CAAC,EAAG,EAAG,KAAMiF,IAAI,GAAIC,OAAQ,IAAI,IAAKC,KAAM,GAAIC,IAAK,KAAOtb,MAAO,CAACib,WAAY,OAAQhb,OAAQ,MAAOgZ,aAAa,GAAIS,UAAU,KAAMD,WAAW,KAAK3O,MAAM,OAAxL,UACE,2BAAWoL,SAAU,EAAE,IAAK,IAAK,IAAKqF,UAAa,MACnD,2BAAWrF,SAAU,CAAC,GAAI,GAAI,IAAKqF,UAAa,MAChD,2BAAWrF,SAAU,EAAE,KAAM,IAAK,KAAMqF,UAAa,KACrD,2BAAWrF,SAAU,CAAC,KAAM,IAAK,KAAMqF,UAAW,KAClD,2BAAWrF,SAAU,EAAE,GAAI,EAAG,IAAKqF,UAAW,KAC9C,cAAC,GAAD,CAAQvI,YAAaA,OAEvB,sBAAKlS,UAAU,mBAAf,UACE,uBACA,uCAAS,qCAAT,MAA0B,qCAA1B,UAA+C,qCAA/C,0BAAoF,uBAAK,qCAAzF,QAA4G,qCAA5G,yBAAgJ,uBAAhJ,OAAyJ,yCAAzJ,wCAGJ,sBAAKA,UAAU,iBAAiBd,MAAO,CAAC8K,MAAO,MAAO7K,OAAQ,OAAQub,SAAU,UAAWrb,MAAM,SAAjG,UACE,uBACA,mBAAGW,UAAU,aAAb,mBACCka,EACD,sBAAKhb,MAAO,CAACW,QAAQ,eAAgBmK,MAAO,QAA5C,UACE,sBAAK9K,MAAO,CAACib,WAAY,UAAWnQ,MAAO,QAAS3K,MAAO,OAAQsb,aAAa,GAAIhC,WAAW,GAAIC,UAAU,IAA7G,UACE,mBAAG5Y,UAAU,OAAb,oBACCwb,EACD,mBAAGxb,UAAU,OAAb,0BACCyb,KAEH,sBAAKvc,MAAO,CAACib,WAAY,UAAWnQ,MAAO,QAAS3K,MAAO,QAASsb,aAAa,GAAIjb,YAAY,GAAIkZ,UAAU,IAA/G,UACE,mBAAG5Y,UAAU,OAAb,6BACCkZ,EACD,mBAAGlZ,UAAU,OAAb,6BACC6b,QAGL,sBAAK3c,MAAO,CAACG,MAAO,OAAQ2K,MAAO,QAAS0Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAG3a,UAAU,aAAb,qBACC+b,KAEH,sBAAK7c,MAAO,CAACG,MAAO,OAAQ2K,MAAO,QAAS0Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAG3a,UAAU,aAAb,2BACCsd,KAEH,sBAAKpe,MAAO,CAACG,MAAO,OAAQ2K,MAAO,QAAS0Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAG3a,UAAU,aAAb,wBACCyZ,KAEH,sBAAKva,MAAO,CAACG,MAAO,OAAQ2K,MAAO,QAAS0Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAG3a,UAAU,aAAb,wBACCud,KAEH,sBAAKre,MAAO,CAACG,MAAO,OAAQ2K,MAAO,QAAS0Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAG3a,UAAU,aAAb,iBACCqd,KAEH,sBAAKne,MAAO,CAACG,MAAO,OAAQ2K,MAAO,QAAS0Q,SAAS,UAAW9B,UAAU,GAAI+B,aAAa,IAA3F,UACE,mBAAG3a,UAAU,aAAb,0BACCwd,KAEH,qBAAKxd,UAAU,cAAcd,MAAO,CAAC8K,MAAO,GAAI2Q,aAAa,GAAI9a,QAAQ,eAAgB+Y,UAAW,IAApG,SACE,cAAC9Z,EAAD,UACE,cAACC,EAAD,CAAYG,MAAO,CAACib,WAAY,WAAYS,QAAS,kBAAM3I,EAAkB5E,UAAUpO,GAAG,aAA1F,SACE,mBAAGe,UAAY,aAAf,mCC/DDyT,gBAlPE,SAAC1B,GAAW,IAClBI,EAAYJ,EAAZI,SACDX,EAAUqC,mBAAQ,kBAAM,IAAItL,iBAAsBmM,KAAKD,MAAO,IAE9DtE,EAAagC,EAASrC,SAY5B,IAAMiB,EAAY,GAEZ0M,EADYtL,EAASrC,SAAWqC,EAAS7B,WAAY,EACjCnO,KAAKwT,KAAK,EAAE5E,GAAa5O,KAAK2S,IAClD/K,EAAS0T,EAAStb,KAAKsT,KAAK,EAAE1E,GAAa5O,KAAK2S,IAAM,GAEtD4I,EACN,kCACI,uBAAMtI,SAAU,CAAC,EAAGjD,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAO,GAAvE,UACI,gCAAgB8K,KAAM,CAAC4I,EAAU,GAAI,GAAI,EAAG,EAAItb,KAAK2S,GAAI,EAAG3S,KAAK2S,GAAK/D,KACtE,mCAAmB+C,IAAOtC,EAAUuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE/F,uBAAMG,SAAU,CAAC,EAAGjD,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAO,GAAvE,UACI,gCAAgB8K,KAAM,CAAC4I,EAAU,GAAI,GAAI,EAAG,EAAItb,KAAK2S,GAAI,EAAG3S,KAAK2S,GAAK/D,KACtE,mCAAmB+C,IAAOtC,EAAUuD,KAAMxM,mBAI9CoV,EAAa,yBACbC,EAAW,yBACXC,EAAc,yBACdC,EAAY,yBACZ7Z,EAAO,yBAELkY,EAvCkB,kDAwCpB,WAAYC,GAAQ,IAAD,8BACjB,gBACKA,MAAQA,EAFI,EAxCC,qDA4CX3a,GACP,IAAMsc,EAAK5b,KAAKsT,IAAI,EAAItT,KAAK2S,GAAKrT,GAC5B4a,EAAKla,KAAKE,KAAK,GAAKF,KAAKwT,IAAI,EAAIxT,KAAK2S,GAAKrT,IAEjD,OAAO,IAAI8G,UAAcwV,EAAI1B,EADlB,GAC0BE,eAAeC,KAAKJ,WAhDvC,GAuCQ7T,SAahC,GAAqB,SAAlB4J,EAASjO,KAAgB,CACxB,IAAMuY,EAAagB,EAAS,EACtBf,EAAO,IAAIP,EAAkBM,GAE7BE,EAAWxa,KAAKsE,IAAI,GAAKgW,EAAW,GAGpCuB,EAAS7L,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAS0S,EAAW,EAAKgB,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAEhHgJ,EACA,kCACA,uBAAM1I,SAAU,GAAGqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAK2H,EAAW,GAAGuB,EAAM,GAAI3I,SAAU,CAAC,EAAE,EAAElT,KAAK2S,GAAG,GAAnG,UACI,8BAAcD,KAAM,CAAC6H,EATZ,GASwBC,EAPpB,EACF,SAOX,mCAAmB7I,IAAKtC,EAASuD,KAAQxM,iBAE7C,uBAAM6M,SAAU,CAAEqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAK2H,EAAW,EAAGuB,EAAM,GAAI3I,SAAU,CAAC,EAAE,GAAGlT,KAAK2S,GAAG,GAAnG,UACI,8BAAcD,KAAM,CAAC6H,EAbZ,GAawBC,EAXpB,EACF,SAWX,mCAAoB7I,IAAKtC,EAASuD,KAAQxM,oBAKlD,GAAqB,QAAlB4J,EAASjO,KAAe,CACvB,IAAMqS,EAAQ,IAAIhO,QACZyV,EAAS7L,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAU0T,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAC3FmJ,EAAiBR,EAAS,IAAK,EACrClH,EAAME,QAAQwH,EAAc,GAC5B1H,EAAMI,kBAAkBsH,EAAc,IAAqB,IAAhBA,EAAqB,EAAkB,IAAhBA,GAClE1H,EAAMI,iBAAiBsH,EAAc,IAAqB,IAAhBA,EAAqBA,EAAc,GAC7E1H,EAAMG,QAAQuH,EAAc,GAE5B,IAAMnH,EAAkB,CACpBC,MAAO,EACPF,MAAO,EACPG,cAAc,GAGlB4G,EACA,kCACA,uBAAMxI,SAAU,CAAEqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAKmJ,EAAc,EAAGD,EAAM,GAAI3I,SAAU,CAAC,EAAE,GAAGlT,KAAK2S,GAAG,KAAtG,UACI,iCAAiBD,KAAM,CAAC0B,EAAOO,KAC/B,mCAAoBhD,IAAKtC,EAASuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE7F,uBAAMG,SAAU,GAAGqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAKmJ,EAAc,GAAGD,EAAM,GAAI3I,SAAU,CAAC,EAAE,EAAElT,KAAK2S,GAAG,KAAtG,UACI,iCAAiBD,KAAM,CAAC0B,EAAOO,KAC/B,mCAAoBhD,IAAKtC,EAASuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,WAMjG,GAAqB,UAAlB9C,EAASjO,KAAiB,CACzB,IAAMga,EAAS,IAAI3V,QACbyV,EAAS7L,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAU0T,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAC3FmJ,EAAiBR,EAAS,EAAG,EACnCS,EAAOzH,QAAQwH,EAAc,GAC7BC,EAAOxH,QAAQuH,EAA+B,EAAhBA,GAC9BC,EAAOvH,kBAAkBsH,EAAc,EAAoB,EAAhBA,EAAoB,EAAkB,EAAhBA,GACjEC,EAAOvH,iBAAiBsH,EAAc,EAAmB,EAAhBA,EAAmBA,EAA+B,EAAhBA,GAC3EC,EAAOxH,OAAOuH,EAAc,GAE5B,IAAMnH,EAAkB,CACpBC,MAAO,EACPF,MAAO,EACPG,cAAc,GAGlB2G,EACA,kCACA,uBAAMvI,SAAU,CAAEqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAKmJ,EAAc,EAAGD,EAAM,GAAI3I,SAAU,CAAC,EAAE,GAAGlT,KAAK2S,GAAG,GAAtG,UACI,iCAAiBD,KAAM,CAACqJ,EAAQpH,KAChC,mCAAoBhD,IAAKtC,EAASuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE7F,uBAAMG,SAAU,GAAGqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAKmJ,EAAc,GAAGD,EAAM,GAAI3I,SAAU,CAAC,EAAE,EAAElT,KAAK2S,GAAG,GAAtG,UACI,iCAAiBD,KAAM,CAACqJ,EAAQpH,KAChC,mCAAoBhD,IAAKtC,EAASuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,WAKjG,GAAqB,WAAlB9C,EAASjO,KAAkB,CAC1B,IAAMia,EAAUV,EAAS,IACnBO,EAAS7L,EAASrC,SAAWqC,EAAS5B,YAAexG,EAASoU,EAAWV,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAC3G+I,EACA,kCACI,uBAAMzI,SAAU,EAAGqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAIkJ,EAAM,GAAI3I,SAAU,CAAC,EAAE,EAAElT,KAAK2S,GAAG,GAApF,UACI,gCAAgBD,KAAM,CAACsJ,EAAS,GAAI,GAAI,EAAG,EAAIhc,KAAK2S,GAAI,EAAG3S,KAAK2S,MAChE,mCAAoBhB,IAAKtC,EAASuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE7F,uBAAMG,SAAU,CAAEqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAIkJ,EAAM,GAAI3I,SAAU,CAAC,EAAE,GAAGlT,KAAK2S,GAAG,GAApF,UACI,gCAAgBD,KAAM,CAACsJ,EAAS,GAAI,GAAI,EAAG,EAAIhc,KAAK2S,GAAI,EAAG3S,KAAK2S,MAChE,mCAAoBhB,IAAKtC,EAASuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,WAKrG,GAAI9C,EAASlO,KAAK,CACd,IAAMma,EAAUjM,EAASrC,SAAS,EAC5BkO,EAAS7L,EAASrC,SAAWqC,EAAS5B,YAAa,EACnD8N,EAASlM,EAASrC,SAAWqC,EAAS7B,WAAY,EAAY,IAAR8N,EAC5Dna,EACA,kCACI,uBAAMmR,SAAU,EAAGiJ,EAAOL,EAAM,GAAI3I,SAAU,CAAC,EAAE,EAAElT,KAAK2S,GAAG,MAA3D,UACI,kCAAkBD,KAAM,CAACuJ,EAASA,EAAiB,IAARA,EAAa,MACxD,mCAAoBtK,IAAKtC,EAASuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE7F,uBAAMG,SAAU,CAACiJ,EAAML,EAAM,GAAI3I,SAAU,CAAC,EAAE,GAAGlT,KAAK2S,GAAG,MAAzD,UACI,kCAAkBD,KAAM,CAACuJ,EAASA,EAAiB,IAARA,EAAa,MACxD,mCAAoBtK,IAAKtC,EAASuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,WAKrG,IA9JwB2B,EAAKzX,EA8JvBgJ,EAASgK,EAAS9K,kBAClB6P,GA/JkBN,EA+JgBzG,EAAW,EAAK,GA/J3BhR,EAFR,EAIb,uBAAMiW,SAAY,CAAC,EAAEjW,EAAO,GAA5B,UACI,kCAAkB0V,KAAM,CAAC+B,EAAKA,EAAK,IAAM,GAAI,GAAG,EAAK,EAAa,EAAVzU,KAAK2S,MAC7D,mCAAmBnV,MAAM,YAXb,EAwKCwX,mBAAS,GAxKV,oBAwKnBC,EAxKmB,KAwKbC,EAxKa,OAyKCF,mBAAS,GAzKV,oBAyKnBG,EAzKmB,KAyKbC,EAzKa,OA0KCJ,mBAAS,GA1KV,oBA0KnBK,EA1KmB,KA0KbC,GA1Ka,QA2KAN,mBAAS,GA3KT,sBA2KnBO,GA3KmB,MA2KdC,GA3Kc,MA6KlBC,GAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,GADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,GAAOvV,KAAKE,IAAIqV,GAAO,GAAG,KAC1BC,GAAWD,IACX,MACR,IAAK,IACGA,GAAOvV,KAAKsE,IAAIiR,GAAO,EAAE,IACzBC,GAAWD,IACX,MACR,IAAK,IACGG,EAAME,iBAENT,EAAQ,EACRE,EAAQ,EACRE,GAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,GAAWD,GACXG,GAAWD,MAgB3B,OATApF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOkM,iBAAiB,UAAWJ,IAG5B,WACH9L,OAAOmM,oBAAoB,UAAWL,OAE3C,IAGC,wBAAOxC,SAAU,CAAC,GAAG,EAAEsC,IAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAArD,UACI,iCACI,+BAAe3C,KAAM,CAAC1M,EAAQ,GAAI,EAAG,EAAEhG,KAAK2S,MAC5C,mCAAmBhB,IAAOtC,EAAUuD,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE/F,iCACI,+BAAeJ,KAAM,CAAC1M,EAAQ,GAAI,EAAG,EAAEhG,KAAK2S,MAC5C,mCAAmBhB,IAAOtC,EAAUuD,KAAQxM,gBAE/CmV,EACAxG,EACkB,SAAlB/E,EAASjO,MAAmB4Z,EACV,UAAlB3L,EAASjO,MAAoByZ,EACX,QAAlBxL,EAASjO,MAAkB0Z,EACT,WAAlBzL,EAASjO,MAAqB2Z,EAC9B1L,EAASlO,MAAQA,QC7BfwP,gBAvMQ,WAAO,IAAD,EAEYf,KAA/BP,EAFmB,EAEnBA,SAAUF,EAFS,EAETA,kBAElBY,qBAAU,WACRZ,EAAkB5E,QAAO,EAAM,SAC/B4E,EAAkBlD,oBAClBkD,EAAkB9E,SAAS,SAC1B,IAEH,IAqDM+K,EAAY,CAChB9C,SAAU,WACVpL,MAAO,OACP7K,OAAQ,EAERgZ,aAAc,EACd3J,gBAAiB,QAGnB,SAAS4J,EAAT,GAGI,IAAD,IAFDC,OAAUC,EAET,EAFSA,GAAIC,EAEb,EAFaA,MAAOC,EAEpB,EAFoBA,QACrBC,EACC,EADDA,eAEA,OACE,6CAAKzY,UAAY,QACfd,MAAO,CACLwZ,KAAK,GAAD,OAAKF,EAAL,KACJpD,SAAU,WACVuD,YAAa,GACbC,WAAY,GACZC,OAAQ,EACRC,UAAW,QACXC,OAAQ,YAENN,EAAeH,IAVrB,aAYE,qBAAKpZ,MAAO,CAAE8Z,WAAY,QAASC,SAAU,GAAIL,UAAW,GAAID,WAAY,EAAGvD,SAAS,WAAYyD,OAAQ,EAAGlZ,MAAO,QAAtH,SACG4Y,OAMT,IAAMW,EAAkB,eAAC,KAAD,CAAQC,UAxCZ,CAClB/D,SAAU,WACVpL,MAAO,OACP7K,OAAQ,IAqC8Cia,OAAQ,CAAC,EAAG,IAAKC,KAAM,EAAG/M,KAAM,EAAGgN,OAAQ,CAACnH,EAASrC,UAAWmE,SAAU,SAACtK,GAAD,OAASwI,EAASjC,gBAAgBvG,EAAI,KAAhJ,UACtB,cAAC,KAAD,UACG,gBAAG4P,EAAH,EAAGA,aAAH,OACC,iCAAKra,MAAOgZ,GAAeqB,SAG/B,cAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,QAASf,EAAZ,EAAYA,eAAZ,OACC,qBAAKzY,UAAU,iBAAf,SACGwZ,EAAQ1F,KAAI,SAAAuE,GAAM,OACjB,cAACD,EAAD,CAEEC,OAAQA,EACRI,eAAgBA,GAFXJ,EAAOC,eAWlBgG,EAAc,qBAAKte,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SACpB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASwI,EAASzB,YAAY/G,IACxCgQ,QA/GY,CACd,CACIC,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,IACPrB,OAAO,EACPsB,wBAAyB,YAwG3BC,qBAAsB3H,EAASlO,KAAO,EAAI,EAC1CuK,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAKpBuE,EAAc,qBAAKve,UAAU,SAAUd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAArD,SACpB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASwI,EAAS1B,YAAY9G,IACxCgQ,QA/GmB,CACnB,CACIC,MAAO,gBACPrB,MAAO,OACPsB,wBAAyB,WACzB,CACAD,MAAO,gBACPrB,MAAO,SACPsB,wBAAyB,WACzB,CACAD,MAAO,gBACPrB,MAAO,MACPsB,wBAAyB,WACzB,CACAD,MAAO,gBACPrB,MAAO,QACPsB,wBAAyB,YAgG7BC,qBA5FW,CAAC,OAAQ,SAAU,MAAO,SA4FV0E,QAAL,UAAgBrM,EAASjO,OAC/CsK,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,GACpBf,SAAU,OAINiB,EAAe,qBAAKla,UAAU,SAASd,MAAO,CAAC8K,MAAO,IAAK7K,OAAQ,IAApD,SACjB,cAAC,KAAD,CACIua,SAAU,SAAC/P,GAAD,OAASwI,EAASxN,aAAagF,IACzCgQ,QArGY,CAClB,CACIC,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,WACzB,CACAD,MAAO,KACPrB,OAAO,EACPsB,wBAAyB,YA8FvBC,qBAAsB3H,EAASvN,MAAQ,EAAI,EAC3C4J,gBAAiB,UACjBuL,UAAW,UACXC,mBAAoB,OAI5B,OACE,mCACE,sBAAKha,UAAU,YAAYd,MAAO,CAACib,WAAY,UAAWta,QAAS,OAAQiT,cAAc,MAAO9I,MAAO,OAAQ7K,OAAQ,QAAvH,UACE,sBAAKa,UAAU,gBAAgBd,MAAO,CAACib,WAAY,UAAWnQ,MAAO,MAAO7K,OAAQ,OAAOE,MAAM,QAAjG,UACE,eAAC,KAAD,CAAQ+a,OAAQ,CAAChF,SAAS,CAAC,EAAG,EAAG,IAAKiF,IAAI,GAAIC,OAAQ,IAAI,IAAKC,KAAM,GAAIC,IAAK,KAAOtb,MAAO,CAACib,WAAY,OAAQhb,OAAQ,QAASgZ,aAAa,GAAIS,UAAU,KAAMD,WAAW,KAAK3O,MAAM,OAAzL,UACE,2BAAWoL,SAAU,EAAE,IAAK,IAAK,IAAKqF,UAAa,MACnD,2BAAWrF,SAAU,CAAC,GAAI,GAAI,IAAKqF,UAAa,MAChD,2BAAWrF,SAAU,EAAE,KAAM,IAAK,KAAMqF,UAAa,KACrD,2BAAWrF,SAAU,CAAC,KAAM,IAAK,KAAMqF,UAAW,KAClD,2BAAWrF,SAAU,EAAE,GAAI,EAAG,IAAKqF,UAAW,KAC9C,cAAC,GAAD,CAAUtI,SAAUA,OAEtB,sBAAKnS,UAAU,uBAAf,UACE,qBAAKd,MAAO,CAACC,OAAQ,MACrB,uCAAS,qCAAT,MAA0B,qCAA1B,UAA+C,qCAA/C,0BAAoF,uBAAK,qCAAzF,QAA4G,qCAA5G,yBAAgJ,uBAAhJ,OAAyJ,yCAAzJ,kCACA,qBAAKD,MAAO,CAACC,OAAQ,YAGzB,sBAAKa,UAAU,iBAAiBd,MAAO,CAAC8K,MAAO,MAAO7K,OAAQ,OAAQub,SAAU,UAAWrb,MAAM,SAAjG,UACE,uBACA,mBAAGW,UAAU,aAAb,mBACCka,EACD,uBACA,mBAAGla,UAAU,OAAb,2BACA,qBAAKd,MAAO,CAAC8K,MAAM,MAAO2O,WAAW,MAArC,SACGO,IAEH,uBACA,mBAAGlZ,UAAU,OAAb,kBACCse,EACD,uBACA,mBAAGte,UAAU,OAAb,kBACCue,EACD,qBAAKve,UAAU,cAAcd,MAAO,CAAC8K,MAAO,GAAI2Q,aAAa,IAA7D,SACE,cAAC7b,EAAD,UACE,cAACC,EAAD,CAAYG,MAAO,CAACib,WAAY,WAAYS,QAAS,kBAAM3I,EAAkB5E,UAAUpO,GAAG,aAA1F,SACE,mBAAGe,UAAY,aAAf,mCCvEDyT,gBAhII,SAAC1B,GAAW,IACpBC,EAAaD,EAAbC,UACDyM,EAAWC,iBAAO,IAClBC,EAAYD,iBAAO,IAEzB7L,qBAAU,WACN4L,EAAS1Q,QAAU0Q,EAAS1Q,QAAQjF,MAAM,EAAGkJ,EAAUhO,gBAAgB9B,QACvEyc,EAAU5Q,QAAU4Q,EAAU5Q,QAAQjF,MAAM,EAAGkJ,EAAUhO,gBAAgB9B,UACzE,IAEJ2Q,qBAAU,WAEN,IADA,IAAM+L,EAAM5M,EAAUhO,gBAAgB9B,OAC9BR,EAAI,EAAGA,EAAIkd,EAAKld,GAAK,EACzB+c,EAAS1Q,QAAQrM,GAAGoS,KAAM,IAAIvL,iBAAsBmM,KAAK1C,EAAUlO,SAAS8a,EAAIld,EAAE,IAClFid,EAAU5Q,QAAQrM,GAAGoS,KAAM,IAAIvL,iBAAsBmM,KAAK1C,EAAUlO,SAAS8a,EAAIld,EAAE,MAGxF,IAGH,IAAM6F,EAAWyK,EAAUzO,QAAQ,EAC7BiE,GAAe,EAAID,EACnBE,EAAeuK,EAAUzO,QAAQyO,EAAU7S,OAE3CuI,EAASsK,EAAUtP,KAAO+E,EAC1BE,EAAYqK,EAAUlP,QAAU2E,EAElCoT,EAAe,yBACfC,EAAkB,yBAClBC,EAAmB,yBAEnB/I,EAAU5O,UACVyX,EAAe,uBAAMzF,SAAY,CAAC,EAAE7N,EAAS,GAAI,GAAI8N,SAAY,CAAC,KAAK,EAAE,GAA1D,UACf,+BAAeR,KAAM,CAAEnN,EAAO,EAAG,GAAI,GAAI,GAAG,MAC5C,mCAAmB/H,MAAOqS,EAAUxO,oBAGpCwO,EAAU3O,aACVyX,EAAkB,uBAAM1F,SAAY,CAAC,EAAE5N,EAAY,GAAI,GAAI6N,SAAY,CAAC,KAAK,EAAE,GAA7D,UAClB,+BAAeR,KAAM,CAAElN,EAAU,EAAG,GAAK,GAAK,GAAI,MAClD,mCAAmBhI,MAAOqS,EAAUxO,oBAIxC,IAAM2E,EAAS0L,mBAAQ,kBAAM7B,EAAU3K,iBAAgB,KAAO,CAAC2K,EAAUvP,KA5C/C,EA8CD0U,mBAAS,GA9CR,oBA8CrBC,EA9CqB,KA8CfC,EA9Ce,OA+CDF,mBAAS,GA/CR,oBA+CrBG,EA/CqB,KA+CfC,EA/Ce,OAgDDJ,mBAAS,GAhDR,oBAgDrBK,EAhDqB,KAgDfC,EAhDe,OAiDFN,mBAAS,GAjDP,oBAiDrBO,EAjDqB,KAiDhBC,EAjDgB,KAmDtB3F,EAAU1O,cACVyX,EAAmB,uBAAM3F,SAAY,CAAC,EAAE5N,EAAY,GAAjC,UACf,kCAAkBqN,KAAM,CAAClN,EAAU,EAAGA,EAAU,EAAG,GAAK,MACxD,mCAAmBhI,MAAOqS,EAAUxO,oBAI5C,IAAMoU,EAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,EAAOvV,KAAKE,IAAIqV,EAAO,GAAG,KAC1BC,EAAWD,GACX,MACR,IAAK,IACGA,EAAOvV,KAAKsE,IAAIiR,EAAO,EAAE,IACzBC,EAAWD,GACX,MACR,IAAK,IACGG,EAAME,iBAENT,EAAQ,EACRE,EAAQ,EACRE,EAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,EAAWD,GACXG,EAAWD,KAe3B,OATApF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOkM,iBAAiB,UAAWJ,GAG5B,WACH9L,OAAOmM,oBAAoB,UAAWL,MAE3C,IAGC,wBAAOxC,SAAU,CAAC,EAAE,EAAEsC,GAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAApD,UACI,kCACCrP,EAAO2L,KAAI,SAAC+K,EAAGnd,GAAJ,OACR,iCACI,+BAAemT,KAAM,CAAC1M,EAAOzG,GAAI,GAAI,EAAG,EAAES,KAAK2S,MAC/C,mCAAmBgK,IAAK,SAAAC,GAAE,OAAIN,EAAS1Q,QAAQrM,GAAKqd,GAAIhK,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,OAFxGvT,MAKdyG,EAAO2L,KAAI,SAAC+K,EAAGnd,GAAJ,OACR,iCACI,+BAAemT,KAAM,CAAC1M,EAAOzG,GAAI,GAAI,EAAG,EAAES,KAAK2S,MAC/C,qCAAqBgK,IAAK,SAAAC,GAAE,OAAIJ,EAAU5Q,QAAQrM,GAAKqd,GAAIhK,KAAQxM,eAF5D7G,SAMdsQ,EAAU5O,SAAWyX,EACrB7I,EAAU3O,YAAcyX,EACxB9I,EAAU1O,aAAeyX,QCgIvBtH,gBA3PE,SAAC1B,GAAW,IAClBI,EAAYJ,EAAZI,SACDsM,EAAWC,iBAAO,IAClBC,EAAYD,iBAAO,IAEzB7L,qBAAU,WACN4L,EAAS1Q,QAAU0Q,EAAS1Q,QAAQjF,MAAM,EAAGqJ,EAASnO,gBAAgB9B,OAAO,GAC7Eyc,EAAU5Q,QAAU4Q,EAAU5Q,QAAQjF,MAAM,EAAGqJ,EAASnO,gBAAgB9B,OAAO,KAC/E,IAEJ2Q,qBAAU,WAEN,IADA,IAAM+L,EAAMzM,EAASnO,gBAAgB9B,OAAO,EACpCR,EAAI,EAAGA,EAAIkd,EAAKld,GAAK,EACzB+c,EAAS1Q,QAAQrM,GAAGoS,KAAM,IAAIvL,iBAAsBmM,KAAKvC,EAASrO,SAASpC,IAC3Eid,EAAU5Q,QAAQrM,GAAGoS,KAAM,IAAIvL,iBAAsBmM,KAAKvC,EAASrO,SAASpC,MAGjF,IAEH,IAAMsd,EAAenL,mBAAQ,kBAAM,IAAItL,iBAAsBmM,KAAKvC,EAASrO,SAASqO,EAASrO,SAAS5B,OAAO,MAAK,IAI5Gub,EADYtL,EAASrC,SAAWqC,EAAS7B,WAAY,EACjCnO,KAAKwT,KAAK,EAFlB,IAEiCxT,KAAK2S,IAClD/K,EAAS0T,EAAStb,KAAKsT,KAAK,EAHhB,IAG+BtT,KAAK2S,IAAM,GAEtDmK,EAAO9M,EAASvB,iBALJ,GAKqBzO,KAAK2S,IAEtCoK,EACN,kCACKD,EAAKnL,KAAI,SAAC+K,EAAGnd,GAAJ,OACN,uBAAc0T,SAAU,CAAC,EAAGjD,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAO,GAA/E,UACI,gCAAgB8K,KAAM,CAAC4I,EAAU,GAAI,GAAI,EAAG,EAAItb,KAAK2S,GAAImK,EAAKvd,GAAG,GAAIud,EAAKvd,GAAG,MAC7E,mCAAmBod,IAAK,SAAAC,GAAE,OAAIN,EAAS1Q,QAAQrM,GAAKqd,GAAIhK,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,OAFxGvT,MAKdud,EAAKnL,KAAI,SAAC+K,EAAGnd,GAAJ,OACN,uBAAc0T,SAAU,CAAC,EAAGjD,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAO,GAA/E,UACI,gCAAgB8K,KAAM,CAAC4I,EAAU,GAAI,GAAI,EAAG,EAAItb,KAAK2S,GAAImK,EAAKvd,GAAG,GAAIud,EAAKvd,GAAG,MAC7E,mCAAmBod,IAAK,SAAAC,GAAE,OAAIJ,EAAU5Q,QAAQrM,GAAKqd,GAAIhK,KAAMxM,eAFxD7G,SAOfic,EAAa,yBACbC,EAAW,yBACXC,EAAc,yBACdC,EAAY,yBACZ7Z,EAAO,yBAELkY,EAlDkB,kDAmDpB,WAAYC,GAAQ,IAAD,8BACjB,gBACKA,MAAQA,EAFI,EAnDC,qDAuDX3a,GACP,IAAMsc,EAAK5b,KAAKsT,IAAI,EAAItT,KAAK2S,GAAKrT,GAC5B4a,EAAKla,KAAKE,KAAK,GAAKF,KAAKwT,IAAI,EAAIxT,KAAK2S,GAAKrT,IAEjD,OAAO,IAAI8G,UAAcwV,EAAI1B,EADlB,GAC0BE,eAAeC,KAAKJ,WA3DvC,GAkDQ7T,SAahC,GAAqB,SAAlB4J,EAASjO,KAAgB,CACxB,IAAMuY,EAAagB,EAAS,EACtBf,EAAO,IAAIP,EAAkBM,GAE7BE,EAAWxa,KAAKsE,IAAI,GAAKgW,EAAW,GAGpCuB,EAAS7L,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAS0S,EAAW,EAAKgB,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAEhHgJ,EACA,kCACA,uBAAM1I,SAAU,GAAGqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAK2H,EAAW,GAAGuB,EAAM,GAAI3I,SAAU,CAAC,EAAE,EAAElT,KAAK2S,GAAG,GAAnG,UACI,8BAAcD,KAAM,CAAC6H,EATZ,GASwBC,EAPpB,EACF,SAOX,mCAAmBhd,MAAOwS,EAAS3O,cAAeuR,KAAQxM,iBAE9D,uBAAM6M,SAAU,CAAEqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAK2H,EAAW,EAAGuB,EAAM,GAAI3I,SAAU,CAAC,EAAE,GAAGlT,KAAK2S,GAAG,GAAnG,UACI,8BAAcD,KAAM,CAAC6H,EAbZ,GAawBC,EAXpB,EACF,SAWX,mCAAoBhd,MAAOwS,EAAS3O,cAAeuR,KAAQxM,oBAKnE,GAAqB,QAAlB4J,EAASjO,KAAe,CACvB,IAAMqS,EAAQ,IAAIhO,QACZyV,EAAS7L,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAU0T,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAC3FmJ,EAAiBR,EAAS,IAAK,EACrClH,EAAME,QAAQwH,EAAc,GAC5B1H,EAAMI,kBAAkBsH,EAAc,IAAqB,IAAhBA,EAAqB,EAAkB,IAAhBA,GAClE1H,EAAMI,iBAAiBsH,EAAc,IAAqB,IAAhBA,EAAqBA,EAAc,GAC7E1H,EAAMG,QAAQuH,EAAc,GAE5B,IAAMnH,EAAkB,CACpBC,MAAO,EACPF,MAAO,EACPG,cAAc,GAGlB4G,EACA,kCACA,uBAAMxI,SAAU,CAAEqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAKmJ,EAAc,EAAGD,EAAM,GAAI3I,SAAU,CAAC,EAAE,GAAGlT,KAAK2S,GAAG,KAAtG,UACI,iCAAiBD,KAAM,CAAC0B,EAAOO,KAC/B,mCAAoBnX,MAAOwS,EAAS3O,cAAeuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE9G,uBAAMG,SAAU,GAAGqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAKmJ,EAAc,GAAGD,EAAM,GAAI3I,SAAU,CAAC,EAAE,EAAElT,KAAK2S,GAAG,KAAtG,UACI,iCAAiBD,KAAM,CAAC0B,EAAOO,KAC/B,mCAAoBnX,MAAOwS,EAAS3O,cAAeuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,WAMlH,GAAqB,UAAlB9C,EAASjO,KAAiB,CACzB,IAAMga,EAAS,IAAI3V,QACbyV,EAAS7L,EAASrC,SAAWqC,EAAS5B,YAAexG,EAAU0T,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAC3FmJ,EAAiBR,EAAS,EAAG,EACnCS,EAAOzH,QAAQwH,EAAc,GAC7BC,EAAOxH,QAAQuH,EAA+B,EAAhBA,GAC9BC,EAAOvH,kBAAkBsH,EAAc,EAAoB,EAAhBA,EAAoB,EAAkB,EAAhBA,GACjEC,EAAOvH,iBAAiBsH,EAAc,EAAmB,EAAhBA,EAAmBA,EAA+B,EAAhBA,GAC3EC,EAAOxH,OAAOuH,EAAc,GAE5B,IAAMnH,EAAkB,CACpBC,MAAO,EACPF,MAAO,EACPG,cAAc,GAGlB2G,EACA,kCACA,uBAAMvI,SAAU,CAAEqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAKmJ,EAAc,EAAGD,EAAM,GAAI3I,SAAU,CAAC,EAAE,GAAGlT,KAAK2S,GAAG,GAAtG,UACI,iCAAiBD,KAAM,CAACqJ,EAAQpH,KAChC,mCAAoBnX,MAAOwS,EAAS3O,cAAeuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE9G,uBAAMG,SAAU,GAAGqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAKmJ,EAAc,GAAGD,EAAM,GAAI3I,SAAU,CAAC,EAAE,EAAElT,KAAK2S,GAAG,GAAtG,UACI,iCAAiBD,KAAM,CAACqJ,EAAQpH,KAChC,mCAAoBnX,MAAOwS,EAAS3O,cAAeuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,WAKlH,GAAqB,WAAlB9C,EAASjO,KAAkB,CAC1B,IAAMia,EAAUV,EAAS,IACnBO,EAAS7L,EAASrC,SAAWqC,EAAS5B,YAAexG,EAASoU,EAAWV,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAC3G+I,EACA,kCACI,uBAAMzI,SAAU,EAAGqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAIkJ,EAAM,GAAI3I,SAAU,CAAC,EAAE,EAAElT,KAAK2S,GAAG,GAApF,UACI,gCAAgBD,KAAM,CAACsJ,EAAS,GAAI,GAAI,EAAG,EAAIhc,KAAK2S,GAAI,EAAG3S,KAAK2S,MAChE,mCAAoBnV,MAAOwS,EAAS3O,cAAeuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE9G,uBAAMG,SAAU,CAAEqI,EAAWtb,KAAKsT,IAAItT,KAAK2S,GAAG,GAAIkJ,EAAM,GAAI3I,SAAU,CAAC,EAAE,GAAGlT,KAAK2S,GAAG,GAApF,UACI,gCAAgBD,KAAM,CAACsJ,EAAS,GAAI,GAAI,EAAG,EAAIhc,KAAK2S,GAAI,EAAG3S,KAAK2S,MAChE,mCAAoBnV,MAAOwS,EAAS3O,cAAeuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,WAKtH,GAAI9C,EAASlO,KAAK,CACd,IAAMma,EAAUjM,EAASrC,SAAS,EAC5BkO,EAAS7L,EAASrC,SAAWqC,EAAS5B,YAAa,EACnD8N,EAASlM,EAASrC,SAAWqC,EAAS7B,WAAY,EAAY,IAAR8N,EAC5Dna,EACA,kCACI,uBAAMmR,SAAU,EAAGiJ,EAAOL,EAAM,GAAI3I,SAAU,CAAC,EAAE,EAAElT,KAAK2S,GAAG,MAA3D,UACI,kCAAkBD,KAAM,CAACuJ,EAASA,EAAiB,IAARA,EAAa,MACxD,mCAAoBze,MAAOwS,EAAS3O,cAAeuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAE9G,uBAAMG,SAAU,CAACiJ,EAAML,EAAM,GAAI3I,SAAU,CAAC,EAAE,GAAGlT,KAAK2S,GAAG,MAAzD,UACI,kCAAkBD,KAAM,CAACuJ,EAASA,EAAiB,IAARA,EAAa,MACxD,mCAAoBze,MAAOwS,EAAS3O,cAAeuR,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,WAKtH,IAAM9M,EAASgK,EAAS9K,kBAhLA,EAkLC8P,mBAAS,GAlLV,oBAkLnBC,EAlLmB,KAkLbC,EAlLa,OAmLCF,mBAAS,GAnLV,oBAmLnBG,EAnLmB,KAmLbC,EAnLa,OAoLCJ,mBAAS,GApLV,oBAoLnBK,EApLmB,KAoLbC,EApLa,OAqLAN,mBAAS,GArLT,qBAqLnBO,GArLmB,MAqLdC,GArLc,MAuLlBC,GAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,GAAOvV,KAAKE,IAAIqV,GAAO,GAAG,KAC1BC,GAAWD,IACX,MACR,IAAK,IACGA,GAAOvV,KAAKsE,IAAIiR,GAAO,EAAE,IACzBC,GAAWD,IACX,MACR,IAAK,IACGG,EAAME,iBAENT,EAAQ,EACRE,EAAQ,EACRE,GAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,EAAWD,GACXG,GAAWD,MAgB3B,OATApF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOkM,iBAAiB,UAAWJ,IAG5B,WACH9L,OAAOmM,oBAAoB,UAAWL,OAE3C,IAGC,wBAAOxC,SAAU,CAAC,GAAG,EAAEsC,IAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAArD,UACI,iCACI,+BAAe3C,KAAM,CAAC1M,EAAQ,GAAI,EAAG,EAAEhG,KAAK2S,MAC5C,mCAAmBhB,IAAOkL,EAAejK,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,QAEpG,iCACI,+BAAeJ,KAAM,CAAC1M,EAAQ,GAAI,EAAG,EAAEhG,KAAK2S,MAC5C,mCAAmBhB,IAAOkL,EAAejK,KAAQxM,gBAEpD2W,EACkB,SAAlB/M,EAASjO,MAAmB4Z,EACV,UAAlB3L,EAASjO,MAAoByZ,EACX,QAAlBxL,EAASjO,MAAkB0Z,EACT,WAAlBzL,EAASjO,MAAqB2Z,EAC9B1L,EAASlO,MAAQA,QChBfwP,gBAtOM,SAAC1B,GAAW,IACtBG,EAAeH,EAAfG,YACDuM,EAAWC,iBAAO,IAClBC,EAAYD,iBAAO,IAEzB7L,qBAAU,WACN4L,EAAS1Q,QAAU0Q,EAAS1Q,QAAQjF,MAAM,EAAGoJ,EAAYlO,gBAAgB9B,QACzEyc,EAAU5Q,QAAU4Q,EAAU5Q,QAAQjF,MAAM,EAAGoJ,EAAYlO,gBAAgB9B,UAC3E,IAEJ2Q,qBAAU,WAEN,IADA,IAAM+L,EAAM1M,EAAYlO,gBAAgB9B,OAChCR,EAAI,EAAGA,EAAIkd,EAAKld,GAAK,EACzB+c,EAAS1Q,QAAQrM,GAAGoS,KAAM,IAAIvL,iBAAsBmM,KAAKxC,EAAYpO,SAAS8a,EAAIld,EAAE,IACpFid,EAAU5Q,QAAQrM,GAAGoS,KAAM,IAAIvL,iBAAsBmM,KAAKxC,EAAYpO,SAAS8a,EAAIld,EAAE,MAG1F,IAEH,IAAM6F,EAAW2K,EAAY3O,QAAQ,EAC/BiE,GAAe,EAAID,EACnBE,EAAeyK,EAAY3O,QAAQ2O,EAAY/S,OAE/CuI,EAASvF,KAAKE,IAAI,EAAE6P,EAAYxP,KAAO+E,GACvCE,EAAYxF,KAAKE,IAAI,EAAE6P,EAAYpP,QAAU2E,GAE/CoT,EAAe,yBACfC,EAAkB,yBAClBzC,EAAS,yBACTlU,EAAM,yBACNE,EAAe,yBACf0W,EAAmB,yBACnBkB,EAAgB,yBAepB,GAbI/J,EAAY9O,UACZyX,EAAe,uBAAMzF,SAAY,CAAC,EAAE7N,EAAS,GAAI,GAAI8N,SAAY,CAAC,KAAK,EAAE,GAA1D,UACf,+BAAeR,KAAM,CAAEnN,EAAO,EAAG,IAAK,IAAK,GAAG,MAC9C,mCAAmB/H,MAAOuS,EAAY1O,oBAGtC0O,EAAY7O,aACZyX,EAAkB,uBAAM1F,SAAY,CAAC,EAAE5N,EAAY,GAAI,GAAI6N,SAAY,CAAC,KAAK,EAAE,GAA7D,UAClB,+BAAeR,KAAM,CAAElN,EAAU,EAAG,IAAM,IAAM,GAAI,MACpD,mCAAmBhI,MAAOuS,EAAY1O,oBAItC0O,EAAY9N,WAAW,CACvB,IAAM8X,EAAoB,EAAV/Z,KAAK2S,GACf/D,EAAY,GAAM5O,KAAK2S,GACvBhE,EAAwB,IAAV3O,KAAK2S,GAEzBuD,EACA,kCACI,uBAAMjD,SAAU,CAAC,EAAE7N,EAAS,GAAI8N,SAAU,EAAElT,KAAK2S,GAAG,EAAE,EAAE,GAAxD,UACI,gCAAgBD,KAAM,CAACnN,EAAO,EAAG,GAAI,GAAI,EAAGwU,EAASpL,EAAaC,KAClE,mCAAmBpR,MAAOuS,EAAY1O,cAAeuR,KAAQxM,iBAEjE,uBAAM6M,SAAU,CAAC,EAAE7N,EAAS,GAAK8N,SAAU,EAAElT,KAAK2S,GAAG,EAAE,EAAE,GAAzD,UACI,gCAAgBD,KAAM,CAACnN,EAAO,EAAG,GAAI,GAAI,EAAGwU,EAASpL,EAAaC,KAClE,mCAAmBpR,MAAOuS,EAAY1O,cAAeuR,KAAQxM,mBAKrE2J,EAAY5O,cACZyX,EAAmB,uBAAM3F,SAAY,CAAC,EAAE5N,EAAY,GAAjC,UACf,kCAAkBqN,KAAM,CAAClN,EAAU,EAAGA,EAAU,EAAG,GAAK,MACxD,mCAAmBhI,MAAOuS,EAAY1O,oBApElB,IAwEtB2Y,EAxEsB,kDAyExB,WAAYC,GAAQ,IAAD,8BACjB,gBACKA,MAAQA,EAFI,EAzEK,qDA6Ef3a,GACP,IACM4a,EAAKla,KAAKE,KAAK,GAAKF,KAAKwT,IAAI,EAAIxT,KAAK2S,GAAKrT,IAC3C6a,EAAKna,KAAKsT,IAAI,EAAItT,KAAK2S,GAAKrT,GAClC,OAAO,IAAI8G,UAHA,EAGkB8T,EAAIC,GAAIC,eAAeC,KAAKJ,WAjFnC,GAwEI7T,SAahC,GAAI2J,EAAY7N,aAAa,CACzB,IAAMoY,EAAa/U,EAAO,EACpBgV,EAAO,IAAIP,EAAkBM,GAE7BE,EAAWxa,KAAKsE,IAAI,GAAKgW,EAAW,IAI1CpY,EACA,kCACA,uBAAM+Q,SAAU,EAAG1N,EAAO,EAAa,EAATiV,EAAapV,EAAWoV,EAAY,GAAIF,EAAa,GAAnF,UACI,8BAAc5H,KAAM,CAAC6H,EARZ,GAQwBC,EANpB,EACF,SAMX,mCAAmBhd,MAAOuS,EAAY1O,cAAeuR,KAAQxM,iBAEjE,uBAAM6M,SAAU,CAAE1N,EAAO,EAAa,EAATiV,EAAapV,EAAWoV,EAAY,GAAIF,EAAa,GAAlF,UACI,8BAAc5H,KAAM,CAAC6H,EAZZ,GAYwBC,EAVpB,EACF,SAUX,mCAAmBhd,MAAOuS,EAAY1O,cAAeuR,KAAQxM,oBAKrE,GAAI2J,EAAY/N,IAAI,CAChB,IACMyY,EAAc,IACdC,EAFY,EAEDnV,EAAmB,EAAKvF,KAAKwT,IAAIxT,KAAK2S,GAAK8H,GACtDE,EAAWvV,EAHC,EAGWG,EAAkB,EAAKvF,KAAK4a,IAAI5a,KAAK2S,GAAK8H,GACjEI,EAASH,EAAQ,GACjBI,EAAYH,EAAWD,EAAUG,EAAS,GAEhD7Y,EACA,kCACI,uBAAMiR,SAAU,CAAC,EAAE0H,EAAS,GAAI,GAAhC,UACI,gCAAgBjI,KAAM,CAACgI,EAAS,GAAI,GAAI,EAAa,EAAV1a,KAAK2S,GAAQ,EAAG3S,KAAK2S,GAAK8H,KACrE,mCAAmBjd,MAAOuS,EAAY1O,cAAeuR,KAAQxM,iBAEjE,uBAAM6M,SAAU,CAAC,EAAE0H,EAAS,GAA5B,UACI,gCAAgBjI,KAAM,CAACgI,EAAS,GAAI,GAAI,EAAa,EAAV1a,KAAK2S,GAAQ,EAAG3S,KAAK2S,GAAK8H,KACrE,mCAAmBjd,MAAOuS,EAAY1O,cAAeuR,KAAQxM,gBAEjE,uBAAM6M,SAAU,CAAC,EAAE6H,EAAU,GAA7B,UACI,gCAAgBpI,KAAM,CAACmI,EAAQ,GAAI,MACnC,mCAAmBrd,MAAOuS,EAAY1O,cAAeuR,KAAQxM,oBAKzE,IAAK2J,EAAY5O,YAAY,CACzB,IAAM4Z,EAAiB,GACjBC,EAAcxV,EAAU,EAAKxF,KAAKwT,IAAIxT,KAAK2S,GAAKoI,GAChDE,EAAc5V,EAAeG,EAAU,EAAKxF,KAAK4a,IAAI5a,KAAK2S,GAAKoI,GAErEjB,EAAgB,kCAChB,uBAAM7G,SAAU,CAAC,EAAEgI,EAAY,GAAI,GAAnC,UACI,gCAAgBvI,KAAM,CAACsI,EAAY,GAAI,GAAI,EAAa,EAAVhb,KAAK2S,GAAQ,EAAG3S,KAAK2S,GAAKoI,KACxE,mCAAmBvd,MAAOuS,EAAY1O,cAAeuR,KAAMxM,iBAE/D,uBAAM6M,SAAU,CAAC,EAAEgI,EAAY,GAAI,GAAnC,UACI,gCAAgBvI,KAAM,CAACsI,EAAY,GAAI,GAAI,EAAa,EAAVhb,KAAK2S,GAAQ,EAAG3S,KAAK2S,GAAKoI,KACxE,mCAAmBvd,MAAOuS,EAAY1O,cAAeuR,KAAQxM,mBAMrE,IAAMJ,EAAS0L,mBAAQ,kBAAM3B,EAAY7K,iBAAgB,KAAO,CAAC6K,EAAYzP,KArJjD,EAuJH0U,mBAAS,GAvJN,oBAuJvBC,EAvJuB,KAuJjBC,EAvJiB,OAwJHF,mBAAS,GAxJN,oBAwJvBG,EAxJuB,KAwJjBC,EAxJiB,OAyJHJ,mBAAS,GAzJN,oBAyJvBK,EAzJuB,KAyJjBC,EAzJiB,OA0JJN,mBAAS,GA1JL,oBA0JvBO,GA1JuB,KA0JlBC,GA1JkB,KA4JtBC,GAAgB,SAACC,GACnB,OAAOA,EAAMC,KAET,IAAK,IAEGT,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IAEGG,EADAD,GAAgB,IAEhB,MACR,IAAK,IACGE,GAAOvV,KAAKE,IAAIqV,GAAO,GAAG,KAC1BC,GAAWD,IACX,MACR,IAAK,IACGA,GAAOvV,KAAKsE,IAAIiR,GAAO,EAAE,IACzBC,GAAWD,IACX,MACR,IAAK,IACGG,EAAME,iBAENT,EAAQ,EACRE,EAAQ,EACRE,GAAO,EACPL,EAJAD,EAAQ,GAKRG,EAAWD,GACXG,EAAWD,GACXG,GAAWD,MAe3B,OATApF,IAAMO,WAAU,WAIZ,OAHA/G,OAAOkM,iBAAiB,UAAWJ,IAG5B,WACH9L,OAAOmM,oBAAoB,UAAWL,OAE3C,IAGC,wBAAOxC,SAAU,CAAC,GAAG,EAAEsC,IAAOrC,SAAU,CAAC+B,EAAME,EAAME,GAArD,UACI,kCACCrP,EAAO2L,KAAI,SAAC+K,EAAGnd,GAAJ,OACR,iCACI,+BAAemT,KAAM,CAAC1M,EAAOzG,GAAI,GAAI,EAAG,EAAES,KAAK2S,MAC/C,mCAAmBgK,IAAK,SAAAC,GAAE,OAAIN,EAAS1Q,QAAQrM,GAAKqd,GAAIhK,KAAMxM,YAAiByM,SAAS,UAAUC,UAAa,OAFxGvT,MAKdyG,EAAO2L,KAAI,SAAC+K,EAAGnd,GAAJ,OACR,iCACI,+BAAemT,KAAM,CAAC1M,EAAOzG,GAAI,GAAI,EAAG,EAAES,KAAK2S,MAC/C,mCAAmBgK,IAAK,SAAAC,GAAE,OAAIJ,EAAU5Q,QAAQrM,GAAKqd,GAAIhK,KAAQxM,eAF1D7G,SAMdwQ,EAAY/N,KAAOA,EACnB+N,EAAY9O,SAAWyX,EACvB3I,EAAY7O,YAAcyX,EAC1B5I,EAAY9N,YAAciU,EAC1BnG,EAAY7N,cAAgBA,EAC5B6N,EAAY5O,aAAeyX,GAC1B7I,EAAY5O,aAAe2Y,QCrO1B,OAA0B,yCCA1B,OAA0B,yC,SCuG1BxI,gBAzFA,WAAO,IAIhB0L,EAJe,EACsDzM,KAAlET,EADY,EACZA,kBAAmBD,EADP,EACOA,UAAWI,EADlB,EACkBA,UAAWF,EAD7B,EAC6BA,YAAaC,EAD1C,EAC0CA,SAEvDiN,EAAYV,mBAgDlB,MA9CgC,SAA5BzM,EAAkBzP,QAAkB2c,EAAanN,GACrB,SAA5BC,EAAkBzP,MAAkB2c,EAAa/M,EAChB,QAA5BH,EAAkBzP,MAAiB2c,EAAahN,EACpB,WAA5BF,EAAkBzP,QAAoB2c,EAAajN,GAC5DiN,EAAW3Z,gBAAgByM,EAAkB/F,cAC7CiT,EAAW5Z,gBAEXsN,qBAAU,WAUR,IATA,IAAMnE,EAAS0Q,EAAUrR,QACnBsR,EAAU3Q,EAAO4Q,WAAW,MAI5BC,EAAU,GAEVC,EAAavN,EAAkB/F,aAE5BxK,EAAI,EAAGA,EAAIuQ,EAAkBtF,iBAAiBzK,OAAQR,IAAI,CACjE,IAAM+d,EAAYN,EAAWnb,gBAAgBtC,GAAG,GAC1Cge,EAAaP,EAAWnb,gBAAgBtC,GAAG,GACjDgN,EAAO1E,MAAQyV,EAAYF,EAC3B7Q,EAAOvP,OAASugB,EAAaH,EAC7BF,EAAQM,UAAYH,EACpBH,EAAQO,SAAS,EAAG,EAAGlR,EAAO1E,MAAO0E,EAAOvP,QAC5C,IAAK,IAAImJ,EAAI,EAAGA,EAAIoX,EAAYpX,IAAI,CAClC,IAAIyB,EAAS,EACb,GAAIkI,EAAkBtF,iBAAiBjL,GAAG+I,mBAAmBnC,GAAGyB,OAAO,CACrEA,EAbgBwV,GAchB,IAAMM,EAAW5N,EAAkBtF,iBAAiBjL,GAAG+I,mBAAmBnC,GAAGwB,QAAQ5H,OACrFmd,EAAQM,UAAY1N,EAAkBtF,iBAAiBjL,GAAG+I,mBAAmBnC,GAAGwB,QAAQ+V,EAAS,GAAG1W,WACpGkW,EAAQO,SAAS,EAAGL,EAAUjX,EAhBdiX,GAgBgCA,GAElD,IAAK,IAAIO,EAAI,EAAGA,EAAIL,EAAWK,IACzB7N,EAAkBtF,iBAAiBjL,GAAG+I,mBAAmBnC,GAAGwB,QAAQgW,GAAG3W,aAAeqW,IAC1FH,EAAQM,UAAY1N,EAAkBtF,iBAAiBjL,GAAG+I,mBAAmBnC,GAAGwB,QAAQgW,GAAG3W,WAC3FkW,EAAQO,SAAUL,EAAUO,EAAK/V,EAAQwV,EAAUjX,EAAGiX,EAASA,IAGnE,IAAI/N,EAAU9C,EAAOC,UAAU,YAAa,GAC5CwQ,EAAW9Z,SAASmM,GAEtBS,EAAkB5E,OAAO,WACxB,IAMD,cADA,CACA,OAAKrN,UAAU,YAAYd,MAAO,CAACib,WAAY,UAAWta,QAAS,OAAQiT,cAAc,MAAO9I,MAAO,OAAQ7K,OAAQ,SAAvH,UACE,sBAAKa,UAAU,gBAAgBd,MAAO,CAACib,WAAY,UAAWnQ,MAAO,MAAO7K,OAAQ,OAAOE,MAAM,QAAjG,UACI,eAAC,KAAD,CAAQ+a,OAAQ,CAAChF,SAAS,CAAC,EAAG,EAAG,KAAMiF,IAAI,GAAIC,OAAQ,IAAI,IAAKC,KAAM,GAAIC,IAAK,KAAOtb,MAAO,CAACib,WAAY,OAAQhb,OAAQ,MAAOgZ,aAAa,GAAIS,UAAU,KAAMD,WAAW,KAAK3O,MAAM,OAAxL,UACE,2BAAWoL,SAAU,EAAE,IAAK,IAAK,IAAKqF,UAAa,KACnD,2BAAWrF,SAAU,CAAC,IAAK,GAAI,IAAKqF,UAAa,KACjD,2BAAWrF,SAAU,EAAE,KAAM,IAAK,KAAMqF,UAAa,KACrD,2BAAWrF,SAAU,CAAC,KAAM,IAAK,KAAMqF,UAAW,KAClD,2BAAWrF,SAAU,EAAE,GAAI,EAAG,IAAKqF,UAAW,KACjB,SAA5BxI,EAAkBzP,OAAoB,cAAC,GAAD,CAAYwP,UAAWA,IACjC,SAA5BC,EAAkBzP,OAAoB,cAAC,GAAD,CAAM4P,UAAWA,EAAW9E,QAAQ,IAC9C,QAA5B2E,EAAkBzP,OAAmB,cAACud,GAAD,CAAgB5N,SAAUA,IACnC,WAA5BF,EAAkBzP,OAAsB,cAAC,GAAD,CAAc0P,YAAaA,OAExE,sBAAKlS,UAAU,mBAAf,UACI,qBAAKd,MAAO,CAACC,OAAQ,MACrB,uCAAS,qCAAT,MAA0B,qCAA1B,UAA+C,qCAA/C,0BAAoF,uBAAK,qCAAzF,QAA4G,qCAA5G,yBAAgJ,uBAAhJ,OAAyJ,yCAAzJ,kCACA,qBAAKD,MAAO,CAACC,OAAQ,YAG3B,sBAAKa,UAAU,iBAAiBd,MAAO,CAAC8K,MAAO,MAAO7K,OAAQ,OAAQub,SAAU,UAAWrb,MAAM,QAASU,WAAW,SAAUD,eAAe,SAAUsV,SAAU,YAAlK,UACE,wBAAQlW,MAAO,CAACW,QAAQ,QAASif,IAAKM,IACtC,qBAAK5f,IAAK,GAAIF,IAAK0gB,GAAahgB,UAAU,SAASd,MAAO,CAAC0Z,UAAW,KACtE,qBAAK5Y,UAAY,cACf4a,QAAS,kBAAM3I,EAAkBrD,eADnC,SAEE,oBAAG5O,UAAY,iBAAf,UAAgC,+BAAM,cAAC,KAAD,CAAYuM,KAAM,OAAxD,0BAA2F,+BAAM,cAAC,KAAD,CAAYA,KAAM,YAMrH,qBAAK/M,IAAK,GAAIF,IAAK2gB,GAAajgB,UAAU,sBC/CnCkgB,GAhCF,WAAO,IAEXjO,EAAqBS,KAArBT,kBAEP,OACA,sBAAKjS,UAAU,aAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0c,KAAK,SAASyD,UAAWlgB,IAChC,cAAC,IAAD,CAAOyc,KAAK,UAAUyD,UAAWvN,KACjC,cAAC,IAAD,CAAO8J,KAAK,SAASyD,UAAWjgB,IAChC,cAAC,IAAD,CAAOwc,KAAK,WAAWyD,UAAWhgB,IAClC,cAAC,IAAD,CAAOuc,KAAK,WAAWyD,UAAWhN,KAClC,cAAC,IAAD,CAAOuJ,KAAK,UAAUyD,UAAW/M,KACjC,cAAC,IAAD,CAAOsJ,KAAK,SAASyD,UAAW3M,KAChC,cAAC,IAAD,CAAOkJ,KAAK,eAAeyD,UAAWC,KACtC,cAAC,IAAD,CAAO1D,KAAK,eAAeyD,UAAWE,KACtC,cAAC,IAAD,CAAO3D,KAAK,iBAAiByD,UAAWG,KACxC,cAAC,IAAD,CAAO5D,KAAK,mBAAmByD,UAAWI,KAE1C,cAAC,IAAD,CAAO7D,KAAK,UAAZ,SACmC,UAAhCzK,EAAkBjF,UAAwB,cAAC,IAAD,CAAU/N,GAAG,YAAc,cAAC,GAAD,MAExE,cAAC,IAAD,CAAOyd,KAAK,IAAIyD,UAAWvgB,UAG/B,mBAAGV,MAAO,CAACyb,aAAc,GAAI/B,UAAW,GAAInZ,cAAe,IAAKE,MAAO,UAAWsZ,SAAS,IAA3F,+C,UC+BWxF,I,oBAAAA,aAxED,SAAC1B,GAAW,IACjByO,EAAuBzO,EAAvByO,WAAYtX,EAAW6I,EAAX7I,QAEnB,SAASuX,IACP,IAAI9gB,EAAQuJ,EAAQC,WAAWuX,UAAU,EAAG,GAI5C,MAAc,KAHNrR,SAAS1P,EAAM+gB,UAAU,EAAG,GAAI,IAGZ,KAFpBrR,SAAS1P,EAAM+gB,UAAU,EAAG,GAAI,IAEE,KADlCrR,SAAS1P,EAAM+gB,UAAU,EAAG,GAAI,IACY,GAClD,UAAY,UAmBhB,SAASC,IACPH,EAAW/S,aACXvE,EAAQK,cAAciX,EAAWvU,eAC7B/C,EAAQC,aAAeD,EAAQE,WACjCoX,EAAWxR,cAAc9F,EAAQE,SAAUF,EAAQC,YACnDD,EAAQO,YAAYP,EAAQC,aAE9BD,EAAQQ,mBAAkB,GAsB5B,OA7CAmJ,qBAAU,WACR2N,EAAW1R,QACX0R,EAAWhR,sBAAqB,KAC/B,IAEHqD,qBAAU,WACJ2N,EAAWnU,OACbmU,EAAWhR,sBAAqB,GAChCtG,EAAQK,cAAciX,EAAWtU,eAE3BhD,EAAQC,aAAeqX,EAAWrU,aACxCqU,EAAWhR,uBACXtG,EAAQK,cAAciX,EAAWtU,iBAElC,CAACsU,EAAWtU,eAgCb,qBACElM,UAAU,QACV4a,QAAS+F,EACTC,aAjBJ,WACE1X,EAAQO,YAAYP,EAAQC,YAC5BD,EAAQK,cAAciX,EAAWvU,gBAgB/B4U,aAbJ,WACM3X,EAAQG,gBACVH,EAAQK,cAAcL,EAAQE,UAGhCF,EAAQQ,mBAAkB,IASxBoX,YAzBJ,WACMN,EAAWlU,MACbqU,KAwBAzhB,MAAO,CAAEib,WAAYjR,EAAQC,WAAYsX,YAAaA,IAAeM,YAAa,SANpF,SAQG7X,EAAQI,UAAY,qBAAKtJ,UAAU,WAAWd,MAAO,CAACS,MAAO8gB,KAAzC,qB,OCnEZ,SAASO,GAAajP,GAAQ,IACpCkP,EAA8ClP,EAA9CkP,GAAIC,EAA0CnP,EAA1CmP,IAAKC,EAAqCpP,EAArCoP,UAAWlX,EAA0B8H,EAA1B9H,cAAemX,EAAWrP,EAAXqP,QAE1C,OAAIH,EACEE,EAEA,qBACEnhB,UAAU,iBADZ,SAEC,oBAAGd,MAAO,CAAC0Z,WAAY,EAAGK,SAAU,GAAIN,YAAa,IAAKvD,SAAS,WAAY+E,WAAY,UAAWkH,YAAa,IAAKC,aAAa,IAAKnJ,aAAa,EAAGxY,MAAM,SAAhK,cAA4KwhB,OAG3KC,EAEA,qBAAKphB,UAAU,iBAMf,qBAAKA,UAAU,mBAOjBiK,EAEA,qBACEjK,UAAU,iBADZ,SAGE,mBAAGd,MAAO,CAAC+Z,SAAS,EAAGN,WAAY,EAAGC,WAAW,GAAKxD,SAAS,YAA/D,SAA6EnL,MAM/E,qBACEjK,UAAU,kBADZ,SAGE,mBAAGd,MAAO,CAAC+Z,SAAS,GAAIN,WAAY,EAAGC,WAAY,EAAGxD,SAAS,YAA/D,SAA6E8L,MCpCvF,IAqBezN,gBArBH,SAAC1B,GAAW,IACfyO,EAAwBzO,EAAxByO,WAAY3W,EAAYkI,EAAZlI,SACf0X,EAAS,GAIb,GAFAA,EAAOtf,KAAK,cAAC+e,GAAD,CAAuBC,IAAI,EAAOhX,cAAeJ,EAASI,gBAAtC,IAED,GAA3BJ,EAASC,QAAQ5H,OACnB,IAAK,IAAIR,EAAI,EAAGA,EAAImI,EAASG,MAAOtI,IAClCmI,EAASM,QAGb,IAAK,IAAIzI,EAAI,EAAGA,EAAImI,EAASG,MAAOtI,IAC/B8e,EAAWlX,UAAUO,EAASC,QAAQpI,GAAGkI,cAC5C2X,EAAOtf,KAAK,cAAC,GAAD,CAAeue,WAAYA,EAAYtX,QAASW,EAASC,QAAQpI,IAArDA,IAK1B,OAFA6f,EAAOtf,KAAK,cAAC+e,GAAD,CAAmCC,IAAI,EAAOhX,cAAeJ,EAASI,eAAnDJ,EAASG,QAEjC,qBAAK9K,MAAO,CAACyZ,WAAY9O,EAASE,QAAS/J,UAAU,MAArD,SAA4DuhB,O,OCrBtD,SAASC,GAAWzP,GAAQ,IACjC/H,EAA6C+H,EAA7C/H,MAAOD,EAAsCgI,EAAtChI,OAAQ0X,EAA8B1P,EAA9B0P,WAAYC,EAAkB3P,EAAlB2P,cAE/BH,EAAS,GAEPI,EAAUD,GAAgCD,EAC5C/R,EAAQ,EAEZ6R,EAAOtf,KAAK,cAAC+e,GAAD,CAAuBC,IAAI,EAAOC,IAAK,KAAnB,IAEhC,IAAK,IAAIxf,EAAI,EAAGA,EAAIsI,EAAOtI,IACrBA,KAAKigB,EACW,GAAdA,EAAQjgB,IACVgO,GAAS,EACT6R,EAAOtf,KAAK,cAAC+e,GAAD,CAAsBC,IAAI,EAAME,UAAWzR,GAAxBhO,MAET,GAAfigB,EAAQjgB,GACf6f,EAAOtf,KAAK,cAAC+e,GAAD,CAAsBC,IAAI,EAAMG,SAAS,GAAtB1f,IAExBA,GAAKsI,EAAM,GAAmB,GAAd2X,EAAQjgB,GAC/B6f,EAAO,GAAK,cAACP,GAAD,CAAsBC,IAAI,GAAPvf,GAG/B6f,EAAOtf,KAAK,cAAC+e,GAAD,CAAsBC,IAAI,GAAPvf,IAI/B6f,EAAOtf,KAAK,cAAC+e,GAAD,CAAsBC,IAAI,EAAOC,IAAOxf,EAAE,GAAvBA,IAIrC,OAAO,qBAAKxC,MAAO,CAACyZ,WAAY5O,GAAS/J,UAAU,aAA5C,SAA0DuhB,IC/BnE,IA6Ee9N,gBA7EQ,SAAC1B,GAAW,IAC1ByO,EAAwBzO,EAAxByO,WAAYlX,EAAYyI,EAAZzI,SADa,EAGI6N,mBAASqJ,EAAWtU,cAHxB,oBAGzB/C,EAHyB,KAGbI,EAHa,OAIA4N,mBAAShO,GAJT,oBAIzBC,EAJyB,KAIfK,EAJe,OAKY0N,oBAAS,GALrB,oBAKzB9N,EALyB,KAKTK,EALS,KAOhC,SAAS+W,IACP,IAAI9gB,EAAQwJ,EAAWuX,UAAU,EAAG,GAIpC,MAAc,KAHNrR,SAAS1P,EAAM+gB,UAAU,EAAG,GAAI,IAGZ,KAFpBrR,SAAS1P,EAAM+gB,UAAU,EAAG,GAAI,IAEE,KADlCrR,SAAS1P,EAAM+gB,UAAU,EAAG,GAAI,IACY,GAClD,UAAY,UAoBhB,SAASC,IACPH,EAAW/S,aACXlE,EAAciX,EAAWvU,eACrB9C,GAAcC,IAChBoX,EAAWxR,cAAc5F,EAAUD,GACnCM,EAAYN,IAEdO,GAAkB,GAsBpB,OA9CAmJ,qBAAU,WACR2N,EAAW1R,QACX0R,EAAWhR,sBAAqB,KAC/B,IAEHqD,qBAAU,WACJ2N,EAAWnU,OACbmU,EAAWhR,sBAAqB,GAAM,GACtCjG,EAAciX,EAAWtU,eAEnB/C,GAAcqX,EAAWrU,aAC/BqU,EAAWhR,uBACXjG,EAAciX,EAAWtU,iBAE1B,CAACsU,EAAWtU,eAiCb,qBACElM,UAAU,QACV4a,QAAS+F,EACTC,aAjBJ,WACEnX,EAAYN,GACZI,EAAciX,EAAWvU,gBAgBvB4U,aAbJ,WACMxX,GACFE,EAAcH,GAGhBM,GAAkB,IAShBoX,YAzBJ,WACMN,EAAWlU,MACbqU,KAwBAzhB,MAAO,CAAEib,WAAYhR,EAAYa,MAAO,GAAIyW,YAAaA,IAAeM,YAAa,SANvF,SAQGzX,GAAY,qBAAKtJ,UAAU,WAAWd,MAAO,CAACS,MAAO8gB,KAAzC,oBCpDJhN,gBAhBM,SAAC1B,GAAW,IACxB6P,EAAsD7P,EAAtD6P,KAAMpB,EAAgDzO,EAAhDyO,WAAYqB,EAAoC9P,EAApC8P,MAAO9X,EAA6BgI,EAA7BhI,OAAQlK,EAAqBkS,EAArBlS,QAASyJ,EAAYyI,EAAZzI,SAC7CiY,EAAS,GAEV1hB,GAAS0hB,EAAOtf,KAAK,cAAC+e,GAAD,CAAuBC,IAAI,EAAOhX,cAAepK,IAA7B,IAE5C,IAAK,IAAI6B,EAAI,EAAGA,EAAImgB,EAAOngB,IACzB6f,EAAOtf,KAAK,cAAC,GAAD,CAAwBue,WAAYA,EAAYlX,SAAUA,GAArC5H,IAKnC,OAFKkgB,GAAML,EAAOtf,KAAK,cAAC+e,GAAD,CAA0BC,IAAI,EAAOhX,cAAepK,GAAjCgiB,IAEnC,qBAAK3iB,MAAO,CAACyZ,WAAY5O,GAAS/J,UAAU,MAA5C,SAAmDuhB,OCmB7C9N,gBA7BS,SAAC1B,GASvB,IATkC,IAC3B6P,EAA0E7P,EAA1E6P,KAAME,EAAoE/P,EAApE+P,QAAS9X,EAA2D+H,EAA3D/H,MAAOwW,EAAoDzO,EAApDyO,WAAYuB,EAAwChQ,EAAxCgQ,UAAWC,EAA6BjQ,EAA7BiQ,gBAAiB1Y,EAAYyI,EAAZzI,SAE/D2Y,EAAWvD,mBAEbwD,EAAO,GAIFxgB,EAAI,EAAGA,EAAIsI,EAAOtI,IAAK,CAC9B,IAAIygB,EAAc,MAAgBnY,EAAMtI,EAAE,GACtC0gB,EAAaL,EAAU/X,EAAMtI,EAC5BsgB,IACCtgB,EAAIsI,EAAQ,EAAGmY,EAAc,MAAgBnY,EAAMtI,EAAE,GACpD0gB,GAAa,GAEpBF,EAAKjgB,KAAK,cAAC,GAAD,CAAsB2f,KAAMA,EAAMC,MAAOngB,EAAE,EAAGqI,OAAQoY,EAAY3B,WAAYA,EAAY3gB,QAASuiB,EAAY9Y,SAAUA,GAAtG5H,IAG/B,OACE,qBAAK4W,GAAG,kBAAR,SACE,sBAAKA,GAAG,SAASwG,IAAKmD,EAAU/iB,MAAO,CAACyb,aAAc,EAAGhC,WAAY,EAAGjZ,YAAY,GAApF,UACGoiB,GAAW,mBAAGxJ,GAAG,OAAN,SAAcwJ,IACzBI,UCuDMzO,gBA7EQ,SAAC1B,GAAW,IAC1B+P,EAAuE/P,EAAvE+P,QAASL,EAA8D1P,EAA9D0P,WAAYC,EAAkD3P,EAAlD2P,cAAelB,EAAmCzO,EAAnCyO,WAAYhW,EAAuBuH,EAAvBvH,oBAEjDyX,EAAWvD,mBAEbwD,EAAO,GACPG,EAAY,GAEhB,GAAyB,SAArB7B,EAAWhe,MACb,GAAIge,EAAW9T,eAAe,CAC5B,IAAM4V,EAAangB,KAAKyD,MAAM,GAAM4E,EAAoBR,OAClDuY,EAAY/X,EAAoBR,MAAS,EAAIsY,EAC7CE,EAAcrgB,KAAKsgB,KAAKF,EAAU,GAClCG,EAAavgB,KAAKoE,MAAMgc,EAAU,GAClCI,EAAQ,cAAC,GAAD,CAAyBf,MAAM,EAAM5X,MAAOsY,EAAY9B,WAAYA,EAAYuB,UAAWvX,EAAoBrL,OAAQ6iB,iBAAiB,GAAlH,GAC9BY,EAAQ,cAAC,GAAD,CAAyBhB,MAAM,EAAM5X,MAAOsY,EAAY9B,WAAYA,EAAYuB,UAAWvX,EAAoBrL,QAAzF,GAC9B0jB,EAAQ,cAAC,GAAD,CAAyBjB,MAAM,EAAM5X,MAAOwY,EAAahC,WAAYA,EAAYuB,UAAWvX,EAAoBrL,QAA1F,GAC9B2jB,EAAO,cAAC,GAAD,CAAyBlB,MAAM,EAAM5X,MAAO0Y,EAAYlC,WAAYA,EAAYuB,UAAWvX,EAAoBrL,OAAQmK,UAAU,GAA3G,GACnC+Y,EAAUpgB,KAAK0gB,EAAOE,EAAOD,EAAOE,OAEjC,CACH,IAAMR,EAAangB,KAAKyD,MAAM,IAAO4E,EAAoBR,OAEnDwY,EADYhY,EAAoBR,MAAQsY,EACd,EAC1BV,EAAO,cAAC,GAAD,CAAyBA,MAAM,EAAM5X,MAAOsY,EAAY9B,WAAYA,EAAYuB,UAAWvX,EAAoBrL,OAAQ6iB,iBAAiB,EAAM1Y,UAAU,GAAlI,GAC7BuZ,EAAQ,cAAC,GAAD,CAAyBjB,MAAM,EAAM5X,MAAOwY,EAAahC,WAAYA,EAAYuB,UAAWvX,EAAoBrL,OAAQ6iB,iBAAiB,GAAnH,GACpCK,EAAUpgB,KAAK2f,EAAMiB,GAMzB,GAFwB,QAApBrC,EAAWhe,OAAiB0f,EAAKjgB,KAAK,cAACuf,GAAD,CAAqBzX,OAAQ,EAAGC,MAAOQ,EAAoBR,MAAOyX,WAAYA,IAA5D,IAEP,IAAlDjX,EAAoBC,mBAAmBvI,OACxC,IAAK,IAAIR,EAAI,EAAGA,EAAI8I,EAAoBrL,OAAQuC,IAC9C8I,EAAoBG,SAGxB,IAAK,IAAIjJ,EAAI,EAAGA,EAAI8I,EAAoBrL,OAAQuC,IAC9C8I,EAAoBC,mBAAmB/I,GAAG4I,SAASE,EAAoBR,OACvEQ,EAAoBC,mBAAmB/I,GAAG6I,iBAAiBC,EAAoBrL,OAAOuC,GAClFA,EAAE,IAAM,GACV8I,EAAoBC,mBAAmB/I,GAAG2I,YAC1C6X,EAAKjgB,KAAK,cAAC,GAAD,CAAaue,WAAYA,EAAY3W,SAAUW,EAAoBC,mBAAmB/I,IAA5EA,KAGpBwgB,EAAKjgB,KAAK,cAAC,GAAD,CAAaue,WAAYA,EAAY3W,SAAUW,EAAoBC,mBAAmB/I,IAA5EA,IAmBxB,OAfG8I,EAAoBE,WACjBF,EAAoBrL,OAAO,IAAM,EACnC+iB,EAAKjgB,KAAK,cAACuf,GAAD,CAA6CzX,OAAQ,KAAMC,MAAOQ,EAAoBR,MAAO0X,cAAeA,GAA3FlX,EAAoBrL,SAE/C+iB,EAAKjgB,KAAK,cAACuf,GAAD,CAA6CzX,OAAQ,GAAQC,MAAOQ,EAAoBR,MAAO0X,cAAeA,GAA7FlX,EAAoBrL,SAI7CqL,EAAoBrL,OAAO,IAAM,EACnC+iB,EAAKjgB,KAAK,cAACuf,GAAD,CAA6CzX,OAAQ,EAAGC,MAAOQ,EAAoBR,MAAO0X,cAAeA,GAAxFlX,EAAoBrL,SAE/C+iB,EAAKjgB,KAAK,cAACuf,GAAD,CAA6CzX,OAAQ,KAAMC,MAAOQ,EAAoBR,MAAO0X,cAAeA,GAA3FlX,EAAoBrL,SAKjD,qBAAKmZ,GAAG,iBAAR,SACE,sBAAKA,GAAG,SAASwG,IAAKmD,EAAU/iB,MAAO,CAACyb,aAAc,GAAIhC,WAAY,GAAIjZ,YAAa,IAAvF,UACwB,SAArB8gB,EAAWhe,OAAoB,qBAAKtD,MAAO,CAACW,QAAQ,OAAQE,WAAW,WAAY4Y,WAAY,KAAMgC,aAAc,EAAG7a,eAAe,cAAtG,SAC7BuiB,IAEFP,GAAW,mBAAGxJ,GAAG,OAAN,SAAcwJ,IACzBI,UCuDMzO,gBApIO,SAAC1B,GAAW,IACvB+P,EAAmC/P,EAAnC+P,QAASiB,EAA0BhR,EAA1BgR,WAAYvC,EAAczO,EAAdyO,WAEtBwC,EAAYtE,mBAEdhU,EAAa,GACb+W,EAAa,GACbC,EAAgB,GAEpB,GAAyB,SAArBlB,EAAWhe,MACbif,EAAawB,MAAMF,EAAW7gB,QAAQghB,KAAK,IAC3CxB,EAAgBuB,MAAMF,EAAW7gB,QAAQghB,KAAK,QAE3C,CACCH,EAAWA,EAAW7gB,OAAO,GAAG,GAAG6gB,EAAWA,EAAW7gB,OAAO,GAAG,GAAK,GAAGse,EAAW5W,cAE1F,IAAK,IAAIlI,EAAIqhB,EAAW7gB,OAAO,EAAGR,GAAK,EAAGA,IAAI,CAC5C,IAAIyhB,EAAW,GACXC,EAAc,GAEZC,EAAON,EAAWrhB,EAAE,GAAG,GAEzBwE,EADS6c,EAAWrhB,GAAG,GACX2hB,EAEZC,EAAa,EACbf,EAAY,EACZgB,EAAU,EACd,GAAa,IAATrd,EACFub,EAAawB,MAAMF,EAAW7gB,QAAQghB,KAAK,IAC3CxB,EAAgBuB,MAAMF,EAAW7gB,QAAQghB,KAAK,SAE3C,GAAIhd,EAAO,EAAE,CAChBkd,EAAe,CAACI,EAAG,EAAGC,EAAG,EAAGC,GAAI,GAEhCnB,GADAe,EAAaD,EAAQ,EAAInd,IACC,EAAIod,EAAapd,EAAOmd,EAAKnd,EACvDqd,EAAUphB,KAAKoE,MAAM+c,EAAWpd,GAEhC,IADA,IAAIyd,EAAcV,MAAM/c,GAAMgd,KAAKK,GAC1B7hB,EAAI,EAAGA,EAAI,EAAGA,IAErB,IADA,IAAIsF,EAAItF,EACDsF,EAAId,GAAQqc,EAAY,GAC7BoB,EAAY3c,IAAM,EAClBub,GAAa,EACbvb,GAAK,EAKT,IAFA,IAAItF,EAAI,EACJiO,EAAM,EACJjO,EAAIwE,GACRid,EAASxT,GAAO,EAChBwT,EAASxT,EAAI,IAAM,EACnBA,GAAOgU,EAAYjiB,GAAK,EACxBA,GAAK,EAGP,IADA,IAAIme,EAAW,EACNne,EAAI,EAAGA,EAAIiiB,EAAYzhB,OAAO,EAAGR,IACxC0hB,EAAYvD,EAAW8D,EAAYjiB,GAAK,GAAK,EAC7C0hB,EAAYvD,EAAW8D,EAAYjiB,GAAK,GAAK,EAC7C0hB,EAAYvD,EAAW8D,EAAYjiB,GAAK,IAAM,EAC9Cme,EAAWA,EAAW8D,EAAYjiB,GAAK,EAEzC+f,EAAWzf,QAAQmhB,GACnBzB,EAAc1f,QAAQohB,GACtB1Y,EAAW1I,SAAQ,OAEhB,CACHohB,EAAc,CAACI,EAAG,EAAGC,GAAI,GAGzBlB,GADAe,EAAaD,EAAQ,GADrBnd,IAAQ,IAEiBA,EACzBqd,EAAUphB,KAAKoE,MAAM+c,EAAWpd,GAEhC,IADA,IAAIyd,EAAcV,MAAM/c,GAAMgd,KAAKK,GAC1B7hB,EAAI,EAAGA,EAAI,EAAGA,IAErB,IADA,IAAIsF,EAAItF,EACDsF,EAAId,GAAQqc,EAAY,GAC7BoB,EAAY3c,IAAM,EAClBub,GAAa,EACbvb,GAAK,EAKT,IAFA,IAAItF,EAAI,EACJiO,EAAM,EACJjO,EAAIwE,GACRid,EAASxT,GAAO,EAChBwT,EAASxT,EAAI,GAAK,EAClBwT,EAASxT,EAAI,IAAM,EACnBA,GAAOgU,EAAYjiB,GAAK,EACxBA,GAAK,EAGP,IADA,IAAIme,EAAW,EACNne,EAAI,EAAGA,EAAIiiB,EAAYzhB,OAAO,EAAGR,IACxC0hB,EAAYvD,EAAW8D,EAAYjiB,GAAK,GAAK,EAC7C0hB,EAAYvD,EAAW8D,EAAYjiB,GAAK,IAAM,EAC9Cme,EAAWA,EAAW8D,EAAYjiB,GAAK,EAEzC+f,EAAWzf,QAAQmhB,GACnBzB,EAAc1f,QAAQohB,GACtB1Y,EAAW1I,SAAQ,IAGE,QAArBwe,EAAWhe,QACbif,EAAWA,EAAWvf,OAAO,GAAK,GAClCwf,EAAcA,EAAcxf,OAAO,GAAK,IAE1Cuf,EAAWzf,QAAQ,IACnB0f,EAAczf,KAAK,IACnByI,EAAWzI,MAAK,GAGlB,IAAI2hB,EAAW,GAEf,GAA0C,GAAtCpD,EAAW7T,iBAAiBzK,OAC9B,IAAK,IAAIR,EAAI,EAAGA,EAAIqhB,EAAW7gB,OAAQR,IACrC8e,EAAW3R,oBAGf,IAAK,IAAInN,EAAI,EAAGA,EAAIqhB,EAAW7gB,OAAQR,IAAK,CAC1C8e,EAAW7T,iBAAiBjL,GAAGkJ,eAAemY,EAAWrhB,GAAG,GAAIqhB,EAAWrhB,GAAG,IAC9E8e,EAAW7T,iBAAiBjL,GAAGoJ,cAAcJ,EAAWhJ,IACxD,IAAIogB,GAAU,EACW,QAArBtB,EAAWhe,OAAmBd,IAAMqhB,EAAW7gB,OAAO,IAAG4f,EAAU,iBACvE8B,EAAS3hB,KAAK,cAAC,GAAD,CAAwB6f,QAASA,EAASL,WAAcA,EAAW/f,GAAIggB,cAAiBA,EAAchgB,GAAI8e,WAAYA,EAAYhW,oBAAqBgW,EAAW7T,iBAAiBjL,IAA9JA,IAErC,OACE,qBAAK4W,GAAG,gBAAR,SACE,sBAAKA,GAAG,WAAWwG,IAAKkE,EAAxB,UACE,mBAAG1K,GAAG,OAAN,SAAcwJ,IACb8B,U,4DClII,OAA0B,gCCA1B,OAA0B,oCCA1B,OAA0B,iCCqB1BC,I,OAbH,SAAC9R,GAAW,IACbmB,EAA6BnB,EAA7BmB,KAAM4Q,EAAuB/R,EAAvB+R,KAAMhC,EAAiB/P,EAAjB+P,QAASiC,EAAQhS,EAARgS,KAC5B,OACI,sBAAK/jB,UAAU,SAAf,UACI,mBAAGsY,GAAG,OAAN,SAAcwJ,IACbgC,GAAQ,qBAAKxkB,IAAK0kB,GAAWhkB,UAAU,SACtC8jB,IAAS5Q,GAAS,qBAAK5T,IAAK2kB,GAAgBjkB,UAAU,aACvDkT,GAAQ,qBAAK5T,IAAK4kB,GAAYlkB,UAAU,SACzC,oBAAGsY,GAAG,OAAN,UAAcyL,EAAd,kBC2CGtQ,gBApDiB,SAAC1B,GAAW,IACnCoS,EAAmFpS,EAAnFoS,IAAKpY,EAA8EgG,EAA9EhG,KAAMqY,EAAwErS,EAAxEqS,MAAO3C,EAAiE1P,EAAjE0P,WAAYC,EAAqD3P,EAArD2P,cAAehX,EAAsCqH,EAAtCrH,WAAY8V,EAA0BzO,EAA1ByO,WAAYuC,EAAchR,EAAdgR,WAExEb,EAAO,GACP5Y,GAAW,EAEf,GAAK8a,EAIH,IAFA,IAAMC,EAAYliB,KAAKoE,MAAqB,GAAfwc,EAAW,IAClCuB,EAAWvB,EAAW,GAAKsB,EACxB3iB,EAAI,EAAGA,EAAI4iB,EAAU5iB,IAC5BwgB,EAAKjgB,KAAK,cAAC,GAAD,CAAsC4f,MAAOwC,EAAU3iB,EAAGqI,OAAQ,MAAMua,EAAS5iB,GAAI8e,WAAYA,EAAY3gB,QAASkjB,EAAW,GAAGuB,EAAS5iB,EAAG4H,SAAUA,GAAvIyZ,EAAW,GAAG,EAAErhB,SALrCwgB,EAAKjgB,KAAK,cAACuf,GAAD,CAAqBzX,OAAQ,EAAGC,MAAO+Y,EAAW,GAAItB,WAAYA,IAAhD,IAUxC,IAAK,IAAI/f,EAAI,EAAGA,EAAIqhB,EAAW,GAAIrhB,IAEjC,GAD8B4H,KAA9B6a,GAAOziB,GAAKqhB,EAAW,GAAG,GACtBrhB,EAAE,GAAK,EAAE,CACX,IAAImgB,EAAQkB,EAAW,GACnBhX,IAAM8V,GAAS,GACnBK,EAAKjgB,KAAK,cAAC,GAAD,CAAsB4f,MAAOA,EAAO9X,OAAQ,KAAMyW,WAAYA,EAAY3gB,QAASkjB,EAAW,GAAGrhB,EAAG4H,SAAUA,GAA3F5H,SAG7BwgB,EAAKjgB,KAAK,cAAC,GAAD,CAAsB4f,MAAOkB,EAAW,GAAIhZ,OAAQ,EAAGyW,WAAYA,EAAY3gB,QAASkjB,EAAW,GAAGrhB,EAAG4H,SAAUA,GAAhG5H,IAmBjC,OAfGgJ,EACGqY,EAAW,GAAG,GAAK,EACrBb,EAAKjgB,KAAK,cAACuf,GAAD,CAAgCzX,OAAQ,KAAMC,MAAO+Y,EAAW,GAAIrB,cAAeA,GAAlEqB,EAAW,KAEtCb,EAAKjgB,KAAK,cAACuf,GAAD,CAAgCzX,OAAQ,GAAQC,MAAO+Y,EAAW,GAAIrB,cAAeA,GAApEqB,EAAW,KAIpCA,EAAW,GAAG,GAAK,EACrBb,EAAKjgB,KAAK,cAACuf,GAAD,CAAgCzX,OAAQ,EAAGC,MAAO+Y,EAAW,GAAIrB,cAAeA,GAA/DqB,EAAW,KAEtCb,EAAKjgB,KAAK,cAACuf,GAAD,CAAgCzX,OAAQ,KAAMC,MAAO+Y,EAAW,GAAIrB,cAAeA,GAAlEqB,EAAW,KAKxC,qBAAKzK,GAAG,iBAAR,SACE,qBAAKA,GAAG,SAASpZ,MAAO,CAACyb,aAAc,GAAIhC,WAAY,GAAIjZ,YAAa,IAAxE,SACGwiB,SC0DMzO,gBA3GgB,SAAC1B,GAO5B,IAPuC,IAChCgR,EAA0BhR,EAA1BgR,WAAYvC,EAAczO,EAAdyO,WAEf9V,EAAa,GACb+W,EAAa,GACbC,EAAgB,GAEXhgB,EAAIqhB,EAAW7gB,OAAO,EAAGR,GAAK,EAAGA,IAAI,CAC5C,IAAIyhB,EAAW,GACXC,EAAc,GAEZC,EAAON,EAAWrhB,EAAE,GAAG,GAEzBwE,EADS6c,EAAWrhB,GAAG,GACX2hB,EAEZC,EAAa,EACbf,EAAY,EACZgB,EAAU,EAEd,GAAY,GAARrd,EACFub,EAAawB,MAAMF,EAAW7gB,QAAQghB,KAAK,IAC3CxB,EAAgBuB,MAAMF,EAAW7gB,QAAQghB,KAAK,SAE3C,GAAIhd,EAAO,EAAE,CAChBkd,EAAe,CAACI,EAAG,EAAGC,EAAG,EAAGC,GAAI,GAEhCnB,GADAe,EAAaD,EAAQ,EAAInd,IACC,EAAIod,EAAapd,EAAOmd,EAAKnd,EACvDqd,EAAUphB,KAAKoE,MAAM+c,EAAWpd,GAEhC,IADA,IAAIyd,EAAcV,MAAM/c,GAAMgd,KAAKK,GAC1B7hB,EAAI,EAAGA,EAAI,EAAGA,IAErB,IADA,IAAIsF,EAAItF,EACDsF,EAAId,GAAQqc,EAAY,GAC7BoB,EAAY3c,IAAM,EAClBub,GAAa,EACbvb,GAAK,EAKT,IAFA,IAAItF,EAAI,EACJiO,EAAM,EACJjO,EAAIwE,GACRid,EAASxT,GAAO,EAChBwT,EAASxT,EAAI,IAAM,EACnBA,GAAOgU,EAAYjiB,GAAK,EACxBA,GAAK,EAGP,IADA,IAAIme,EAAW,EACNne,EAAI,EAAGA,EAAIiiB,EAAYzhB,OAAO,EAAGR,IACxC0hB,EAAYvD,EAAW8D,EAAYjiB,GAAK,GAAK,EAC7C0hB,EAAYvD,EAAW8D,EAAYjiB,GAAK,GAAK,EAC7C0hB,EAAYvD,EAAW8D,EAAYjiB,GAAK,IAAM,EAC9Cme,EAAWA,EAAW8D,EAAYjiB,GAAK,EAEzC+f,EAAWzf,QAAQmhB,GACnBzB,EAAc1f,QAAQohB,GACtB1Y,EAAW1I,SAAQ,OAEhB,CACHohB,EAAc,CAACI,EAAG,EAAGC,GAAI,GAGzBlB,GADAe,EAAaD,EAAQ,GADrBnd,IAAQ,IAEiBA,EACzBqd,EAAUphB,KAAKoE,MAAM+c,EAAWpd,GAEhC,IADA,IAAIyd,EAAcV,MAAM/c,GAAMgd,KAAKK,GAC1B7hB,EAAI,EAAGA,EAAI,EAAGA,IAErB,IADA,IAAIsF,EAAItF,EACDsF,EAAId,GAAQqc,EAAY,GAC7BoB,EAAY3c,IAAM,EAClBub,GAAa,EACbvb,GAAK,EAKT,IAFA,IAAItF,EAAI,EACJiO,EAAM,EACJjO,EAAIwE,GACRid,EAASxT,GAAO,EAChBwT,EAASxT,EAAI,GAAK,EAClBwT,EAASxT,EAAI,IAAM,EACnBA,GAAOgU,EAAYjiB,GAAK,EACxBA,GAAK,EAGP,IADA,IAAIme,EAAW,EACNne,EAAI,EAAGA,EAAIiiB,EAAYzhB,OAAO,EAAGR,IACxC0hB,EAAYvD,EAAW8D,EAAYjiB,GAAK,GAAK,EAC7C0hB,EAAYvD,EAAW8D,EAAYjiB,GAAK,IAAM,EAC9Cme,EAAWA,EAAW8D,EAAYjiB,GAAK,EAEzC+f,EAAWzf,QAAQmhB,GACnBzB,EAAc1f,QAAQohB,GACtB1Y,EAAW1I,SAAQ,IAGvByf,EAAWzf,QAAQ,IACnB0f,EAAczf,KAAK,IACnByI,EAAWzI,MAAK,GAIhB,IAFA,IAAI2hB,EAAW,GAENliB,EAAI,EAAGA,EAAIqhB,EAAW7gB,OAAQR,IACrCkiB,EAAS3hB,KAAK,cAAC,GAAD,CAAiCwf,WAAcA,EAAW/f,GAAIggB,cAAiBA,EAAchgB,GAAIgJ,WAAYA,EAAWhJ,GAAI8e,WAAYA,EAAYuC,WAAYA,EAAWrhB,IAA7IA,IAE9C,OACE,qBAAK4W,GAAG,gBAAR,SACGsL,OC/EMW,GAvBA,SAACxS,GAAW,IAChByS,EAAmCzS,EAAnCyS,KAAY1C,GAAuB/P,EAA7BgS,KAA6BhS,EAAvB+P,SAAStB,EAAczO,EAAdyO,WACxBiE,EAAS,wBACT1B,EAAa,GAYjB,OAVIyB,GACAzB,EAAa,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAClC0B,EAAS,cAAC,GAAD,CAAwB1B,WAAYA,EAAYvC,WAAYA,MAIrEuC,EAAa,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAClC0B,EAAS,cAAC,GAAD,CAAwB1B,WAAYA,EAAYvC,WAAYA,KAIrE,gCACI,mBAAGlI,GAAG,OAAN,SAAcwJ,IACb2C,MCLEC,GAbH,SAAC3S,GAAW,IACb+P,EAA6B/P,EAA7B+P,QAAetB,GAAczO,EAApBxF,KAAoBwF,EAAdyO,YAEhBiE,EAAS,cAAC,GAAD,CAAyBN,KAAK,EAAM1C,WAAc,GAAIC,cAAiB,GAAIlB,WAAYA,EAAYuC,WAD/F,CAAC,GAAG,KAGvB,OACI,gCACI,mBAAGzK,GAAG,OAAN,SAAcwJ,IACb2C,MCoBEE,GA5BO,SAAC5S,GAAW,IACvB+P,EAA6B/P,EAA7B+P,QAASvV,EAAoBwF,EAApBxF,KAAMiU,EAAczO,EAAdyO,WAClBiE,EAAS,wBACTG,EAAK,EACLC,EAAO,EACPC,EAAW,EAcf,MAXe,aAAXhD,EAEA2C,EAAS,cAAC,GAAD,CAAyBL,OAAO,EAAMrY,MAAM,EAAM0V,WAAY,GAAIC,cAAe,GAAIlB,WAAYA,EAAYuC,WAAY,CAACxW,EAAK,OAGxIqY,EAAU,GAALrY,EACLuY,EAAW3iB,KAAKsE,IAAIme,EARZ,IASRC,EAAOtY,EAAK,EACZkY,EAAS,cAAC,GAAD,CAAyB1Y,MAAM,EAAM0V,WAAY,GAAIC,cAAe,GAAIlB,WAAYA,EAAYuC,WAAY,CAAC8B,EAAKC,MAI7H,gCACE,mBAAGxM,GAAG,OAAN,SAAcwJ,IACb2C,EACAG,EAjBO,IAiBK,oBAAGtM,GAAG,OAAN,eAAgBsM,EAjBrB,GAiBK,wBCFNG,GArBA,SAAChT,GACwBA,EAA7BxF,KADgB,IAEnBkY,EACA1B,EAFSjB,EAAuB/P,EAAvB+P,QAAStB,EAAczO,EAAdyO,WAYtB,OAHAuC,EAJW,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAK3B0B,EAAS,cAAC,GAAD,CAAwB1B,WAAYA,EAAYvC,WAAYA,IAGjE,gCACI,mBAAGlI,GAAG,OAAN,SAAcwJ,IACb2C,MCwFEhR,gBAnGI,SAAC1B,GAAW,IACpBoN,EAA0BpN,EAA1BoN,WAAYqB,EAAczO,EAAdyO,WAEfwE,EAAU,GACVpB,EAAW,GACXqB,EAAO,GACPnN,EAAM,EAIV,GAAIqH,EAAW7b,YAAY,CACzB,IAAMygB,EAAO5E,EAAWtZ,gBAAgBsZ,EAAWtZ,gBAAgB3D,OAAO,GAAG,GAC7E8iB,EAAQ/iB,KAAK,cAAC,GAAD,CAAkB6f,QAAS,cAAe0C,MAAM,EAAMT,KAAMA,EAAM5f,KAAK,EAAOqc,WAAYA,GAA7E1I,IAC1BA,GAAO,OAEJ,GAAyB,WAArB0I,EAAWhe,MAAmB,CACrC,IAAMuhB,EAAO5E,EAAWtZ,gBAAgBsZ,EAAWtZ,gBAAgB3D,OAAO,GAAG,GAC7E8iB,EAAQ/iB,KAAK,cAAC,GAAD,CAAkB6f,QAAS,gBAAiB0C,MAAM,EAAOT,KAAMA,EAAM5f,KAAK,EAAOqc,WAAYA,GAAhF1I,IAC1BA,GAAO,EAET,GAAIqH,EAAWhb,IAAI,CACjB,IAAM4f,EAAO5E,EAAWtZ,gBAAgB,GAAG,GAC3Cmf,EAAQ/iB,KAAK,cAAC,GAAD,CAAkB6f,QAAS,MAAO0C,MAAM,EAAOT,KAAMA,EAAMvD,WAAYA,GAA1D1I,IAC1BA,GAAO,EACP8L,EAAS3hB,KAAK,cAAC,GAAD,CAAkB6f,QAAS,aAAcvV,KAAMwX,EAAMvD,WAAYA,GAApD1I,IAC3BA,GAAO,EAET,GAAIqH,EAAW/a,WAAW,CACX+a,EAAWtZ,gBAAgB,GAAG,GAC3C+d,EAAS3hB,KAAK,cAAC,GAAD,CAAyB6f,QAAS,aAAcvV,KAAM,GAAIiU,WAAYA,GAAlD1I,IAClCA,GAAO,EAET,GAAIqH,EAAWlb,KAAK,CAClB,IAAM8f,EAAO5E,EAAWtZ,gBAAgBsZ,EAAWtZ,gBAAgB3D,OAAO,GAAG,GAC7E0hB,EAAS3hB,KAAK,cAAC,GAAD,CAAe6f,QAAS,MAAOvV,KAAMwX,EAAMvD,WAAYA,GAA7C1I,IACxBA,GAAO,EACP8L,EAAS3hB,KAAK,cAAC,GAAD,CAAe6f,QAAS,MAAOvV,KAAMwX,EAAMvD,WAAYA,GAA7C1I,IACxBA,GAAO,EAET,GAAwB,KAApBqH,EAAWjb,KAAY,CACzB,IAAM6f,EAAO5E,EAAWtZ,gBAAgBsZ,EAAWtZ,gBAAgB3D,OAAO,GAAG,GACrD,SAApBid,EAAWjb,MACb0f,EAAS3hB,KAAK,cAAC,GAAD,CAAe6hB,MAAM,EAAOhC,QAAS,WAAYiC,KAAMA,GAA7CjM,IACxBA,GAAO,EACP8L,EAAS3hB,KAAK,cAAC,GAAD,CAAe6hB,MAAM,EAAOhC,QAAS,WAAYiC,KAAMA,GAA7CjM,IACxBA,GAAO,GAEoB,UAApBqH,EAAWjb,MAClB0f,EAAS3hB,KAAK,cAAC,GAAD,CAAyB6f,QAAS,YAAavV,KAAM,GAAIiU,WAAYA,GAAjD1I,IAClCA,GAAO,EACP8L,EAAS3hB,KAAK,cAAC,GAAD,CAAyB6f,QAAS,YAAavV,KAAM,GAAIiU,WAAYA,GAAjD1I,KAEP,WAApBqH,EAAWjb,MAClB0f,EAAS3hB,KAAK,cAAC,GAAD,CAAkB6f,QAAS,YAAavV,KAAMwX,EAAMvD,WAAYA,GAAnD1I,IAC3BA,GAAO,EACP8L,EAAS3hB,KAAK,cAAC,GAAD,CAAkB6f,QAAS,YAAavV,KAAMwX,EAAMvD,WAAYA,GAAnD1I,KAEA,QAApBqH,EAAWjb,OAClB0f,EAAS3hB,KAAK,cAAC,GAAD,CAA2B6f,QAAS,UAAW9X,MAAO,GAAIwW,WAAYA,EAAYuB,UAAW,EAAGC,iBAAiB,EAAM1Y,UAAU,GAA3GwO,IACpCA,GAAO,EACP8L,EAAS3hB,KAAK,cAAC,GAAD,CAA2B6f,QAAS,UAAW9X,MAAO,GAAIwW,WAAYA,EAAYuB,UAAW,EAAGC,iBAAiB,EAAM1Y,UAAU,GAA3GwO,KAEtCA,GAAO,EAET,GAAIqH,EAAW9a,aAAa,CAC1B,IAAM0f,EAAO5E,EAAWtZ,gBAAgB,GAAG,GAC3Cof,EAAKhjB,KAAK,cAAC,GAAD,CAAe6hB,MAAM,EAAOhC,QAAS,cAAeiC,KAAMA,GAAhDjM,IACpBA,GAAO,EACPmN,EAAKhjB,KAAK,cAAC,GAAD,CAAe6hB,MAAM,EAAOhC,QAAS,cAAeiC,KAAMA,GAAhDjM,IACpBA,GAAO,EAMT,GAJIqH,EAAW/b,UACb6hB,EAAKhjB,KAAK,cAAC,GAAD,CAAe6hB,MAAM,EAAMhC,QAAS,UAAWiC,KAAM5E,EAAWtZ,gBAAgB,GAAG,IAAzEiS,IACpBA,GAAO,GAELqH,EAAW9b,WAAW,CACxB,IAAM0gB,EAAO5E,EAAWtZ,gBAAgBsZ,EAAWtZ,gBAAgB3D,OAAO,GAAG,GAC7E+iB,EAAKhjB,KAAK,cAAC,GAAD,CAAe6hB,MAAM,EAAMhC,QAAS,aAAciC,KAAMA,GAA9CjM,IACpBA,GAAO,EAET,GAAyB,SAArB0I,EAAWhe,MAAiB,CAC9B,IAAMuhB,EAAO5E,EAAWtZ,gBAAgB,GAAG,GAC3Cof,EAAKhjB,KAAK,cAAC,GAAD,CAAeiR,MAAM,EAAM4O,QAAS,OAAQiC,KAAMA,GAAxCjM,IACpBA,GAAO,EAGT,OACE,qBAAKQ,GAAG,aAAR,SACE,sBAAKpZ,MAAO,CAACW,QAAQ,eAAgB8Y,WAAY,KAAMgC,aAAc,GAArE,UACGqK,EACD,sBAAK9lB,MAAO,CAACW,QAAQ,OAAQE,WAAW,aAAc4Y,WAAY,KAAMgC,aAAc,EAAG7a,eAAe,cAAxG,UACG8jB,EACAqB,aCsMExR,gBAzRG,WAAO,IAyBnB0L,EAzBkB,EACUhI,oBAAS,GADnB,oBACf+N,EADe,KACLC,EADK,OAEchO,oBAAS,GAFvB,oBAEfiO,EAFe,KAEHC,EAFG,OAG4BlO,oBAAS,GAHrC,oBAGfmO,EAHe,KAGIC,EAHJ,OAIiBpO,mBAAS,GAJ1B,oBAIfqO,EAJe,KAIEC,EAJF,OAKmBtO,mBAAS,GAL5B,oBAKfuO,EALe,KAKGC,EALH,OAMkBxO,mBAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAN/H,oBAMfyO,EANe,KAMDC,EANC,OAOoB1O,mBAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAPjI,oBAOf2O,EAPe,KAOAC,EAPA,KAsBhBC,EAAatH,mBACbuH,EAAgBvH,mBAvBA,EAwBmDhM,KAAlET,EAxBe,EAwBfA,kBAAmBD,EAxBJ,EAwBIA,UAAWI,EAxBf,EAwBeA,UAAWD,EAxB1B,EAwB0BA,SAAUD,EAxBpC,EAwBoCA,YAE1B,SAA5BD,EAAkBzP,QAAkB2c,EAAanN,GACrB,SAA5BC,EAAkBzP,MAAkB2c,EAAa/M,EAChB,QAA5BH,EAAkBzP,MAAiB2c,EAAahN,EACpB,WAA5BF,EAAkBzP,QAAoB2c,EAAajN,GA0B5D,IAAMgU,EAAerS,mBAAQ,kBAAMsL,EAAWtZ,kBAAiB,IACzDsgB,EAAWlU,EAAkB/K,SAAW,GAoCxCkf,EAAc,sBAAKpmB,UAAY,sBAAjB,UAChB,mBAAGA,UAAY,YAAf,yBACA,qBAAKA,UAAY,qBACf4a,QAAS,kBAAKyK,GAAeD,IAC7BlmB,MAAO,CAACib,WAAYlI,EAAkBhG,eAFxC,SAIE,yBAEF,qBAAKjM,UAAY,uBAAjB,SACGolB,GAAe,cAAC,KAAD,CAAeiB,OAAQT,EAAcU,SAAS,WAAW3mB,MAAOsS,EAAkBhG,cAAesa,iBAtEvH,SAAqB5mB,GACnB,IAAM6mB,EAAU7mB,EAAM8mB,IAAKC,WAAWC,cAEtC,GADA1U,EAAkB/E,SAASsZ,IACtBZ,EAAagB,SAASJ,GAAQ,CACjC,IAAIK,EAAcjB,EAClBiB,EAAYrB,GAAmBgB,EAC/BX,EAAgBgB,GAEhBpB,GADiBD,EAAkB,GAAK,aAmEtCsB,EAAqB,sBAAK9mB,UAAY,sBAAjB,UACvB,mBAAGA,UAAY,YAAf,2BACA,qBAAKA,UAAY,qBACf4a,QAAS,kBAAM2K,GAAsBD,IACrCpmB,MAAO,CAACib,WAAYlI,EAAkB/F,cAFxC,SAIE,yBAEF,qBAAKlM,UAAY,yBAAjB,SACGslB,GAAsB,cAAC,KAAD,CAAee,OAAQP,EAAeQ,SAAS,WAAW3mB,MAAOsS,EAAkB/F,aAAcqa,iBAvE9H,SAA4B5mB,GAC1B,IAAM6mB,EAAU7mB,EAAM8mB,IAAKC,WAAWC,cAEtC,GADA1U,EAAkBzM,gBAAgBghB,IAC7BV,EAAcc,SAASJ,GAAQ,CAClC,IAAIK,EAAcf,EAClBe,EAAYnB,GAAoBc,EAChCT,EAAiBc,GAEjBlB,GADiBD,EAAmB,GAAK,aAoEvCqB,EACN,qBAAK/mB,UAAY,cAAjB,SACE,qBAAKA,UAAY,cACf4a,QAAS,kBAAM3I,EAAkBvE,SAAQ,IAD3C,SAEE,mBAAG1N,UAAY,eAAf,gCAIEgnB,EACN,qBAAKhnB,UAAY,cAAjB,SACE,qBAAKA,UAAY,cACf4a,QAAS,kBAAM3I,EAAkBvE,SAAQ,IAD3C,SAEE,mBAAG1N,UAAY,eAAf,6BAIEinB,EAAa,sBAAKjnB,UAAY,cAAjB,UACjB,mBAAGA,UAAY,QAAf,kBACA,qBAAKA,UAAY,OAAOV,IAAKC,EAAMqb,QAAS,kBAK5CsM,gCAAqBlB,EAAY,CAAChb,SAAU,qBAC5Ckc,gCAAqBjB,EAAe,CAACjb,SAAU,4BANexL,IAAI,KACjE0lB,GAAY,qBAAKllB,UAAU,aAAf,0BAQf,IAAMmnB,EACN,qBAAKnnB,UAAY,OAAjB,SACE,qBAAKA,UAAY,MAAM4a,QAAS,kBAAMzT,QAAQC,IAAI,OAAlD,SACE,cAAC,KAAD,CAAemF,KAAM,GAAIrN,MAAO,CAACS,MAAO,eAKtCynB,EACN,qBAAKpnB,UAAY,OAAjB,SACE,cAAC,KAAD,CAAWqT,MAAO,EAAGpU,GAAG,UAAUqU,YAOpC,WACErB,EAAkB5E,QAAO,GACzB4E,EAAkBrE,gBAAgBoY,GAClC/T,EAAkBrE,gBAAgBqY,GAAe,IAVQ1S,SAAS,EAAlE,SACE,qBAAKvT,UAAY,MAAjB,SACI,cAAC,KAAD,CAAkBuM,KAAM,GAAIrN,MAAO,CAACS,MAAO,iBAWnD,IAAM0M,EAAQ,sBAAKrM,UAAY,cAAjB,UACZ,mBAAGA,UAAY,QAAf,mBACA,sBAAKA,UAAY,OACf4a,QAAS,kBAAK3I,EAAkBzE,YADlC,UAEE,cAAC,KAAD,CAAUjB,KAAM,GAAIrN,MAAO,CAACS,MAAO,WACnC,6BAIE0nB,EAAO,sBAAKrnB,UAAY,cAAjB,UACb,mBAAGA,UAAY,QAAf,kBACA,qBAAKA,UAAY,OACf4a,QAAS,kBAAKuK,GAAaD,IAD7B,SAGE,cAAC,KAAD,CAAe3Y,KAAM,GAAIrN,MAAO,CAACS,MAAO,gBAItCmiB,EAAO,UAAM7P,EAAkBzP,OACH,QAA5ByP,EAAkBzP,MACpBsf,EAAU,gBAEyB,SAA5B7P,EAAkBzP,QACzBsf,EAAU,qBAiBZ,IAAMwF,EACN,gCACE,mBAAGhP,GAAG,OAAN,qCACA,sBAAKpZ,MAAO,CAAC8K,MAAO,OAAQnK,QAAQ,gBAApC,UACE,qBAAKyY,GAAG,OAAOpZ,MAAO,CAAC0Z,UAAU,EAAG+B,aAAa,EAAGjb,YAAa,EAAGsK,MAAO,QAASmQ,WAAY,UAAW9a,MAAM,QAAjH,yBACA,qBAAKiZ,GAAG,OAAOpZ,MAAO,CAAC0Z,UAAU,EAAG+B,aAAa,EAAGhC,WAAY,EAAG3O,MAAO,QAASmQ,WAAY,UAAW9a,MAAM,SAAhH,SACE,8BACG4S,EAAkBrF,QAAQkH,KAAI,SAACtK,EAAK9H,GAAN,OArBvC,SAAoBoW,EAAKtO,EAAK0X,GAC5B,IAAIqG,EAASplB,KAAKsgB,KAAKpT,SAAS6R,GAAKjP,EAAkB1F,MACnDib,EAAe,GACNA,EAAbD,EAAS,EAAmB,SAA0B,QACtD,IAAIE,EAAS,GAEb,OADoBA,EAApBpY,SAAS6R,GAAO,EAAa,SAAoB,QAC1C,sBAAehiB,MAAO,CAACW,QAAQ,eAAgBmK,MAAO,QAAtD,UAEL,oBAAG9K,MAAO,CAAC0Z,UAAU,GAAI+B,aAAa,EAAGhC,WAAW,GAAItZ,MAAM,SAA9D,UAAyE6hB,EAAzE,IAA+EuG,EAA/E,KAAyFF,EAAzF,IAAkGC,KAClG,qBAAKtoB,MAAO,CAAC0Z,UAAU,EAAG+B,aAAa,EAAGxC,aAAc,GAAIhZ,OAAQ,GAAI6K,MAAO,GAAImQ,WAAY3Q,EAAKnK,MAAM,aAH3FyY,GAgBX4P,CAAWhmB,EAAG8H,EAAI,GAAIA,EAAI,iBAO5BkF,EAASyX,EACf,sBAAKnmB,UAAY,SAAjB,UACE,sBAAK8e,IAAOkH,EAAZ,UACGsB,EACD,cAAC,GAAD,CACExF,QAAO,UAAKA,GACZiB,WAAYmD,EACZ1F,WAAYvO,OAGhB,qBAAK6M,IAAOmH,EAAZ,SACE,cAAC,GAAD,CACElD,WAAYmD,EACZ/G,WAAYA,EACZqB,WAAYvO,SAIlB,sBAAKjS,UAAY,kBAAjB,UACE,sBAAK8e,IAAOkH,EAAZ,UACGsB,EACD,cAAC,GAAD,CACExF,QAAO,UAAKA,GACZiB,WAAYmD,EACZ1F,WAAYvO,OAGhB,qBAAK6M,IAAOmH,EAAZ,SACE,cAAC,GAAD,CACElD,WAAYmD,EACZ/G,WAAYA,EACZqB,WAAYvO,SAKlB,OACE,sBAAKjS,UAAU,KAAf,UACE,cAAC,KAAD,CAAQ2nB,OAAQ,EAAhB,SACE,sBAAK3nB,UAAY,UAAjB,UACGmnB,EACAJ,EACA1a,EACA+Z,EACAa,EACAH,EACAO,EACAL,EACAI,OAGL,qBAAKloB,MAAO,CAACkW,SAAU,WAAYwS,UAAU,SAAUC,UAAU,SAAU1oB,OAxNhE,IAwNkFgb,WAAW,WAAxG,SACGzL,UC1RHoZ,GAAYhW,GAAU1H,SAItB2d,G,uKAEF,OACE,qBAAK7oB,MAAO,CAACib,WAAY,WAAzB,SACE,cAAC3H,GAAD,CAAmB+F,MAAOuP,GAA1B,SACE,cAAC,gBAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOpL,KAAK,aAAZ,SACuC,UAApCoL,GAAU7V,kBAAkBlF,IAAkB,cAAC,IAAD,CAAU9N,GAAG,YAAc,cAAC,GAAD,MAE5E,cAAC,IAAD,CAAOyd,KAAK,IAAZ,SACE,cAAC,GAAD,mB,GAXEsL,aAqBHvU,eAASsU,IC/BxB7Z,IAAS+Z,OAAO,cAAC,GAAD,IAAS1c,SAAS2c,eAAe,U","file":"static/js/main.ee265baf.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #D14240;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // padding: 0.5rem calc((100vw - 4000px) / 2);\r\n  padding: 0.5rem;\r\n  z-index: 10;\r\n  border-radius: 30px 30px 30px 30px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  // height: 70%;\r\n  cursor: pointer;\r\n  border-radius: 30px;\r\n  margin: 5px;\r\n  border-style: solid; \r\n  border-color: #D14240;\r\n\r\n  &:hover {\r\n    // transition: all 0.2s ease-in-out;\r\n    background: #FFE7EC;\r\n    color: red;\r\n    // height: 100%;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n\r\n  &.active {\r\n    color: red;\r\n    background: #FFE7EC;\r\n    // height: 100%;\r\n    border-radius: 40px;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n`;\r\n\r\nexport const PlainLink = styled(Link)`\r\n  text-decoration:none;\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  // margin-right: 24px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 80vw; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 30px;\r\n  background: #256ce1;\r\n  // padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  width: 80px;\r\n  height: 50px;\r\n\r\n\r\n  /* Second Nav */\r\n  // margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #D14240;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/complex-logo.268ab665.png\";","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink, \r\n  PlainLink\r\n} from './NavbarElements';\r\nimport logo from \"../../assets/complex-logo.png\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <PlainLink to='/'><img style={{height: 60, margin: 20, float: 'left'}}src={logo} alt='logo' /></PlainLink>\r\n        <PlainLink to='/'>\r\n          <p style ={{letterSpacing: 3, marginRight: 100, color:\"white\", float: 'left'}}>3d-o</p>\r\n        </PlainLink>\r\n        {/* <Bars /> */}\r\n        <NavMenu>\r\n          <NavLink to='/about'>\r\n            <p style ={{letterSpacing: 2}}>about</p>\r\n          </NavLink>\r\n          <NavLink to='/learn' >\r\n            <p style ={{letterSpacing: 2}}>learn</p>\r\n          </NavLink>\r\n          <NavLink to='/create'>\r\n            <p style ={{letterSpacing: 2}}>create</p>\r\n          </NavLink>\r\n          <NavLink to='/browse'>\r\n            <p style ={{letterSpacing: 2}}>browse</p>\r\n          </NavLink>\r\n          <NavLink to='/gallery'>\r\n            <p style ={{letterSpacing: 2}}>gallery</p>\r\n          </NavLink>\r\n          <NavLink to='/contact'>\r\n            <p style ={{letterSpacing: 2}}>contact</p>\r\n          </NavLink>\r\n          <NavLink to='/login'>\r\n            <p style ={{letterSpacing: 2}}>login</p>\r\n          </NavLink>\r\n          {/* Second Nav */}\r\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n        </NavMenu>\r\n        {/* <NavBtn>\r\n          <NavBtnLink to='/signin'>Sign In</NavBtnLink>\r\n        </NavBtn> */}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/transparent.7b709eb2.png\";","import React from 'react';\r\nimport \"./create.css\"\r\nimport logo from \"../assets/transparent.png\"\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <div className = \"landing\">\r\n        <img className=\"transparent-logo\" src={logo} alt=\"\"/>\r\n        <p className=\"landing-text\">A work in progress, 3d-o is a web application I developed to combat rising COVID19 case counts. 3d-o is based on my lifelong hobby, 3d-origami. Intersecting engineering and art and the first of its kind, 3d-o promotes social distancing by engaging users in a fun, indoor activity.</p>\r\n        <p className=\"landing-text\">Try 3d-o by going to the 'create' tab!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>About</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Learn = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Learn</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Learn;","export default __webpack_public_path__ + \"static/media/logo-bg.1d8d140f.png\";","export default __webpack_public_path__ + \"static/media/strawberry-slider-big.9374e4ca.png\";","import React from 'react';\r\nimport bg from \"../assets/logo-bg.png\"\r\n// import bgOff from \"../assets/logo-bg-off.png\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport \"./create-vase.css\"\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '486px',\r\n        backgroundImage: `url(${bg})`, \r\n        backgroundPosition: \"50%\"\r\n      }}\r\n    >\r\n      <div className=\"info-box\" >\r\n        <img src={straw} alt={\"\"} className =\"straw-l\"/>\r\n        <img src={straw} alt={\"\"} className =\"straw-m\"/>\r\n        <img src={straw} alt={\"\"} className =\"straw-r\"/>\r\n        <p className = \"app-name\">3d-o<br/>engineering x art</p>\r\n        <p className = \"name\">— lina nguyen —</p>\r\n        <div className=\"left\">\r\n          <a href=\"https://www.linkedin.com/in/nlina/\" target=\"_blank\" className=\"link\">linkedin</a>\r\n          <br/>\r\n          <a href=\"https://github.com/n-lina/n-lina/raw/main/Lina%20Nguyen%20Resume.pdf\" target=\"_blank\" className=\"link\">resume</a>\r\n        </div>\r\n        <div className=\"right\">\r\n          <a href=\"https://github.com/n-lina\" target=\"_blank\" className=\"link\">github</a>\r\n          <br/>\r\n          <a href=\"mailto:linanguyen@alumni.ubc.ca\" target=\"_blank\" className=\"link\">email</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","export default __webpack_public_path__ + \"static/media/vase.19cb9836.png\";","export default __webpack_public_path__ + \"static/media/basket.6d6869d7.png\";","export default __webpack_public_path__ + \"static/media/swan.219c1002.png\";","export default __webpack_public_path__ + \"static/media/fig.3fd7ce23.PNG\";","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsNew(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[8]\r\n    const last_y = _pts[9]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(y, 0.5));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n// function getCurvePoints(pts, tension, isClosed, numOfSegments) {\r\n\r\n//     // use input value if provided, or use a default value   \r\n//     tension = (typeof tension != 'undefined') ? tension : 0.5;\r\n//     isClosed = isClosed ? isClosed : false;\r\n//     numOfSegments = numOfSegments ? numOfSegments : 16;\r\n\r\n//     var _pts = [], res = [],    // clone array\r\n//         x, y,           // our x,y coords\r\n//         t1x, t2x, t1y, t2y, // tension vectors\r\n//         c1, c2, c3, c4,     // cardinal points\r\n//         st, t, i;       // steps based on num. of segments\r\n\r\n//     // clone array so we don't change the original\r\n//     //\r\n//     _pts = pts.slice(0);\r\n\r\n//     // The algorithm require a previous and next point to the actual point array.\r\n//     // Check if we will draw closed or open curve.\r\n//     // If closed, copy end points to beginning and first points to end\r\n//     // If open, duplicate first points to befinning, end points to end\r\n//     if (isClosed) {\r\n//         _pts.unshift(pts[pts.length - 1]);\r\n//         _pts.unshift(pts[pts.length - 2]);\r\n//         _pts.unshift(pts[pts.length - 1]);\r\n//         _pts.unshift(pts[pts.length - 2]);\r\n//         _pts.push(pts[0]);\r\n//         _pts.push(pts[1]);\r\n//     }\r\n//     else {\r\n//         _pts.unshift(pts[1]);   //copy 1. point and insert at beginning\r\n//         _pts.unshift(pts[0]);\r\n//         _pts.push(pts[pts.length - 2]); //copy last point and append\r\n//         _pts.push(pts[pts.length - 1]);\r\n//     }\r\n\r\n//     // ok, lets start..\r\n\r\n//     // 1. loop goes through point array\r\n//     // 2. loop goes through each segment between the 2 pts + 1e point before and after\r\n//     for (i=2; i < (_pts.length - 4); i+=2) {\r\n//         for (t=0; t <= numOfSegments; t++) {\r\n\r\n//             // calc tension vectors\r\n//             t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n//             t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n//             t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n//             t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n//             // calc step\r\n//             st = t / numOfSegments;\r\n\r\n//             // calc cardinals\r\n//             c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n//             c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n//             c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n//             c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n//             // calc x and y cords with common control vectors\r\n//             x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n//             y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n//             //store points in array\r\n//             res.push(x);\r\n//             res.push(y);\r\n\r\n//         }\r\n//     }\r\n\r\n//     return res;\r\n// }\r\n\r\nconst VaseStore = types\r\n  .model(\"Vase\", {\r\n    cm: false,\r\n    dtop: 100, //20\r\n    d3: 50, //10\r\n    d2: 20, //10\r\n    d1: 5, //35\r\n    dbottom: 2, //20 \r\n    dtop_h: 100, \r\n    d3_h: 90, \r\n    d2_h: 70, \r\n    d1_h: 50, \r\n    dbottom_h: 0, \r\n    height: 50,\r\n    top_rim: false, \r\n    bottom_rim: true, \r\n    flat_bottom: true, \r\n    scale_h: 36,\r\n    default_color: \"#FFFFFF\",\r\n    tot_rows_per_section: types.optional(types.array(types.number), [15,19,10,10]), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[[5,4],[3,2],[1],[0]]), \r\n    // vase has 4 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_flat_bottom(flat_bottom){\r\n        self.flat_bottom = flat_bottom\r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_d3(d3){\r\n        self.d3 = d3\r\n    }, \r\n    update_d2(d2){\r\n        self.d2 = d2\r\n    }, \r\n    update_d1(d1){\r\n        self.d1 = d1\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    },\r\n    update_d_heights(vals){\r\n        self.d3_h = vals[3]\r\n        self.d2_h = vals[2]\r\n        self.d1_h = vals[1]\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n        // console.log(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    cmToPcs(cm, height=false){\r\n        const height_factor = 0.55 // 0.5 cm height per row\r\n        const width_factor = 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(((cm/100) * self.height)/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    },\r\n    getDimensions() {\r\n        // INPUTS \r\n        // dtop: 20,\r\n        // d3: 10, \r\n        // d2: 10, \r\n        // d1: 35,\r\n        // dbottom: 20, \r\n        // dtop_h: 100, \r\n        // d3_h: 90, \r\n        // d2_h: 70, \r\n        // d1_h: 50, \r\n        // dbottom_h: 0, \r\n        // height: 50,\r\n\r\n        // OUTPUTS\r\n        // tot_rows_per_section: types.optional(types.array(types.number), [15,19,10,10]), // bottom to top \r\n        // subsections: types.optional(types.array(types.array(types.number)),[[5,4],[3,2],[1],[0]]), // bottom to top\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n\r\n        // max allowed decrease rate: -1 per 5 pcs\r\n        // max increase rate: +1 per 1 pc \r\n        // min 3 rows per section\r\n\r\n        let modelDimensions = []\r\n        let subsections = [[],[],[],[]]\r\n        let tot_rows_per_section = [0,0,0,0]\r\n        const dbottom_h = self.cmToPcs(self.dbottom_h, true)\r\n        const d1_h = self.cmToPcs(self.d1_h, true) // units = pieces\r\n        const d2_h = self.cmToPcs(self.d2_h, true)\r\n        const d3_h = self.cmToPcs(self.d3_h, true)\r\n        const dtop_h = self.cmToPcs(self.dtop_h, true)\r\n        const heights = [dbottom_h, d1_h, d2_h, d3_h, dtop_h]\r\n\r\n        const dtop = self.cmToPcs(self.dtop) // units = pieces\r\n        const d3 = self.cmToPcs(self.d3)\r\n        const d2 = self.cmToPcs(self.d2)\r\n        const d1 = self.cmToPcs(self.d1)\r\n        const dbottom = self.cmToPcs(self.dbottom)\r\n        const widths = [dbottom, d1, d2, d3, dtop]\r\n\r\n        let max_width = widths[0]\r\n\r\n        // getting from dbottom to d1 in d1_h pieces \r\n\r\n        for (let i = 0; i < widths.length-1; i++){\r\n            const min_height = 3\r\n            let min_height_needed = min_height\r\n            let diff = widths[i+1]-widths[i]\r\n            let height_diff = heights[i+1] - heights[i]\r\n\r\n            let temp_dbottom = widths[i]\r\n            let curr_section = [[temp_dbottom,min_height]]\r\n            \r\n            // decreasing, try making it more spaced out by height?\r\n            if (diff > 0){\r\n                while (diff > 0){\r\n                    const add_to_this_row = Math.floor(temp_dbottom/min_height)\r\n                    const actual_add = Math.min(diff, add_to_this_row)\r\n                    diff -= actual_add \r\n                    temp_dbottom += actual_add\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom, min_height])\r\n                }\r\n            }\r\n            else if (diff < 0){\r\n                diff = diff * -1\r\n                while (diff > 0) {\r\n                    const sub_from_this_row = Math.floor(temp_dbottom/5)\r\n                    const actual_sub = Math.min(diff, sub_from_this_row)\r\n                    diff -= actual_sub\r\n                    temp_dbottom -= actual_sub\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom,min_height])\r\n                }            \r\n            }\r\n            let excess_height = height_diff-min_height_needed\r\n            while (excess_height>0){\r\n                curr_section[excess_height%curr_section.length][1] += 1\r\n                excess_height -= 1\r\n            }\r\n            tot_rows_per_section[i] = Math.max(height_diff, min_height_needed)\r\n            modelDimensions.unshift(curr_section)    \r\n        }\r\n        var modelDimensions_merged = [].concat.apply([], modelDimensions);\r\n        let curr_section = modelDimensions_merged.length-1\r\n        for (let j = 0; j < subsections.length; j++){\r\n            for (let k = 0; k < modelDimensions[modelDimensions.length - j - 1].length; k++){\r\n                subsections[j].push(curr_section-k)\r\n            }\r\n            curr_section -= modelDimensions[modelDimensions.length - j - 1].length\r\n        }\r\n\r\n        self.maxWidth = max_width // un hard code\r\n        self.modelDimensions = modelDimensions_merged\r\n        self.subsections = subsections\r\n        self.tot_rows_per_section = tot_rows_per_section\r\n        console.log(tot_rows_per_section)\r\n        return modelDimensions_merged\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_d1 = self.d1 * scale_factor\r\n        const s_d1_h = (self.d1_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d2 = self.d2 * scale_factor\r\n        const s_d2_h = (self.d2_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d3 = self.d3 * scale_factor\r\n        const s_d3_h = (self.d3_h/100) * self.scale_h - s_dtop_h\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_d1_h,s_d1/2,s_d2_h,s_d2/2, s_d3_h,s_d3/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.4\r\n        var numOfSegments = 6\r\n        let points = [];\r\n        const new_pts = getCurvePointsNew(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] === new_pts[hi+2] && new_pts[hi+1] === new_pts[hi+3]){\r\n                    const temp = new_pts.slice(lo,hi+2)\r\n                    section_pts.push(temp)\r\n                    lo = hi + 2\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            for (let i=0; i<4; i+=1){ //section_pts.length = 4\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    if (self.subsections[i].length > 1){\r\n                        // console.log(self.modelDimensions[self.subsections[i][j]][1])\r\n                        let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                        slice_size = slice_size * 2\r\n                        const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                        curr_idx += slice_size\r\n                        broken_pts.push(slice)\r\n                    } \r\n                    else {\r\n                        broken_pts.push(section_pts[i])\r\n                    }\r\n                }\r\n            }\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push(new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            \r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default VaseStore;\r\n\r\nconst VaseContext = React.createContext();\r\n\r\nexport const VaseProvider = ({ children, store }) => {\r\n    return (\r\n      <VaseContext.Provider value={store}>{children}</VaseContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useVaseStore = () => React.useContext(VaseContext);\r\n\r\nexport const withVaseStore = (Component) => (props) => {\r\n    return <Component {...props} store={useVaseStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\n\r\nconst PxModel = types\r\n  .model(\"PxModel\", {\r\n    pixelColor: \"#FFFFFF\", \r\n    oldColor: \"#FFFFFE\", \r\n    canChangeColor: true, \r\n    inverted: false\r\n  })\r\n  .actions(self => ({\r\n    setPixelColor(col){\r\n      self.pixelColor = col\r\n    }, \r\n    setOldColor(col){\r\n      self.oldColor = col\r\n    }, \r\n    setCanChangeColor(val){\r\n      self.canChangeColor = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default PxModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport PxModel from './PxModel'\r\n\r\nconst RowModel = types\r\n  .model(\"RowModel\", {\r\n    rowData: types.optional(types.array(PxModel), []),\r\n    offset: 0, \r\n    width: 0, \r\n    displayRowNum: 0,\r\n    preColor: \"#FFFFFF\"\r\n  })\r\n  .actions(self => ({\r\n    addPx(){\r\n      self.rowData.push(PxModel.create({oldColor: self.preColor, pixelColor: self.preColor}))\r\n    },\r\n    setOffset(val = 10.5){\r\n      self.offset = val\r\n    }, \r\n    setWidth(val){\r\n      self.width = val\r\n    }, \r\n    setDisplayRowNum(val){\r\n      self.displayRowNum = val\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default RowModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport RowModel from './RowModel'\r\n\r\nconst DrawingSectionModel = types\r\n  .model(\"DrawingSectionModel\", {\r\n    drawingSectionData: types.optional(types.array(RowModel), []),\r\n    width: 0, \r\n    height: 0, \r\n    increasing: false, \r\n    preColor: \"#FFFFFF\"\r\n  })\r\n  .actions(self => ({\r\n    addRow(){\r\n      self.drawingSectionData.push(RowModel.create({preColor: self.preColor}))\r\n    }, \r\n    setWidthHeight(w, h){\r\n      self.width = w\r\n      self.height = h \r\n    }, \r\n    setIncreasing(val){\r\n      self.increasing = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default DrawingSectionModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport html2canvas from 'html2canvas';\r\nimport DrawingSectionModel from './DrawingSectionModel'\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst fileType = {\r\n  PNG: 'image/png',\r\n  JPEG: 'image/jpeg',\r\n  PDF: 'application/pdf'\r\n};\r\n\r\nconst DEFAULT_PNG = {\r\n  fileName: '3do-diagram.png',\r\n  type: fileType.PNG,\r\n  html2CanvasOptions: {}\r\n};\r\n\r\nconst saveAs = (uri, filename) => {\r\n  const link = document.createElement('a');\r\n\r\n  if (typeof link.download === 'string') {\r\n      link.href = uri;\r\n      link.download = filename;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n  } else {\r\n      window.open(uri);\r\n  }\r\n};\r\n\r\nconst ColoringForm = types\r\n  .model(\"ColoringForm\", {\r\n    selectedColor: \"#FF0000\",\r\n    defaultColor: \"#FFFFFF\",\r\n    oldDefault: \"#FFFFFE\",\r\n    preload: false,\r\n    clear: false,\r\n    mode: false,\r\n    maxWidth: 53,\r\n    size: 32,\r\n    canvasPic: \"\",\r\n    appendPic: \"\",\r\n    model: \"swan\", // vase, swan, fig, basket\r\n    inverted: false,\r\n    swan_two_wings: false,\r\n    coloringFormData: types.optional(types.array(DrawingSectionModel), []), \r\n    counter: types.optional(types.array(types.array(types.string)), []),\r\n    totPcs: 0, \r\n    doneDefualt: false,\r\n    msg: \"error\", \r\n    resultMsg: \"error\"\r\n  })\r\n  .actions(self => ({\r\n    storePic(picData){\r\n      self.canvasPic = picData\r\n      return\r\n    }, \r\n    storeAppendPic(picData){\r\n      self.appendPic = picData\r\n      return\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n    setColor(col){\r\n      self.clear = false\r\n      self.selectedColor = col\r\n    },\r\n    setModel(model, swan_one_wing){\r\n      self.model = model\r\n      if (model === \"swan\"){\r\n        self.swan_two_wings = swan_one_wing\r\n      }\r\n    },\r\n    setMsg(result=false, msg=\"valid\"){\r\n      if (!result) self.msg = msg\r\n      else self.resultMsg = msg\r\n    },\r\n    preloadDefaultColor(col){\r\n      self.defaultColor = col\r\n      self.oldDefault = col\r\n    },\r\n    setDefaultColor(col){\r\n      self.doneDefualt = false\r\n      self.clear = false\r\n      self.oldDefault = self.defaultColor\r\n      self.defaultColor = col\r\n    },\r\n    clearAll(){\r\n      self.doneDefualt = false\r\n      if (self.defaultColor === \"#FFFFFF\"){\r\n        self.oldDefault = \"#FFFFFE\" \r\n        self.defaultColor = \"#FFFFFE\"\r\n      }\r\n      else {\r\n        self.oldDefault = \"#FFFFFF\" \r\n        self.defaultColor = \"#FFFFFF\"\r\n      }\r\n      self.clear = true\r\n    }, \r\n    unsetClear(){\r\n      self.clear = false\r\n    },\r\n    setMode(val){\r\n      self.clear = false\r\n      self.mode = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    },\r\n    setPreload(val=true){\r\n      self.preload = val\r\n    },\r\n    exportComponent (node, appendage=false) {\r\n      if(!node.current) {\r\n          throw new Error(\"'node' must be a RefObject\")\r\n      }\r\n      const element = ReactDOM.findDOMNode(node.current);\r\n      return html2canvas(element, {\r\n          scrollY: -window.scrollY,\r\n          useCORS: true,\r\n          // ...html2CanvasOptions\r\n          imageTimeout: 0,\r\n          backgroundColor: \"#FFFFFF\"\r\n      }).then(canvas => {\r\n          // self.canvasPic = canvas.toDataURL(DEFAULT_PNG, 0.1)\r\n          appendage? self.storeAppendPic(canvas.toDataURL(DEFAULT_PNG, 0.1)): self.storePic(canvas.toDataURL(DEFAULT_PNG, 0.1))\r\n      });\r\n    },\r\n    saveDiagram () {\r\n      saveAs(self.canvasPic, \"3do-diagram\")\r\n      saveAs(self.appendPic, \"3do-diagram-appendages\")\r\n      self.resultMsg = \"error\"\r\n    },\r\n    addDrawingSection(){\r\n      self.coloringFormData.push(DrawingSectionModel.create({preColor: self.defaultColor}))\r\n    }, \r\n    addPc(){\r\n      self.totPcs += 1 \r\n    },\r\n    clearColoringForm(){\r\n      self.coloringFormData = []\r\n      self.counter = []\r\n      self.totPcs = 0\r\n      self.selectedColor = \"#FF0000\"\r\n      self.defaultColor = \"#FFFFFF\"\r\n      self.oldDefault = \"#FFFFFE\"\r\n      self.mode = false\r\n      self.doneDefualt = false\r\n      self.canvasPic = \"\"\r\n      self.appendPic = \"\"\r\n      self.inverted = false\r\n      self.swan_two_wings = false\r\n      self.preload = false\r\n      // self.maxWidth = ??\r\n      // self.size = ??\r\n      // self.model = ??\r\n      // error messages dealt with seperately\r\n    },\r\n    updateCounter(oldCol, newCol){\r\n      let done = false\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        const curr_val = parseInt(self.counter[i][1])\r\n        if (self.counter[i][0] === oldCol){\r\n          if (curr_val <= 1){\r\n            self.counter.splice(i,1)\r\n          }\r\n          else self.counter[i][1] = String(curr_val - 1)\r\n        }\r\n      }\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        const curr_val = parseInt(self.counter[i][1])\r\n        if (self.counter[i][0] === newCol){\r\n          done = true\r\n          self.counter[i][1] = String(curr_val + 1)\r\n        }\r\n      }\r\n      if (!done) {\r\n        self.counter.push([newCol, \"1\"])\r\n      }\r\n    }, \r\n    updateCounterDefault(init=false, clear=false){\r\n      if (self.doneDefualt) return\r\n      if (init) {\r\n        self.counter =[[self.defaultColor, String(self.totPcs)]]\r\n        if (clear) self.doneDefualt = true\r\n        return\r\n      }\r\n      let done = false\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        if (self.counter[i][0] === self.oldDefault){\r\n          self.counter[i][0] = self.defaultColor\r\n          done = true\r\n        }\r\n      }\r\n      self.doneDefualt = true\r\n      if (!done) return\r\n      let count = 0 \r\n      let idx = 0\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        if (self.counter[i][0] === self.defaultColor){\r\n          count += 1 \r\n          if (count === 1){\r\n            idx = i \r\n          }\r\n          else if (count === 2){ // merging by adding both to 1st encounter and deleting 2nd one\r\n            self.counter[idx][1] = String(parseInt(self.counter[idx][1]) + parseInt(self.counter[i][1]))\r\n            self.counter.splice(i,1)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default ColoringForm;\r\n","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsBasket(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst BasketStore = types\r\n  .model(\"Basket\", {\r\n    cm: false,\r\n    height: 20, \r\n    diameter: 34, \r\n    dtop: 20, \r\n    dbottom: 20,\r\n    top_rim: true, \r\n    bottom_rim: true, \r\n    lid: true, \r\n    top_handle: true, \r\n    side_handles: false, \r\n    scale_h: 15,\r\n    flat_bottom: false, \r\n    default_color: \"#FFFFFF\",\r\n    tot_rows_per_section: types.optional(types.array(types.number), [15,29]), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[[4,3],[2,1,0]]), \r\n    // basket has 2 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[53,10],[40,10],[28,9],[16,10],[13,5]]),\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\" \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_top_handle(top_handle){\r\n        self.top_handle = top_handle\r\n    },\r\n    update_side_handles(side_handles){\r\n        self.side_handles = side_handles\r\n    },\r\n    update_lid(lid){\r\n        self.lid = lid \r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_diameter(diameter){\r\n        self.diameter = diameter\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    }, \r\n    update_flat_bottom(val) {\r\n        self.flat_bottom = val\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53\r\n        return self.modelDimensions\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_diameter = self.diameter * scale_factor\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.8\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsBasket(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] == new_pts[hi+2] && new_pts[hi+1] == new_pts[hi+3]){\r\n                    const temp = new_pts.slice(lo,hi+2)\r\n                    section_pts.push(temp)\r\n                    lo = hi + 2\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            for (let i=0; i<2; i+=1){ //section_pts.length = 4\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    if (self.subsections[i].length > 1){\r\n                        // console.log(self.modelDimensions[self.subsections[i][j]][1])\r\n                        let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                        slice_size = slice_size * 2\r\n                        const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                        curr_idx += slice_size\r\n                        broken_pts.push(slice)\r\n                    } \r\n                    else {\r\n                        broken_pts.push(section_pts[i])\r\n                    }\r\n                }\r\n            }\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push( new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            \r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default BasketStore;\r\n\r\nconst BasketContext = React.createContext();\r\n\r\nexport const BasketProvider = ({ children, store }) => {\r\n    return (\r\n      <BasketContext.Provider value={store}>{children}</BasketContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useBasketStore = () => React.useContext(BasketContext);\r\n\r\nexport const withBasketStore = (Component) => (props) => {\r\n    return <Component {...props} store={useBasketStore()} />;\r\n  };","import {types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsFigurine(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst FigurineStore = types\r\n  .model(\"Figurine\", {\r\n    cm: false,\r\n    diameter: 13,\r\n    arms: true, \r\n    ears: \"bear\", // bear, bunny, cat, sphere\r\n    body_scale: 0.7,\r\n    body_height: 0.35,\r\n    default_color: \"#FFFFFF\",\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    tot_rows_head: 33,\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[30,12],[40,11],[53,10],[40,10]]), // last = body\r\n    // unused, only for consistency: \r\n    flat_bottom: false, \r\n    top_rim: false, \r\n    bottom_rim: false, \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_ears(val){\r\n        self.ears = val\r\n    },\r\n    update_arms(val){\r\n        self.arms = val\r\n    },\r\n    update_units(units){\r\n        self.cm = units\r\n    }, \r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    getDimensions() {\r\n        self.maxWidth = 53\r\n        return self.modelDimensions\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getBrokenHeadPts(tot_theta_len){\r\n        let theta_start = 0 \r\n        let theta_len = 0\r\n        let divisions = []\r\n        for (let i = 0; i < self.modelDimensions.length-1; i++){\r\n            const num_rows = self.modelDimensions[i][1]\r\n            const ratio = num_rows/self.tot_rows_head\r\n            theta_len = ratio * tot_theta_len\r\n            divisions.push([theta_start, theta_len])\r\n            theta_start += theta_len\r\n        }\r\n        return divisions\r\n    },\r\n    updateCurvedPts(){\r\n        const s_dtop_h = self.diameter * self.body_height\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n\r\n        const s_dtop_bottom = self.diameter * self.body_scale\r\n\r\n        const s_diameter = self.diameter \r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dtop_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop_bottom/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsFigurine(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    },\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default FigurineStore;\r\n\r\nconst FigurineContext = React.createContext();\r\n\r\nexport const FigurineProvider = ({ children, store }) => {\r\n    return (\r\n      <FigurineContext.Provider value={store}>{children}</FigurineContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useFigurineStore = () => React.useContext(FigurineContext);\r\n\r\nexport const withFigurineStore = (Component) => (props) => {\r\n    return <Component {...props} store={useFigurineStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsSwan(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst SwanStore = types\r\n  .model(\"Swan\", {\r\n    cm: false,\r\n    diameter: 16,\r\n    body_height: 0.35,\r\n    top_scale: 1,\r\n    bottom_scale:0.6, \r\n    height_scale: 0.4,\r\n    default_color: \"#FFFFFF\", \r\n    wings: true, // true = two wings\r\n    bottom_rim: true,\r\n    texture: \"\", \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[8, 2]]), // top to bottom\r\n    // unused, only for consistency: \r\n    flat_bottom: false,\r\n    top_rim: false, \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_units(units){\r\n        self.cm = units\r\n    }, \r\n    update_wings(val){\r\n        self.wings = val\r\n    },\r\n    update_bottom_rim(val){\r\n        self.bottom_rim = val\r\n    },\r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    storePic(picData){\r\n        self.texture = picData\r\n    },\r\n    clearTextures(){\r\n        self.texture = \"\"\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getDimensions() {\r\n        self.maxWidth = 53 // un hard code\r\n        // calculations\r\n        return self.modelDimensions\r\n    },\r\n    swanBodyPts(){\r\n        const s_dtop_h = self.diameter * self.height_scale\r\n        const s_dbottom_h = -1 * s_dtop_h * 0.8\r\n\r\n        const s_bottom = self.diameter * self.bottom_scale\r\n        const s_top = self.diameter * self.top_scale\r\n\r\n        const s_diameter = self.diameter \r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_top/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsSwan(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default SwanStore;\r\n\r\nconst SwanContext = React.createContext();\r\n\r\nexport const SwanProvider = ({ children, store }) => {\r\n    return (\r\n      <SwanContext.Provider value={store}>{children}</SwanContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useSwanStore = () => React.useContext(SwanContext);\r\n\r\nexport const withSwanStore = (Component) => (props) => {\r\n    return <Component {...props} store={useSwanStore()} />;\r\n  };","import VaseStore from \"./VaseStore\"\r\nimport ColoringForm from \"./ColoringForm\"\r\nimport BasketStore from \"./BasketStore\"\r\nimport FigurineStore from \"./FigurineStore\"\r\nimport SwanStore from \"./SwanStore\"\r\nimport { types } from \"mobx-state-tree\";\r\n\r\n/**\r\n * A RootStore model.\r\n */\r\n// prettier-ignore\r\nconst RootStore = types.model(\"RootStore\").props({\r\n  vaseStore: types.optional(VaseStore, {}),\r\n  coloringFormStore: types.optional(ColoringForm, {}),\r\n  basketStore: types.optional(BasketStore, {}),\r\n  figStore: types.optional(FigurineStore, {}),\r\n  swanStore: types.optional(SwanStore, {}),\r\n});\r\n\r\nexport default RootStore;\r\n\r\n","import React, { createContext, useContext } from \"react\";\r\nimport RootStore from \"./RootStore\";\r\n\r\n/**\r\n * Create a context we can use to\r\n * - Provide access to our stores from our root component\r\n * - Consume stores in our screens (or other components, though it's\r\n *   preferable to just connect screens)\r\n */\r\n// const RootStoreContext = createContext();\r\n\r\n// /**\r\n//  * The provider our root component will use to expose the root store\r\n//  */\r\n// export const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n// /**\r\n//  * A hook that screens can use to gain access to our stores, with\r\n//  * `const { someStore, someOtherStore } = useStores()`,\r\n//  * or less likely: `const rootStore = useStores()`\r\n//  */\r\n// export const useStores = () => useContext(RootStoreContext);\r\n\r\n//------------------------------------------------------------------\r\n\r\nconst RootStoreContext = React.createContext();\r\n\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n\r\n// export const RootStoreProvider = ({ children, store }) => {\r\n//     return (\r\n//       <RootStoreContext.Provider value={store}>{children}</RootStoreContext.Provider>\r\n//     );\r\n// };\r\n\r\nexport const useStores = () => React.useContext(RootStoreContext);\r\n","import React, {useEffect} from 'react';\r\nimport vase from \"../assets/vase.png\"\r\nimport basket from \"../assets/basket.png\"\r\nimport swan from \"../assets/swan.png\"\r\nimport fig from \"../assets/fig.PNG\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport {\r\n  PlainLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport \"./create.css\"\r\nimport {useStores} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst Create = () => {\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n  }, [])\r\n\r\n  const {coloringFormStore} = useStores()\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"holderTop\">\r\n      <img src={straw} alt={\"\"} className =\"leftS\"/>\r\n      <p className=\"create-text\">select a model</p>\r\n      <img src={straw} alt={\"\"} className =\"rightS\"/>\r\n      </div>\r\n      <div \r\n        style={{\r\n          flexDirection: 'row',\r\n          height: 'auto'\r\n        }}\r\n      >\r\n        <div className = \"holder\">\r\n          <PlainLink to=\"/create-figurine\">\r\n            <img alt={\"\"} src={fig} className=\"create-link\"/>\r\n            <p className=\"create-text\">• figurine •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-vase\">\r\n            <img alt={\"\"} src={vase} className=\"create-link\"/>\r\n            <p className=\"create-text\">• vase •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-basket\">\r\n            <img alt={\"\"} src={basket} className=\"create-link\"/>\r\n            <p className=\"create-text\">• basket •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-swan\">\r\n            <img alt={\"\"} src={swan} className=\"create-link\"/>\r\n            <p className=\"create-text\">• swan •</p>\r\n          </PlainLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;","import React from 'react';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Gallery</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport DelayLink from 'react-delay-link';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst Browse = () => {\r\n  const {coloringFormStore, swanStore} = useStores();\r\n\r\n  // function loadColoringPage(model){\r\n  //   if (model === \"swan\"){\r\n  //     coloringFormStore.setPreload()\r\n  //     coloringFormStore.preloadDefaultColor(\"#000000\")\r\n  //     coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  //     // set swan dimensions so SwanStore can do the calcs to getDimensions\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n    <DelayLink delay={0} to=\"/colouring\" clickAction={console.log(\"hi\")} replace={false}>\r\n      <h1>Browse</h1>\r\n    </DelayLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;","import React from 'react';\r\nimport \"./create.css\"\r\nimport logo from \"../assets/transparent.png\"\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <div>\r\n        <img className=\"transparent-logo\" src={logo} alt=\"\"/>\r\n        <p className=\"coming-soon-text\">coming soon</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/paper.2a44f726.PNG\";","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Wing = (props) => {\r\n    const {vertices, purpose} = props\r\n    const my_vertices = useMemo(() => vertices.map(v => new THREE.Vector3(...v)), [])\r\n\r\n    const faces = []\r\n    if (purpose == \"wing\"){\r\n        faces.push(\r\n            new THREE.Face3(17, 8, 7),\r\n            new THREE.Face3(16, 17, 7),\r\n            new THREE.Face3(16, 7, 6),\r\n            new THREE.Face3(15, 16, 6),\r\n            new THREE.Face3(15, 6, 5),\r\n            new THREE.Face3(14, 15, 5),\r\n            new THREE.Face3(14, 5, 4),\r\n            new THREE.Face3(13, 14, 4),\r\n            new THREE.Face3(13, 4, 3),\r\n            new THREE.Face3(12, 13, 3),\r\n            new THREE.Face3(12, 3, 2),\r\n            new THREE.Face3(11, 12, 2),\r\n            new THREE.Face3(11, 2, 1),\r\n            new THREE.Face3(10, 11, 1),\r\n            new THREE.Face3(10, 1, 0),\r\n            new THREE.Face3(9, 10, 0),\r\n            // top row \r\n            new THREE.Face3(18, 17, 16),\r\n            new THREE.Face3(18, 16, 15),\r\n            new THREE.Face3(18, 15, 14),\r\n            new THREE.Face3(18, 14, 13),\r\n            new THREE.Face3(18, 13, 12),\r\n            new THREE.Face3(18, 12, 11),\r\n            new THREE.Face3(18, 11, 10),\r\n            new THREE.Face3(18, 10, 9),\r\n        )\r\n    }\r\n    else if (purpose == \"front-back\"){\r\n        faces.push(\r\n            new THREE.Face3(5, 4, 3),\r\n            new THREE.Face3(5, 3, 2),\r\n            new THREE.Face3(5, 2, 1),\r\n            new THREE.Face3(5, 1, 0),\r\n        )\r\n    }\r\n\r\n    else if (purpose == \"one-wing\"){\r\n        faces.push(\r\n            new THREE.Face3(9, 8, 7),\r\n            new THREE.Face3(9, 7, 6),\r\n            new THREE.Face3(9, 6, 5),\r\n            new THREE.Face3(9, 5, 4),\r\n            new THREE.Face3(9, 4, 3),\r\n            new THREE.Face3(9, 3, 2),\r\n            new THREE.Face3(9, 2, 1),\r\n            new THREE.Face3(9, 1, 0),\r\n        )\r\n    }\r\n\r\n    // const uvs = [[\r\n    //     // front\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // right\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // back\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // left\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // top\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // bottom\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    // ]]\r\n\r\n    function update(geometry){\r\n        geometry.computeFaceNormals()\r\n        geometry.computeVertexNormals();\r\n        for (let i = 0; i < geometry.vertices.length; i++){\r\n            geometry.vertices[i].x = vertices[i][0]\r\n            geometry.vertices[i].y = vertices[i][1]\r\n            geometry.vertices[i].z = vertices[i][2]\r\n        }\r\n        geometry.verticesNeedUpdate = true\r\n        geometry.normalsNeedUpdate = true;\r\n    }\r\n\r\n    return (\r\n        // <geometry vertices={my_vertices} faces={faces} faceVertexUVs={uvs} onUpdate={update}/>\r\n        <geometry vertices={my_vertices} faces={faces} onUpdate={update}/>\r\n    )\r\n  }\r\n\r\nexport default observer(Wing);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\nimport Wing from \"../Wing\"\r\n\r\nconst Swan = (props) => {\r\n    const {swanStore, result} = props\r\n    const image = result ? swanStore.texture : grid\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(image), []) \r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const swan_pts = swanStore.swanBodyPts()\r\n\r\n    const swan_body = \r\n    <group>\r\n        <mesh >\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh>\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const bottom = swanStore.diameter * swanStore.height_scale * 0.8 * -1\r\n    const rim_mesh = <mesh position = {[0,bottom-0.1,0]} rotation = {[1.57,0,0]}> \r\n    <torusGeometry args={[(swanStore.diameter * swanStore.bottom_scale/2)+0.1, swanStore.diameter/70, 10, 50]}/>\r\n    <meshPhongMaterial color={result? swanStore.default_color : \"#FF7E98\"} />\r\n    </mesh>\r\n\r\n    function getX(angle, radius){\r\n        return  radius * Math.cos(angle)\r\n    }\r\n\r\n    function getY(angle, radius){\r\n        return radius * Math.sin(angle)\r\n    }\r\n\r\n    const bottomRad = swanStore.diameter * swanStore.top_scale * 0.5\r\n    const midRad = swanStore.diameter * swanStore.top_scale * 0.5 * 0.73\r\n    const midHeight = swanStore.diameter * swanStore.height_scale * 1.7 * 0.5\r\n    const topHeight = swanStore.diameter * swanStore.height_scale * 1.9\r\n\r\n    const vertices =\r\n    [\r\n        // bottom row\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [getX(Math.PI/3.7, bottomRad), 0, getY(Math.PI/3.7, bottomRad)],  // 1\r\n        [getX(Math.PI/6, bottomRad), 0, getY(Math.PI/6, bottomRad)],  // 2\r\n        [getX(Math.PI/12, bottomRad), 0, getY(Math.PI/12, bottomRad)],  // 3\r\n        [getX(0, bottomRad), 0, getY(0, bottomRad)],  // 4\r\n        [getX(Math.PI/12, bottomRad), 0, -getY(Math.PI/12, bottomRad)],  // 5\r\n        [getX(Math.PI/6, bottomRad), 0, -getY(Math.PI/6, bottomRad)],  // 6\r\n        [getX(Math.PI/3.7, bottomRad), 0, -getY(Math.PI/3.7, bottomRad)],  // 7\r\n        [getX(Math.PI/2.8, bottomRad), 0, -getY(Math.PI/2.8, bottomRad)],  // 8\r\n        // middle row\r\n        [getX(Math.PI/2.8, midRad), midHeight, getY(Math.PI/2.8, midRad)],  // 9\r\n        [getX(Math.PI/3.7, midRad), midHeight, getY(Math.PI/3.7, midRad)],  // 10\r\n        [getX(Math.PI/6, midRad), midHeight, getY(Math.PI/6, midRad)],  // 11\r\n        [getX(Math.PI/12, midRad), midHeight, getY(Math.PI/12, midRad)],  // 12\r\n        [getX(0, midRad), midHeight, getY(0, midRad)],  // 13\r\n        [getX(Math.PI/12, midRad), midHeight, -getY(Math.PI/12, midRad)],  // 14\r\n        [getX(Math.PI/6, midRad), midHeight, -getY(Math.PI/6, midRad)],  // 15\r\n        [getX(Math.PI/3.7, midRad), midHeight, -getY(Math.PI/3.7, midRad)],  // 16\r\n        [getX(Math.PI/2.8, midRad), midHeight, -getY(Math.PI/2.8, midRad)],  // 17\r\n        // heights\r\n        [bottomRad/6, topHeight, 0]  // 18\r\n    ];\r\n\r\n    const big_vertices = \r\n    [\r\n        [-getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 0\r\n        [-getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 1\r\n        [-getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 2\r\n        [-getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 3        \r\n        [getX(Math.PI/2, bottomRad), 0, -getY(Math.PI/2, bottomRad)],  // 4\r\n        [getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 5  \r\n        [getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 6\r\n        [getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 7\r\n        [getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 8\r\n        [0, topHeight*1.1, -bottomRad*1.25]  // 9\r\n    ];\r\n\r\n    const F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [-getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 3\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 4\r\n        [0, topHeight/3, bottomRad/1.3]  // 5\r\n    ];\r\n\r\n    const big_F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 0\r\n        [-getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 3\r\n        [getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 4\r\n        [0, topHeight/1.7, bottomRad/1.8]  // 5\r\n    ];\r\n\r\n    const L_vertices = []\r\n    for (let i = 0; i < vertices.length; i++){\r\n        let temp = []\r\n        temp.push(-1 * vertices[i][0],vertices[i][1],vertices[i][2])\r\n        L_vertices.push(temp)\r\n    }\r\n\r\n    const B_vertices = []\r\n    for (let i = 0; i < F_vertices.length-1; i++){\r\n        let temp = []\r\n        temp.push(F_vertices[i][0],F_vertices[i][1], -1 * F_vertices[i][2])\r\n        B_vertices.push(temp)\r\n    }\r\n    B_vertices.push([0, topHeight/4, -bottomRad * 1.1])\r\n\r\n    const y_pos_wing = swanStore.diameter * swanStore.height_scale\r\n    const wings = \r\n    <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const one_wing = <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const shape = useMemo( () => new THREE.Shape(), [swanStore.diameter]);\r\n    const param = swanStore.diameter * 0.3\r\n    const t = param * 0.4\r\n    shape.moveTo(0, -param*1.3);\r\n    shape.lineTo(param*0.9, 0)\r\n    shape.quadraticCurveTo(param + param/3, param*1.5/2,param, param * 1.4)\r\n    shape.quadraticCurveTo(param/2, param * 1.9, -param/3,param)\r\n    shape.lineTo(-param/2.5, param - (1.5*t))\r\n    shape.quadraticCurveTo(param/2 , (param * 1.9) - t, param -t/1.5 , (param * 1.5) - t/1.5)\r\n    shape.quadraticCurveTo((param + param/3.5) -t/1.5, (param*1.5/2) + t/1.5, param -t/1.5, t/1.5)\r\n    \r\n    const depth = param/6\r\n\r\n    const extrudeSettings = {\r\n        steps: 100,  \r\n        depth: depth,  \r\n        bevelEnabled: false,   \r\n      };\r\n      \r\n\r\n    const offset = swanStore.diameter * swanStore.height_scale + (param*1.3) + ((topHeight/3) * 0)\r\n    const neck_mesh = <mesh position={[-depth/2,offset,(bottomRad/1)]} rotation={[0, Math.PI/2, 0]}>\r\n        <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n        <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n    </mesh>\r\n\r\n\r\n    const diameter_marker = getInputMarker((swanStore.diameter/2) + 0.1, 0)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            {swan_body}\r\n            {!swanStore.wings && one_wing}\r\n            {swanStore.wings && wings}\r\n            {!result && diameter_marker}\r\n            {swanStore.bottom_rim && rim_mesh}\r\n            {neck_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Swan);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Swan from \"../components/Swan\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateSwan = () => {\r\n\r\n  const { swanStore, coloringFormStore } = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  }, [swanStore.wings])\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"∧ ∧\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"∧\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[2, 50]} step={1} mode={2} values={[swanStore.diameter]} onUpdate={(val) => swanStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\nconst bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_bottom_rim(val)}\r\n    options={options}\r\n    initialSelectedIndex={swanStore.bottom_rim ? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\nconst wings_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_wings(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={swanStore.wings? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => swanStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={swanStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '400px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Swan swanStore={swanStore} result={false}/>\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">wings</p>\r\n          {wings_switch}\r\n          </div>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">bottom_rim</p>\r\n          {bottom_rim_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateSwan);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport {useFrame} from \"react-three-fiber\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n// import temp from \"../../assets/tempp.png\";\r\n\r\nconst Vase = (props) => {\r\n    const {vase} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n    // texture.wrapS = THREE.MirroredRepeatWrapping;\r\n    // texture.wrapT = THREE.MirroredRepeatWrapping;\r\n    // texture.repeat.set(2, 2.6);\r\n\r\n    const s_dtop_h = vase.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vase.scale_h/vase.height\r\n\r\n    const s_dtop = Math.max(1,vase.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,vase.dbottom * scale_factor)\r\n\r\n    const s_d1 = Math.max(1, vase.d1 * scale_factor)\r\n    const s_d1_h = (vase.d1_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d2 = Math.max(1, vase.d2 * scale_factor)\r\n    const s_d2_h = (vase.d2_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d3 = Math.max(1,vase.d3 * scale_factor)\r\n    const s_d3_h = (vase.d3_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = vase.top_rim ? getInputMarker((s_dtop/2) + 0.6, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = vase.bottom_rim ? getInputMarker((s_dbottom/2) + 0.6, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const d1_marker = getInputMarker((s_d1/2) + 0.1, s_d1_h)\r\n    const d2_marker = getInputMarker((s_d2/2) + 0.1, s_d2_h)\r\n    const d3_marker = getInputMarker((s_d3/2) + 0.1, s_d3_h)\r\n\r\n    if (vase.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.3,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (vase.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.3, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    const points = vase.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vase.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {vase.top_rim && top_rim_mesh}\r\n            {vase.bottom_rim && bottom_rim_mesh}\r\n            {vase.flat_bottom && flat_bottom_mesh}\r\n            {dbottom_marker}\r\n            {d1_marker}\r\n            {d2_marker}\r\n            {d3_marker}\r\n            {dtop_marker}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Vase);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Vase from \"../components/Vase\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateVase = () => {\r\n\r\n  const { vaseStore, coloringFormStore} = useStores();\r\n  \r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"vase\")\r\n  }, [])\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  function MultiHandle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    if (id == \"$$-0\" || id == \"$$-4\"){\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 2,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 3,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n          {...getHandleProps(id)}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 4, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[10, 100]} step={1} mode={2} values={[vaseStore.height]} onUpdate={(val) => vaseStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[2, 100]} step={1} mode={2} values={[vaseStore.dtop]} onUpdate={(val) => vaseStore.update_dtop(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d3 = <Slider rootStyle={sliderStyle} domain={[2, 100]} step={1} mode={2} values={[vaseStore.d3]} onUpdate={(val) => vaseStore.update_d3(val[0])} >\r\n    <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d2 = <Slider rootStyle={sliderStyle} domain={[2, 100]} step={1} mode={2} values={[vaseStore.d2]} onUpdate={(val) => vaseStore.update_d2(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d1 = <Slider rootStyle={sliderStyle} domain={[2, 100]} step={1} mode={2} values={[vaseStore.d1]} onUpdate={(val) => vaseStore.update_d1(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[2, 100]} step={1} mode={2} values={[vaseStore.dbottom]} onUpdate={(val) => vaseStore.update_dbottom(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const dSlider = <Slider\r\n  rootStyle={sliderStyle}\r\n  domain={[0, 100]}\r\n  mode={2}\r\n  values={[0, vaseStore.d1_h, vaseStore.d2_h, vaseStore.d3_h, 100] /* three values = three handles */}\r\n  onUpdate={(val)=>vaseStore.update_d_heights(val)}\r\n  step={5}\r\n  >\r\n  <div style={railStyle} />\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <MultiHandle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const flat_bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_flat_bottom(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.flat_bottom ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={vaseStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            {/* <ambientLight intensity={0} /> */}\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.3}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n             {/* <spotLight position={[1, 10, 10]} angle={0.15} penumbra={1} /> */}\r\n            {/* <pointLight position={[-10, -10, -10]} /> */}\r\n            <Vase vase={vaseStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{background: '#FFE7E5', width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">2nd diameter</p>\r\n              {slider_d3}\r\n              <p className=\"text\">4th diameter</p>\r\n              {slider_d1}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n              <p className=\"text\">3rd diameter</p>\r\n              {slider_d2}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <p className=\"text\">diameter heights ( % )</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {dSlider}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'right', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom cover</p>\r\n            {flat_bottom_switch}\r\n          </div>\r\n          <div style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Basket = (props) => {\r\n    const {basketStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    const s_diameter = Math.max(1, basketStore.diameter * scale_factor)\r\n    const s_diameter_h = 0\r\n\r\n    // need rounded bottom shape , concave\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n    \r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = basketStore.top_rim ? getInputMarker((s_dtop/2) + 0.5, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = basketStore.bottom_rim ? getInputMarker((s_dbottom/2) + 0.5, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    const points = basketStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {diameter_marker}\r\n            {dtop_marker}\r\n            {dbottom_marker}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Basket);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Basket from \"../components/Basket\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateBasket = () => {\r\n\r\n  const { basketStore, coloringFormStore} = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"basket\")\r\n  }, [])\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[10, 100]} step={1} mode={2} values={[basketStore.height]} onUpdate={(val) => basketStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[2, 100]} step={1} mode={2} values={[basketStore.diameter]} onUpdate={(val) => basketStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[2, 100]} step={1} mode={2} values={[basketStore.dbottom]} onUpdate={(val) => basketStore.update_dbottom(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n\r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[2, 100]} step={1} mode={2} values={[basketStore.dtop]} onUpdate={(val) => basketStore.update_dtop(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const lid_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_lid(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.lid ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_flat_bottom(!val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.flat_bottom ? 1 : 0}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n</div>\r\n\r\n  const top_handle_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_top_handle(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.top_handle ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  const side_handles_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_side_handles(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.side_handles ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={basketStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '690px'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 100], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Basket basketStore={basketStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">middle diameter</p>\r\n              {slider_diameter}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">curved bottom</p>\r\n            {bottom_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top handle</p>\r\n            {top_handle_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">lid</p>\r\n            {lid_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">side handles</p>\r\n            {side_handles_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateBasket);","import React, {useState, useMemo} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []) \r\n\r\n    const s_diameter = figStore.diameter \r\n    const s_diameter_h = 0\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (figStore.diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const head =\r\n    <group>\r\n        <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.BackSide}/>\r\n        </mesh>\r\n    </group>\r\n\r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears === \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears === \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = figStore.diameter/7\r\n        const y_pos = (figStore.diameter * figStore.body_height)/2\r\n        const x_pos = (figStore.diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n                    break;\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {head}\r\n            {diameter_marker}\r\n            {figStore.ears === \"bear\" && bear_ears}\r\n            {figStore.ears === \"bunny\" && bunny_ears}\r\n            {figStore.ears === \"cat\" && cat_ears}\r\n            {figStore.ears === \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Figurine from \"../components/Figurine\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateFigurine = () => {\r\n\r\n  const { figStore, coloringFormStore} = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"fig\")\r\n  }, [])\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"◠ ◠\",\r\n        value: \"bear\",\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"〇 〇\",\r\n        value: \"sphere\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∧ ∧\",\r\n        value: \"cat\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∩ ∩\",\r\n        value: \"bunny\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },\r\n  ];\r\n\r\n  const ears = [\"bear\", \"sphere\", \"cat\", \"bunny\"]\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[2, 50]} step={1} mode={2} values={[figStore.diameter]} onUpdate={(val) => figStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n\r\n  const arms_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => figStore.update_arms(val)}\r\n      options={options}\r\n      initialSelectedIndex={figStore.arms ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  \r\nconst ears_switch = <div className=\"switch\"  style={{width: 360, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => figStore.update_ears(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={ears.indexOf(`${figStore.ears}`)}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n    fontSize={20}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => figStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={figStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '470px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Figurine figStore={figStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <p className=\"text\">arms</p>\r\n          {arms_switch}\r\n          <br/>\r\n          <p className=\"text\">ears</p>\r\n          {ears_switch}\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateFigurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultVase = (props) => {\r\n    const {vaseStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, vaseStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, vaseStore.modelDimensions.length)\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = vaseStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            // console.log(vaseStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n\r\n    const s_dtop_h = vaseStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vaseStore.scale_h/vaseStore.height\r\n\r\n    const s_dtop = vaseStore.dtop * scale_factor\r\n    const s_dbottom = vaseStore.dbottom * scale_factor\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    if (vaseStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.3,10,50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (vaseStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.3, 10, 50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const points = useMemo(() => vaseStore.updateCurvedPts(true), [vaseStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vaseStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshLambertMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh> \r\n            ))}\r\n            </group>\r\n            {vaseStore.top_rim && top_rim_mesh}\r\n            {vaseStore.bottom_rim && bottom_rim_mesh}\r\n            {vaseStore.flat_bottom && flat_bottom_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, figStore.modelDimensions.length-1);\r\n        insideRef.current = insideRef.current.slice(0, figStore.modelDimensions.length-1);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = figStore.modelDimensions.length-1\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            // console.log(figStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const texture_body = useMemo(() => new THREE.TextureLoader().load(figStore.textures[figStore.textures.length-1]), []) \r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (figStore.diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const divs = figStore.getBrokenHeadPts(Math.PI*theta_len)\r\n\r\n    const broken_head = \r\n    <group>\r\n        {divs.map((_, i) => (\r\n            <mesh key={i} position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        ))}\r\n        {divs.map((_, i) => (\r\n            <mesh key={i} position={[0,(figStore.diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => insideRef.current[i] = el} side={THREE.BackSide}/>\r\n            </mesh>\r\n        ))}\r\n    </group>\r\n    \r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears === \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears === \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (figStore.diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = figStore.diameter/7\r\n        const y_pos = (figStore.diameter * figStore.body_height)/2\r\n        const x_pos = (figStore.diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n                    break;\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {broken_head}\r\n            {figStore.ears === \"bear\" && bear_ears}\r\n            {figStore.ears === \"bunny\" && bunny_ears}\r\n            {figStore.ears === \"cat\" && cat_ears}\r\n            {figStore.ears === \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultBasket = (props) => {\r\n    const {basketStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, basketStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, basketStore.modelDimensions.length);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = basketStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            // console.log(basketStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    // const points = basketStore.updateCurvedPts()\r\n    const points = useMemo(() => basketStore.updateCurvedPts(true), [basketStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh>\r\n            ))}\r\n            </group>   \r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultBasket);","export default __webpack_public_path__ + \"static/media/upper-banner.1523f22e.png\";","export default __webpack_public_path__ + \"static/media/lower-banner.94f2cf86.png\";","import React, {useEffect, useRef} from 'react';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport { observer } from \"mobx-react\";\r\nimport  ResultVase  from \"../components/ResultVase\"\r\nimport  Swan  from \"../components/Swan\"\r\nimport  ResultFigurine  from \"../components/ResultFigurine\"\r\nimport  ResultBasket  from \"../components/ResultBasket\"\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport './create-vase.css'\r\nimport upperbanner from \"../assets/upper-banner.png\"\r\nimport lowerbanner from \"../assets/lower-banner.png\"\r\nimport { FiDownload } from \"react-icons/fi\";\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst Result = () => {\r\n  const {coloringFormStore, vaseStore, swanStore, basketStore, figStore} = useStores()\r\n  \r\n  const canvasRef = useRef()\r\n  let modelStore; \r\n  if (coloringFormStore.model === \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model === \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model === \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model === \"basket\") modelStore = basketStore\r\n  modelStore.setDefaultColor(coloringFormStore.defaultColor)\r\n  modelStore.clearTextures()\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext(\"2d\")\r\n    // console.log(coloringFormStore.coloringFormData)\r\n    // console.log(coloringFormStore.coloringFormData[0].drawingSectionData[0].rowData[0].pixelColor)\r\n    // console.log(\"Num sections\", coloringFormStore.coloringFormData.length)\r\n    const px_size = 20\r\n    const half_px_width = px_size/2\r\n    const defaultCol = coloringFormStore.defaultColor;\r\n\r\n    for (let i = 0; i < coloringFormStore.coloringFormData.length; i++){\r\n      const sec_width = modelStore.modelDimensions[i][0]\r\n      const sec_height = modelStore.modelDimensions[i][1] \r\n      canvas.width = sec_width * px_size\r\n      canvas.height = sec_height * px_size\r\n      context.fillStyle = defaultCol\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n      for (let r = 0; r < sec_height; r++){\r\n        let offset = 0 \r\n        if (coloringFormStore.coloringFormData[i].drawingSectionData[r].offset){\r\n          offset = half_px_width\r\n          const last_idx = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData.length\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[last_idx-1].pixelColor\r\n          context.fillRect(0, px_size * r, half_px_width, px_size)\r\n        }\r\n        for (let c = 0; c < sec_width; c++){\r\n          if (coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor === defaultCol) continue\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor\r\n          context.fillRect((px_size * c) + offset, px_size * r, px_size, px_size)\r\n        }\r\n      }\r\n      var texture = canvas.toDataURL(\"image/png\", 1.0)\r\n      modelStore.storePic(texture)\r\n    }\r\n    coloringFormStore.setMsg(\"error\")\r\n  }, [])\r\n\r\n  // const modelRef = useRef()  \r\n\r\n  return (\r\n    // <canvas ref={canvasRef}/> // to test texture generation\r\n    <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '600px'}}>\r\n      <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '52%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: \"80%\", borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {0.8}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {0.8}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.3} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.1} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.1} />\r\n            {coloringFormStore.model === \"vase\" && <ResultVase vaseStore={vaseStore} />}\r\n            {coloringFormStore.model === \"swan\" && <Swan swanStore={swanStore} result={true}/>}\r\n            {coloringFormStore.model === \"fig\" && <ResultFigurine figStore={figStore}/>}\r\n            {coloringFormStore.model === \"basket\" && <ResultBasket basketStore={basketStore} />}\r\n          </Canvas>\r\n        <div className=\"containerCaption\">\r\n            <div style={{height: 10}}></div>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 10}}></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"containerRight\" style={{width: '48%', height: \"100%\", overflow: 'visible', float:'right', alignItems:\"center\", justifyContent:\"center\", position: \"relative\"}}>\r\n        <canvas style={{display:\"none\"}} ref={canvasRef}/>\r\n        <img alt={\"\"} src={upperbanner} className=\"banner\" style={{marginTop: 2}}/>\r\n        <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d-o diagram <span><FiDownload size={20}/></span></p>\r\n        </div>\r\n        {/* <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d model <span><FiDownload size={20}/></span></p>\r\n        </div> */}\r\n        <img alt={\"\"} src={lowerbanner} className=\"banner-b\"  />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Result);","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport Landing from './landing';\r\nimport About from './about';\r\nimport Learn from './learn';\r\nimport Contact from './contact';\r\nimport Create from './create';\r\nimport Gallery from './gallery';\r\nimport Browse from './browse';\r\nimport Login from './login';\r\nimport CreateSwan from \"./create-swan\"\r\nimport CreateVase from \"./create-vase\"\r\nimport CreateBasket from \"./create-basket\"\r\nimport CreateFigurine from \"./create-figurine\"\r\nimport Result from \"./result\"\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst Home = () => {\r\n\r\n  const {coloringFormStore} = useStores();\r\n\r\n  return (\r\n  <div className=\"Background\">\r\n    <div className=\"InnerApp\"> \r\n      <Navbar/>\r\n      <Switch>\r\n        <Route path='/about' component={About} />\r\n        <Route path='/create' component={Create} />\r\n        <Route path='/learn' component={Learn} />\r\n        <Route path='/contact' component={Contact} />\r\n        <Route path='/gallery' component={Gallery} />\r\n        <Route path='/browse' component={Browse} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/create-swan' component={CreateSwan} />\r\n        <Route path='/create-vase' component={CreateVase} />\r\n        <Route path='/create-basket' component={CreateBasket} />\r\n        <Route path='/create-figurine' component={CreateFigurine} />\r\n        {/* <Route path='/result' component={Result} /> */}\r\n        <Route path='/result'>\r\n          {coloringFormStore.resultMsg === \"error\" ? <Redirect to=\"/create\"/> : <Result />}\r\n        </Route>\r\n        <Route path='/' component={Landing}/>\r\n      </Switch>\r\n    </div>\r\n    <p style={{marginBottom: 30, marginTop: 20, letterSpacing: 1.5, color: \"#E33937\", fontSize:13}}>lina nguyen 🍓 2021</p>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect} from \"react\";\r\nimport \"./pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Pixel = (props) => {\r\n  const {formObject, PxModel} = props;\r\n\r\n  function borderColor() {\r\n    var color = PxModel.pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true)\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(PxModel.pixelColor === formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n    if (PxModel.pixelColor !== PxModel.oldColor){\r\n      formObject.updateCounter(PxModel.oldColor, PxModel.pixelColor)\r\n      PxModel.setOldColor(PxModel.pixelColor)\r\n    } \r\n    PxModel.setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    PxModel.setOldColor(PxModel.pixelColor);\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (PxModel.canChangeColor) {\r\n      PxModel.setPixelColor(PxModel.oldColor);\r\n    }\r\n\r\n    PxModel.setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: PxModel.pixelColor, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {PxModel.inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(Pixel);","import React, { useState } from \"react\";\r\nimport \"./specialPixel.css\";\r\n\r\nexport default function SpecialPixel(props) {\r\n  const {on, num, markerNum, displayRowNum, rounded} = props;\r\n\r\n  if (on){\r\n    if (markerNum){\r\n      return (\r\n        <div\r\n          className=\"specialPixelOn\"\r\n        ><p style={{marginTop: -4, fontSize: 10, marginLeft: -1.1, position:'absolute', background: \"#FF6C7B\", paddingLeft: 2.5, paddingRight:2.5, borderRadius:6, color:\"white\"}}> {markerNum}</p></div>\r\n      );\r\n    } else {\r\n      if (rounded){\r\n        return (\r\n          <div className=\"roundedRight\"\r\n          ></div>\r\n        );\r\n      }\r\n      else{\r\n        return (\r\n          <div className=\"specialPixelOn\"\r\n          ></div>\r\n        );\r\n      }\r\n    }\r\n  } \r\n  else {\r\n    if (displayRowNum){\r\n      return (\r\n        <div\r\n          className=\"rowMarkerPixel\"\r\n        >\r\n          <p style={{fontSize:9, marginLeft: 5, marginTop:-0.5, position:'absolute'}}>{displayRowNum}</p>\r\n          </div>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <div\r\n          className=\"specialPixelOff\"\r\n        >\r\n          <p style={{fontSize:10, marginLeft: 4, marginTop: -4, position:'absolute'}}>{num}</p>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n}","import React, {useEffect} from \"react\";\r\nimport \"./row.css\";\r\nimport Pixel from \"../Pixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst Row = (props) => {\r\n  const {formObject, RowModel} = props;\r\n  let pixels = [];\r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  if (RowModel.rowData.length == 0){\r\n    for (let i = 0; i < RowModel.width; i++) {\r\n      RowModel.addPx()\r\n    }\r\n  }\r\n  for (let i = 0; i < RowModel.width; i++) {\r\n    if(formObject.inverted) RowModel.rowData[i].setInverted()\r\n    pixels.push(<Pixel key={i} formObject={formObject} PxModel={RowModel.rowData[i]}/>);\r\n  }\r\n\r\n  pixels.push(<SpecialPixel key={RowModel.width} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  return <div style={{marginLeft: RowModel.offset}} className=\"row\">{pixels}</div>;\r\n}\r\n\r\nexport default observer(Row)","import React from \"react\";\r\nimport \"./specialRow.css\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\n\r\nexport default function SpecialRow(props) {\r\n  const { width, offset, specialTop, specialBottom } = props;\r\n\r\n  let pixels = [];\r\n\r\n  const my_dict = specialBottom ? specialBottom : specialTop\r\n  let count = 0 \r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} num={\"\"}/>)\r\n\r\n  for (let i = 0; i < width; i++) {\r\n    if (i in my_dict){\r\n      if (my_dict[i] == 1){\r\n        count += 1\r\n        pixels.push(<SpecialPixel key={i} on={true} markerNum={count}/>);\r\n      }\r\n      else if (my_dict[i] == -1){\r\n        pixels.push(<SpecialPixel key={i} on={true} rounded={true}/>);\r\n      }\r\n      else if (i == width-1 && my_dict[i] == 0){\r\n        pixels[0] = <SpecialPixel key={i} on={true}/>\r\n      }\r\n      else{\r\n        pixels.push(<SpecialPixel key={i} on={true}/>);\r\n      }\r\n    }\r\n    else{\r\n        pixels.push(<SpecialPixel key={i} on={false} num = {i+1}/>);\r\n    }\r\n  }\r\n\r\n  return <div style={{marginLeft: offset}} className=\"specialRow\">{pixels}</div>;\r\n}","import React, { useEffect, useState, useRef} from \"react\";\r\nimport \"../Pixel/pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedPixel = (props) => {\r\n  const {formObject, inverted} = props;\r\n\r\n  const [pixelColor, setPixelColor] = useState(formObject.defaultColor);\r\n  const [oldColor, setOldColor] = useState(pixelColor);\r\n  const [canChangeColor, setCanChangeColor] = useState(true);\r\n\r\n  function borderColor() {\r\n    var color = pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n  \r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true, true)\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(pixelColor == formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    setPixelColor(formObject.selectedColor);\r\n    if (pixelColor != oldColor){\r\n      formObject.updateCounter(oldColor, pixelColor)\r\n      setOldColor(pixelColor)\r\n    }\r\n    setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    setOldColor(pixelColor);\r\n    setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (canChangeColor) {\r\n      setPixelColor(oldColor);\r\n    }\r\n\r\n    setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: pixelColor, width: 20, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(UntrackedPixel);","import React, {useEffect} from \"react\";\r\nimport \"../Row/row.css\";\r\nimport UntrackedPixel from \"../UntrackedPixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst UntrackedRow = (props) => {\r\n  const {wing, formObject, numPx, offset, display, inverted} = props;\r\n  let pixels = [];\r\n\r\n  if(display) pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={display}/>)\r\n\r\n  for (let i = 0; i < numPx; i++) {\r\n    pixels.push(<UntrackedPixel key={i} formObject={formObject} inverted={inverted} />);\r\n  }\r\n\r\n  if (!wing) pixels.push(<SpecialPixel key={numPx} on={false} displayRowNum={display} />)\r\n  \r\n  return <div style={{marginLeft: offset}} className=\"row\">{pixels}</div>;\r\n  \r\n}\r\n\r\nexport default observer(UntrackedRow)","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst TriangleSection = (props) => {\r\n  const {wing, caption, width, formObject, elevation, firstRowDisplay, inverted} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = [];\r\n  \r\n  // height = width \r\n  const px_width = 21 // 21 is the px width w border\r\n  for (let i = 0; i < width; i++) {\r\n    let var_offset = (0.5*(px_width)*(width-i-1))\r\n    let displayNum = elevation+width-i\r\n    if (!firstRowDisplay){\r\n      if (i < width - 1) var_offset = (0.5*(px_width)*(width-i-3))\r\n      else displayNum = false\r\n    }\r\n    rows.push(<UntrackedRow key={i} wing={wing} numPx={i+1} offset={var_offset} formObject={formObject} display={displayNum} inverted={inverted}/>);\r\n  }\r\n\r\n  return (\r\n    <div id=\"triangleSection\">\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 0, marginLeft: 0, marginRight:0}}>\r\n        {caption && <p id=\"text\">{caption}</p>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(TriangleSection)","  \r\nimport React, { useRef} from \"react\";\r\nimport \"./drawingSection.css\";\r\nimport Row from \"../Row\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport TriangleSection from \"../TriangleSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst DrawingSection = (props) => {\r\n  const {caption, specialTop, specialBottom, formObject, DrawingSectionModel} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = []; \r\n  let swanUpper = [];\r\n\r\n  if (formObject.model === \"swan\"){\r\n    if (formObject.swan_two_wings){\r\n      const wing_width = Math.round(0.4 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - (2 * wing_width)\r\n      const chest_width = Math.ceil(remainder/2)\r\n      const back_width = Math.floor(remainder/2)\r\n      const wing1 = <TriangleSection key={0} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true}/> \r\n      const wing2 = <TriangleSection key={1} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} /> \r\n      const chest = <TriangleSection key={2} wing={true} width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} />\r\n      const back = <TriangleSection key={3} wing={true} width={back_width} formObject={formObject} elevation={DrawingSectionModel.height} inverted={true}/>\r\n      swanUpper.push(wing1, chest, wing2, back)\r\n    } \r\n    else {\r\n      const wing_width = Math.round(0.75 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - wing_width\r\n      const chest_width = remainder - 2\r\n      const wing = <TriangleSection key={0} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} inverted={true}/> \r\n      const chest = <TriangleSection key={1} wing={true} width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} />\r\n      swanUpper.push(wing, chest)\r\n    }\r\n  }\r\n\r\n  if (formObject.model != \"swan\") rows.push(<SpecialRow key={-1} offset={0} width={DrawingSectionModel.width} specialTop={specialTop} />)\r\n  \r\n  if(DrawingSectionModel.drawingSectionData.length === 0){\r\n    for (let i = 0; i < DrawingSectionModel.height; i++){\r\n      DrawingSectionModel.addRow()\r\n    }\r\n  }\r\n  for (let i = 0; i < DrawingSectionModel.height; i++) {\r\n    DrawingSectionModel.drawingSectionData[i].setWidth(DrawingSectionModel.width)\r\n    DrawingSectionModel.drawingSectionData[i].setDisplayRowNum(DrawingSectionModel.height-i)\r\n    if (i%2 === 1){\r\n      DrawingSectionModel.drawingSectionData[i].setOffset()\r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n    else{ \r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n  }\r\n  \r\n  if(DrawingSectionModel.increasing){\r\n    if (DrawingSectionModel.height%2 === 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5*2} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (DrawingSectionModel.height%2 === 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={0} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {formObject.model === \"swan\" && <div style={{display:\"flex\", alignItems:\"flex-end\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n          {swanUpper}\r\n        </div>}\r\n        {caption && <p id=\"text\">{caption}</p>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(DrawingSection)","import React, {useRef} from 'react';\r\nimport DrawingSection from \"../DrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst OrigamiObject = (props) => {\r\n    const {caption, dimensions, formObject} = props;\r\n  \r\n    const objectRef = useRef();\r\n\r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    if (formObject.model === \"swan\"){\r\n      specialTop = Array(dimensions.length).fill({})\r\n      specialBottom = Array(dimensions.length).fill({})\r\n    }\r\n    else {\r\n      if (dimensions[dimensions.length-2][0]-dimensions[dimensions.length-1][0] < 0) formObject.setInverted()\r\n\r\n      for (let i = dimensions.length-2; i >= 0; i--){\r\n        let sTopCurr = {}\r\n        let sBottomCurr = {}\r\n\r\n        const curr = dimensions[i+1][0]\r\n        const next = dimensions[i][0]\r\n        let diff = next-curr // number of pieces need to add or subtract \r\n\r\n        let distribute = 0 \r\n        let remainder = 0\r\n        let spacing = 0\r\n        if (diff === 0){\r\n          specialTop = Array(dimensions.length).fill({})\r\n          specialBottom = Array(dimensions.length).fill({})\r\n        }\r\n        else if (diff > 0){ // increasing - 2 pcs per increase\r\n          sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n          distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n          remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = -1\r\n            idx += spacing_arr[i] + 2\r\n            i += 1 \r\n          }\r\n          let last_idx = 2\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n            sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 3\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)    \r\n          increasing.unshift(true) \r\n        } \r\n        else { // decreasing \r\n          sBottomCurr = {0: 1, 1: -1}\r\n          diff = -1 * diff\r\n          distribute = curr - (3 * diff)\r\n          remainder = distribute % diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = 0\r\n            sTopCurr[idx+2] = -1\r\n            idx += spacing_arr[i] + 3\r\n            i += 1 \r\n          }\r\n          let last_idx = 1\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 2\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)  \r\n          increasing.unshift(false)\r\n        }\r\n      }\r\n      if (formObject.model === \"fig\"){\r\n        specialTop[specialTop.length-1] = {}\r\n        specialBottom[specialBottom.length-1] = {}\r\n      } \r\n      specialTop.unshift({})\r\n      specialBottom.push({})\r\n      increasing.push(false)\r\n    }\r\n\r\n    let sections = [];\r\n  \r\n    if (formObject.coloringFormData.length == 0){\r\n      for (let i = 0; i < dimensions.length; i++) {\r\n        formObject.addDrawingSection()\r\n      }\r\n    }\r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      formObject.coloringFormData[i].setWidthHeight(dimensions[i][0], dimensions[i][1])\r\n      formObject.coloringFormData[i].setIncreasing(increasing[i])\r\n      let caption = false\r\n      if (formObject.model === \"fig\" && i === dimensions.length-1) caption = \"figurine body\"\r\n      sections.push(<DrawingSection key={i} caption={caption} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} formObject={formObject} DrawingSectionModel={formObject.coloringFormData[i]} />);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        <div id=\"sections\" ref={objectRef}>\r\n          <p id=\"text\">{caption}</p>\r\n          {sections}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(OrigamiObject)","export default __webpack_public_path__ + \"static/media/rim.90d28599.png\";","export default __webpack_public_path__ + \"static/media/halfRim.934ee4ec.png\";","export default __webpack_public_path__ + \"static/media/neck.d9f33158.png\";","import React from \"react\";\r\nimport rim_image from \"../../assets/rim.png\";\r\nimport half_rim_image from \"../../assets/halfRim.png\";\r\nimport neck_image from \"../../assets/neck.png\"\r\nimport \"./rim.css\"\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\n\r\nconst Rim = (props) => {\r\n    const {swan, full, caption, circ} = props \r\n    return (\r\n        <div className=\"rimDiv\">\r\n            <p id=\"text\">{caption}</p>\r\n            {full && <img src={rim_image} className=\"rim\" />}\r\n            {!full && !swan  && <img src={half_rim_image} className=\"half_rim\" />}\r\n            {swan && <img src={neck_image} className=\"neck\" />} \r\n            <p id=\"text\">{circ} pieces</p>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Rim;","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedDrawingSection = (props) => {\r\n  const {arm, open, bunny, specialTop, specialBottom, increasing, formObject, dimensions} = props;\r\n\r\n  let rows = []; \r\n  let inverted = false\r\n\r\n  if (!bunny) rows.push(<SpecialRow key={-1} offset={0} width={dimensions[0]} specialTop={specialTop} />)\r\n  else{\r\n    const end_width = Math.floor(dimensions[0]*(0.5))\r\n    const num_rows = dimensions[0] - end_width\r\n    for (let i = 0; i < num_rows; i++){\r\n      rows.push(<UntrackedRow key={dimensions[1]+1+i} numPx={end_width+i} offset={10.5*(num_rows-i)} formObject={formObject} display={dimensions[1]+num_rows-i} inverted={inverted}/>)\r\n    }\r\n\r\n  }\r\n  \r\n  for (let i = 0; i < dimensions[1]; i++) {\r\n    arm && i == dimensions[1]-1 ? inverted = true : inverted = false\r\n    if (i%2 == 1){\r\n      let numPx = dimensions[0]\r\n      if (open) numPx -= 1\r\n      rows.push(<UntrackedRow key={i} numPx={numPx} offset={10.5} formObject={formObject} display={dimensions[1]-i} inverted={inverted}/>);\r\n    }\r\n    else{ \r\n      rows.push(<UntrackedRow key={i} numPx={dimensions[0]} offset={0} formObject={formObject} display={dimensions[1]-i} inverted={inverted}/>);\r\n    }\r\n  }\r\n  \r\n  if(increasing){\r\n    if (dimensions[1]%2 == 1){\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5*2} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (dimensions[1]%2 == 1){\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={0} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(UntrackedDrawingSection)","import React, {useRef} from 'react';\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedOrigamiObject = (props) => {\r\n    const {dimensions, formObject} = props;\r\n  \r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    for (let i = dimensions.length-2; i >= 0; i--){\r\n      let sTopCurr = {}\r\n      let sBottomCurr = {}\r\n\r\n      const curr = dimensions[i+1][0]\r\n      const next = dimensions[i][0]\r\n      let diff = next-curr // number of pieces need to add or subtract \r\n\r\n      let distribute = 0 \r\n      let remainder = 0\r\n      let spacing = 0\r\n      \r\n      if (diff == 0){\r\n        specialTop = Array(dimensions.length).fill({})\r\n        specialBottom = Array(dimensions.length).fill({})\r\n      }\r\n      else if (diff > 0){ // increasing - 2 pcs per increase\r\n        sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n        distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n        remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n        spacing = Math.floor(distribute/diff)\r\n        let spacing_arr = Array(diff).fill(spacing)\r\n        for (let i = 0; i < 2; i++){\r\n          let j = i\r\n          while (j < diff && remainder > 0){\r\n            spacing_arr[j] += 1 \r\n            remainder -= 1 \r\n            j += 2 \r\n          }\r\n        }\r\n        let i = 0 \r\n        let idx = 0 \r\n        while(i < diff){\r\n          sTopCurr[idx] = 1\r\n          sTopCurr[idx+1] = -1\r\n          idx += spacing_arr[i] + 2\r\n          i += 1 \r\n        }\r\n        let last_idx = 2\r\n        for (let i = 0; i < spacing_arr.length-1; i ++){\r\n          sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n          sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n          sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n          last_idx = last_idx + spacing_arr[i] + 3\r\n        }  \r\n        specialTop.unshift(sTopCurr)\r\n        specialBottom.unshift(sBottomCurr)    \r\n        increasing.unshift(true) \r\n      } \r\n      else { // decreasing \r\n        sBottomCurr = {0: 1, 1: -1}\r\n        diff = -1 * diff\r\n        distribute = curr - (3 * diff)\r\n        remainder = distribute % diff\r\n        spacing = Math.floor(distribute/diff)\r\n        let spacing_arr = Array(diff).fill(spacing)\r\n        for (let i = 0; i < 2; i++){\r\n          let j = i\r\n          while (j < diff && remainder > 0){\r\n            spacing_arr[j] += 1 \r\n            remainder -= 1 \r\n            j += 2 \r\n          }\r\n        }\r\n        let i = 0 \r\n        let idx = 0 \r\n        while(i < diff){\r\n          sTopCurr[idx] = 1\r\n          sTopCurr[idx+1] = 0\r\n          sTopCurr[idx+2] = -1\r\n          idx += spacing_arr[i] + 3\r\n          i += 1 \r\n        }\r\n        let last_idx = 1\r\n        for (let i = 0; i < spacing_arr.length-1; i ++){\r\n          sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n          sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n          last_idx = last_idx + spacing_arr[i] + 2\r\n        }  \r\n        specialTop.unshift(sTopCurr)\r\n        specialBottom.unshift(sBottomCurr)  \r\n        increasing.unshift(false)\r\n      }\r\n    }\r\n    specialTop.unshift({})\r\n    specialBottom.push({})\r\n    increasing.push(false)\r\n\r\n    let sections = [];\r\n  \r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      sections.push(<UntrackedDrawingSection key={i} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} increasing={increasing[i]} formObject={formObject} dimensions={dimensions[i]}/>);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        {sections}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(UntrackedOrigamiObject)","import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Bottom = (props) => {\r\n    const {flat, circ, caption, formObject} = props \r\n    let object = <div></div>\r\n    let dimensions = []\r\n\r\n    if (flat){\r\n        dimensions = [[50,12],[40,11],[42,5]] // top to bottom \r\n        object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n    }\r\n    else{\r\n        // curved bottom/lid for basket\r\n        dimensions = [[50,12],[30,11],[20,5]] // top to bottom \r\n        object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Bottom;","import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Arm = (props) => {\r\n    const {caption, size, formObject} = props;\r\n    const dimensions = [10,4] // top to bottom \r\n    const object = <UntrackedDrawingSection arm={true} specialTop = {[]} specialBottom = {[]} formObject={formObject} dimensions={dimensions}/>\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Arm;","import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst BunnyOrHandle = (props) => {\r\n    const {caption, size, formObject} = props;\r\n    let object = <div></div>\r\n    let sz = 0\r\n    let w_sz = 0\r\n    let input_sz = 0\r\n    const lim = 50\r\n\r\n    if (caption == \"bunny ear\"){\r\n        // height has to be odd number to have the base bigger\r\n        object = <UntrackedDrawingSection bunny={true} open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[size,13]} />\r\n    }\r\n    else {\r\n        sz = size*21\r\n        input_sz = Math.min(sz, lim)\r\n        w_sz = size/2 \r\n        object = <UntrackedDrawingSection open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[w_sz,input_sz]} />\r\n    }\r\n\r\n    return (    \r\n      <div>\r\n        <p id=\"text\">{caption}</p>\r\n        {object}\r\n        {sz > lim && <p id=\"text\">+ {sz-lim} more rows ...</p>}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default BunnyOrHandle;","import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Sphere = (props) => {\r\n    const {size, caption, formObject} = props \r\n    let object = <div></div>\r\n    let dimensions = []\r\n\r\n    function calc(){\r\n        return [[6,5],[8,5],[5,5]]\r\n    }\r\n\r\n    // curved Sphere/lid for basket\r\n    dimensions = calc() // top to Sphere \r\n    object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Sphere;","import React from 'react';\r\nimport { observer } from \"mobx-react\";\r\nimport Rim from \"../Rim\";\r\nimport Bottom from \"../Bottom\";\r\nimport Arm from \"../Arm\"\r\nimport BunnyOrHandle from \"../BunnyOrHandle\"\r\nimport TriangleSection from \"../TriangleSection\"\r\nimport Sphere from \"../Sphere\"\r\n\r\nconst Appendages = (props) => {\r\n    const {modelStore, formObject} = props;\r\n  \r\n    let bottoms = []\r\n    let sections = []\r\n    let rims = []\r\n    let key = 0\r\n\r\n    // top_rim, bottom_rim, flat_bottom, arms, ears, lid, top_handle, side_handles\r\n\r\n    if (modelStore.flat_bottom){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      bottoms.push(<Bottom key={key} caption={\"flat bottom\"} flat={true} circ={circ} lid={false} formObject={formObject}/>) // circ = circumfrence\r\n      key += 1\r\n    }\r\n    else if (formObject.model === \"basket\"){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      bottoms.push(<Bottom key={key} caption={\"curved bottom\"} flat={false} circ={circ} lid={false} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.lid){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      bottoms.push(<Bottom key={key} caption={\"lid\"} flat={false} circ={circ} formObject={formObject}/>)\r\n      key += 1\r\n      sections.push(<Sphere key={key} caption={\"lid handle\"} size={circ} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.top_handle){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      sections.push(<BunnyOrHandle key={key} caption={\"top handle\"} size={10} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.arms){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      sections.push(<Arm key={key} caption={\"arm\"} size={circ} formObject={formObject}/>)\r\n      key += 1\r\n      sections.push(<Arm key={key} caption={\"arm\"} size={circ} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.ears !== \"\"){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0] // make ears prop. to body circ\r\n      if (modelStore.ears === \"bear\"){\r\n        sections.push(<Rim key={key} full={false} caption={\"bear ear\"} circ={circ}/>)\r\n        key += 1\r\n        sections.push(<Rim key={key} full={false} caption={\"bear ear\"} circ={circ}/>)\r\n        key += 1 \r\n      }\r\n      else if (modelStore.ears === \"bunny\"){\r\n        sections.push(<BunnyOrHandle key={key} caption={\"bunny ear\"} size={10} formObject={formObject}/>)\r\n        key += 1\r\n        sections.push(<BunnyOrHandle key={key} caption={\"bunny ear\"} size={10} formObject={formObject}/>)\r\n      }\r\n      else if (modelStore.ears === \"sphere\"){\r\n        sections.push(<Sphere key={key} caption={\"round ear\"} size={circ} formObject={formObject}/>)\r\n        key += 1\r\n        sections.push(<Sphere key={key} caption={\"round ear\"} size={circ} formObject={formObject}/>)\r\n      }\r\n      else if (modelStore.ears === \"cat\"){\r\n        sections.push(<TriangleSection key={key} caption={\"cat ear\"} width={10} formObject={formObject} elevation={0} firstRowDisplay={true} inverted={false} />)\r\n        key += 1\r\n        sections.push(<TriangleSection key={key} caption={\"cat ear\"} width={10} formObject={formObject} elevation={0} firstRowDisplay={true} inverted={false} />)\r\n      }\r\n      key += 1\r\n    }\r\n    if (modelStore.side_handles){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      rims.push(<Rim key={key} full={false} caption={\"side handle\"} circ={circ}/>) // static picture\r\n      key += 1\r\n      rims.push(<Rim key={key} full={false} caption={\"side handle\"} circ={circ}/>) \r\n      key += 1\r\n    }\r\n    if (modelStore.top_rim){\r\n      rims.push(<Rim key={key} full={true} caption={\"top rim\"} circ={modelStore.getDimensions()[0][0]}/>) // static picture\r\n      key += 1\r\n    }\r\n    if (modelStore.bottom_rim){\r\n      const circ = modelStore.getDimensions()[modelStore.getDimensions().length-1][0]\r\n      rims.push(<Rim key={key} full={true} caption={\"bottom rim\"} circ={circ}/>) // static picture\r\n      key += 1\r\n    }\r\n    if (formObject.model === \"swan\"){\r\n      const circ = modelStore.getDimensions()[0][0]\r\n      rims.push(<Rim key={key} swan={true} caption={\"neck\"} circ={circ}/>) // static picture\r\n      key += 1\r\n    }\r\n\r\n    return (\r\n      <div id=\"Appendages\">\r\n        <div style={{display:\"inline-block\", marginLeft: 10.5, marginBottom: 3}}>\r\n          {bottoms}\r\n          <div style={{display:\"flex\", alignItems:\"flex-start\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n            {sections}\r\n            {rims}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(Appendages)","import React, {useState, useRef, useEffect, useMemo} from 'react';\r\nimport { TwitterPicker } from \"react-color\";\r\nimport OrigamiObject from \"../components/OrigamiObject\";\r\nimport \"./colouringPage.css\";\r\n// import premade from \"./premade\";\r\nimport Sticky from 'react-stickynode';\r\nimport { observer } from \"mobx-react\";\r\nimport logo from \"../assets/complex-logo.png\"\r\n// import {PlainLink as Link} from '../components/Navbar/NavbarElements';\r\nimport { AiOutlineInfo } from \"react-icons/ai\";\r\nimport { FiTrash } from \"react-icons/fi\";\r\nimport { IoChevronForward, IoChevronBack } from \"react-icons/io5\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport DelayLink from 'react-delay-link';\r\nimport Appendages from \"../components/Appendages\";\r\n\r\n\r\nconst Colouring = () => {\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [showPickerDefault, setShowPickerDefault] = useState(false);\r\n  const [colorPaletteIdx, setColorIdx] = useState(0);\r\n  const [dColorPaletteIdx, setDColorIdx] = useState(0);\r\n  const [colorPalette, setColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']) \r\n  const [dColorPalette, setDColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'])\r\n  \r\n  // useEffect(() => {\r\n  //   // // coloringFormData = drawing sections\r\n  //   // // drawingSectionData = rows\r\n  //   // // rowData = pixels\r\n  //   // if (coloringFormStore.preload){\r\n  //   //   for (let i = 0; i < premade[\"swan1\"][0].length; i++){\r\n  //   //     const curr_px = premade[\"swan1\"][0][i]\r\n  //   //     coloringFormStore.coloringFormData[curr_px[0]].drawingSectionData[curr_px[1]].rowData[curr_px[2]].setPixelColor(curr_px[3])\r\n  //   //   }\r\n  //   // }\r\n  //   coloringFormStore.setMsg(\"error\")\r\n  // }, [])\r\n\r\n  const diagramRef = useRef();\r\n  const appendagesRef = useRef();\r\n  const {coloringFormStore, vaseStore, swanStore, figStore, basketStore} = useStores();\r\n  let modelStore;\r\n  if (coloringFormStore.model === \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model === \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model === \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model === \"basket\") modelStore = basketStore\r\n\r\n  function changeColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setColor(search);\r\n    if (!colorPalette.includes(search)){\r\n      let new_palette = colorPalette\r\n      new_palette[colorPaletteIdx] = search\r\n      setColorPalette(new_palette)\r\n      const new_idx = (colorPaletteIdx + 1) % 10\r\n      setColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  function changeDefaultColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setDefaultColor(search);\r\n    if (!dColorPalette.includes(search)){\r\n      let new_palette = dColorPalette\r\n      new_palette[dColorPaletteIdx] = search\r\n      setDColorPalette(new_palette)\r\n      const new_idx = (dColorPaletteIdx + 1) % 10\r\n      setDColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  const myDimensions = useMemo(() => modelStore.getDimensions(), []);\r\n  const absolute = coloringFormStore.maxWidth > 52 ? true : false \r\n\r\n  let myHeight = 10000\r\n  // const myYMargin = 20\r\n  // const px_y = 13\r\n  // const px_border = 1\r\n  // const marker_y = 20\r\n\r\n  // for (let i = 0; i < myDimensions.length; i++){\r\n  //   const y = myDimensions[i][1]\r\n  //   myHeight += (y * (px_y + px_border)) + (1.5*myYMargin) + (2*marker_y)\r\n  // }\r\n\r\n  // if (coloringFormStore.model === \"swan\"){\r\n  //   myHeight += (swanStore.modelDimensions[0][0] * 0.75 * (px_y + px_border) * 1.2)\r\n  //   myHeight += 600\r\n  // }\r\n\r\n  // else if (coloringFormStore.model === \"fig\"){\r\n  //   myHeight *= 2\r\n  // }\r\n\r\n  // if (modelStore.flat_bottom || coloringFormStore.model === \"basket\"){\r\n  //   myHeight *= 2\r\n  //   if(modelStore.lid){\r\n  //     myHeight *= 2\r\n  //   }\r\n  // }\r\n\r\n  // if ((modelStore.top_rim || modelStore.bottom_rim) && ! coloringFormStore.model === \"swan\"){\r\n  //   myHeight += 600\r\n  // }\r\n\r\n  // myHeight += coloringFormStore.counter.length * 55\r\n  // myHeight *= 2\r\n\r\n  const colorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">pixel color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={()=> setShowPicker(!showPicker)} \r\n        style={{background: coloringFormStore.selectedColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette\">\r\n        {showPicker &&  <TwitterPicker colors={colorPalette} triangle=\"top-left\" color={coloringFormStore.selectedColor} onChangeComplete={changeColor} />}\r\n      </div>\r\n    </div>\r\n  \r\n  const defaultColorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">primary color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={() => setShowPickerDefault(!showPickerDefault)} \r\n        style={{background: coloringFormStore.defaultColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette-d\" >\r\n        {showPickerDefault &&  <TwitterPicker colors={dColorPalette} triangle=\"top-left\" color={coloringFormStore.defaultColor} onChangeComplete={changeDefaultColor} />}\r\n      </div>\r\n    </div>\r\n\r\n  const paintByPixel = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(false)}> \r\n      <p className = \"label-inside\">paint by pixel</p>\r\n    </div>\r\n  </div>\r\n\r\n  const sprayPaint = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(true)}> \r\n      <p className = \"label-inside\">spray paint</p>\r\n    </div>\r\n  </div>\r\n\r\n  const logoObject = <div className = \"logo-object\">\r\n    <p className = \"label\" >3d-o</p>\r\n    <img className = \"logo\" src={logo} onClick={() => savePics()} alt=\"\"/>\r\n    {showInfo && <div className=\"info-popup\">info here</div>}\r\n  </div>  \r\n\r\n  function savePics(){\r\n    exportComponentAsPNG(diagramRef, {fileName: \"3do-diagram\"})\r\n    exportComponentAsPNG(appendagesRef, {fileName: \"3do-diagram-appendages\"})\r\n  }\r\n\r\n  const backButton = \r\n  <div className = \"back\">\r\n    <div className = \"nav\" onClick={() => console.log(\"hi\")}> \r\n      <IoChevronBack size={25} style={{color: 'white'}}/>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  const nextButton = \r\n  <div className = \"next\">\r\n    <DelayLink delay={0} to=\"/result\" clickAction={nextPage} replace={false}>\r\n      <div className = \"nav\"> \r\n          <IoChevronForward size={25} style={{color: 'white'}}/>\r\n      </div>\r\n    </DelayLink>\r\n  </div>\r\n\r\n  function nextPage(){\r\n    coloringFormStore.setMsg(true)\r\n    coloringFormStore.exportComponent(diagramRef)\r\n    coloringFormStore.exportComponent(appendagesRef, true)\r\n    }\r\n\r\n  const clear = <div className = \"logo-object\">\r\n    <p className = \"label\">clear</p>\r\n    <div className = \"icon\"\r\n      onClick={()=> coloringFormStore.clearAll()} >\r\n      <FiTrash  size={20} style={{color: 'white'}}/>\r\n      <br />\r\n    </div>\r\n  </div>\r\n\r\n  const info = <div className = \"logo-object\">\r\n  <p className = \"label\">info</p>\r\n  <div className = \"icon\"\r\n    onClick={()=> setShowInfo(!showInfo)} \r\n    >\r\n    <AiOutlineInfo size={23} style={{color: 'white'}}/>\r\n  </div>\r\n  </div>\r\n\r\n  let caption = `${coloringFormStore.model}`\r\n  if (coloringFormStore.model === \"fig\"){\r\n    caption = \"figurine head\"\r\n  }\r\n  else if (coloringFormStore.model === \"swan\"){\r\n    caption = \"swan wings + body\"\r\n  }\r\n\r\n  function colorEntry(key, col, num){\r\n    let sheets = Math.ceil(parseInt(num)/coloringFormStore.size)\r\n    let sheetsString = \"\"\r\n    sheets > 1 ? sheetsString = \"sheets\" : sheetsString = \"sheet\"\r\n    let pieces = \"\"\r\n    parseInt(num) > 1 ? pieces = \"pieces\" : pieces = \"piece\"\r\n    return <div key={key} style={{display:'inline-block', width: '100%'}}>\r\n      \r\n      <p style={{marginTop:10, marginBottom:0, marginLeft:20, float:\"right\"}}>{num} {pieces}, {sheets} {sheetsString}</p>\r\n      <div style={{marginTop:5, marginBottom:5, borderRadius: 25, height: 35, width: 35, background: col, float:\"right\"}}></div>\r\n    </div>\r\n  }\r\n\r\n  //\"#FFE7E5\"\r\n  const stats = \r\n  <div>\r\n    <p id=\"text\">instructions + overview</p>\r\n    <div style={{width: '100%', display:'inline-block'}}>\r\n      <div id=\"text\" style={{marginTop:0, marginBottom:0, marginRight: 0, width: '500px', background: \"#FFE7E5\", float:\"left\"}}>placeholder</div>\r\n      <div id=\"text\" style={{marginTop:0, marginBottom:0, marginLeft: 0, width: '500px', background: \"#FFE7E5\", float:\"right\"}}>\r\n        <div>\r\n          {coloringFormStore.counter.map((col, i) => (\r\n          colorEntry(i, col[0], col[1])\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  const canvas = absolute? \r\n  <div className = \"canvas\">\r\n    <div ref = {diagramRef}>\r\n      {stats}\r\n      <OrigamiObject \r\n        caption={`${caption}`}\r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n  </div> : \r\n  <div className = \"canvas-relative\">\r\n    <div ref = {diagramRef}>\r\n      {stats}\r\n      <OrigamiObject \r\n        caption={`${caption}`}\r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <Sticky innerZ={3}>\r\n        <div className = \"toolbar\">\r\n          {backButton}\r\n          {paintByPixel}\r\n          {clear}\r\n          {colorPicker}\r\n          {logoObject}\r\n          {defaultColorPicker}\r\n          {info}\r\n          {sprayPaint}\r\n          {nextButton}\r\n        </div>\r\n      </Sticky>\r\n      <div style={{position: 'relative', overflowX:'scroll', overflowY:'hidden', height: myHeight, background:\"#FFE7E5\"}}>\r\n        {canvas}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Colouring);","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport '../App.css'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport Home from '../pages';\r\nimport Colouring from '../pages/colouring'\r\n// import makeInspectable from \"mobx-devtools-mst\";\r\nimport RootStore from \"../models/RootStore\";\r\nimport {RootStoreProvider} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst rootStore = RootStore.create()\r\n\r\n// makeInspectable(vase);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{background: \"#FFE7E5\"}}>\r\n        <RootStoreProvider value={rootStore}>\r\n          <Router>\r\n            <Switch>\r\n              <Route path='/colouring'>\r\n                {rootStore.coloringFormStore.msg === \"error\" ? <Redirect to=\"/create\"/> : <Colouring />}\r\n              </Route>\r\n              <Route path='/'>\r\n                <Home/>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </RootStoreProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}