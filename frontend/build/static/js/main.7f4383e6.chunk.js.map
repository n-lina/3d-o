{"version":3,"sources":["components/Navbar/NavbarElements.js","assets/complex-logo.png","components/Navbar/index.js","assets/strawberry-slider-big.png","assets/transparent.png","components/Static/index.js","pages/landing.js","assets/models.jpg","assets/sliders.PNG","assets/coloring.PNG","assets/downloadbutton.PNG","pages/about.js","pages/learn.js","assets/logo-bg.png","pages/contact.js","assets/vase.png","assets/basket.png","assets/swan.png","assets/fig.PNG","models/VaseStore.js","models/PxModel.js","models/RowModel.js","models/DrawingSectionModel.js","models/ColoringForm.js","models/BasketStore.js","models/FigurineStore.js","models/SwanStore.js","models/RootStore.js","models/RootStoreContext.js","pages/create.js","pages/gallery.js","assets/browse/basket_hndl_med_12h.jpg","assets/browse/basket_lid_med_5h.jpg","assets/browse/basket_lid_med_10h.jpg","assets/browse/fig_bear_med_7h.jpg","assets/browse/fig_bear_med_8h.jpg","assets/browse/fig_bun_ez_8h.jpg","assets/browse/fig_cat_ez_8h.jpg","assets/browse/swan_ez_1w_2h_2.jpg","assets/browse/swan_ez_1w_2h.jpg","assets/browse/swan_ez_1w_3h.jpg","assets/browse/swan_ez_1w_4h.jpg","assets/browse/swan_ez_2w_2h.jpg","assets/browse/swan_ez_2w_4h.jpg","assets/browse/swan_med_1w_8h.jpg","assets/browse/vase_bot_cov_hard_20h.jpg","assets/browse/vase_bot_cov_med_10h.jpg","assets/browse/vase_hard_25h.jpg","assets/browse/vase_top_bot_rim_hard_40h.jpg","assets/browse/placeholder.PNG","pages/browse.js","pages/login.js","assets/paper.PNG","components/Wing/index.js","components/Swan/index.js","firebase.js","pages/create-swan.js","components/Vase/index.js","pages/create-vase.js","components/Basket/index.js","pages/create-basket.js","components/Figurine/index.js","pages/create-figurine.js","components/ResultVase/index.js","components/ResultFigurine/index.js","components/ResultBasket/index.js","assets/upper-banner.png","assets/lower-banner.png","pages/result.js","pages/index.js","components/Pixel/index.js","components/SpecialPixel/index.js","components/Row/index.js","components/SpecialRow/index.js","components/UntrackedPixel/index.js","components/UntrackedRow/index.js","components/TriangleSection/index.js","components/DrawingSection/index.js","components/OrigamiObject/index.js","assets/rim.png","assets/halfRim.png","assets/neck.png","components/Rim/index.js","components/UntrackedDrawingSection/index.js","components/UntrackedOrigamiObject/index.js","components/Bottom/index.js","components/Arm/index.js","components/BunnyOrHandle/index.js","components/Sphere/index.js","components/Appendages/index.js","pages/colouring.js","components/App.jsx","index.js"],"names":["Nav","styled","nav","NavLink","Link","PlainLink","NavMenu","FaBars","div","NavBtn","NavBtnLink","Navbar","to","style","height","margin","float","src","logo","alt","letterSpacing","marginRight","color","Heading","props","text","left","right_align","width","Math","max","round","length","logo_left","logo_right","underline_left","underline_right","text_left","text_right","text_align","className","textAlign","right","marginLeft","Paragraph","bottom","margin_left","margin_right","bottom_margin","marginBottom","Bullet","boldtext","display","marginTop","fontWeight","NumberBullet","num","factor","SideBySide","Landing","straw","About","models","borderRadius","sliders","coloring","downloadbutton","Learn","Contact","backgroundImage","bg","backgroundPosition","href","target","getCurvePointsNew","_pts","tension","numOfSegmentsArr","x","y","t1x","t2x","t1y","t2y","c1","c2","c3","c4","st","t","i","res","first_x","first_y","last_x","last_y","unshift","push","numOfSegments","pow","VaseStore","types","model","cm","dtop","d3","d2","d1","dbottom","dtop_h","d3_h","d2_h","d1_h","dbottom_h","top_rim","bottom_rim","flat_bottom","scale_h","default_color","upsize","tot_rows_per_section","optional","array","number","subsections","merged_sections","textures","string","modelDimensions","maxWidth","arms","ears","lid","top_handle","side_handles","actions","self","update_top_rim","update_bottom_rim","update_flat_bottom","in_to_cm","conv","cm_to_in","update_units","units","update_height","update_dtop","update_d3","update_d2","update_d1","update_dbottom","update_d_heights","vals","storePic","picData","clearTextures","setDefaultColor","setSize","dbottom_cm","d1_cm","d2_cm","d3_cm","dtop_cm","height_cm","cmToPcs","height_factor","width_factor","union","upper_section_idx","lower_section_idx","upper_section_root","find","lower_section_root","idx","getDimensions","zero_diff","heights","ctop","PI","widths","max_width","min_height_needed","diff","height_diff","temp_dbottom","curr_section","add_to_this_row","floor","actual_add","min","sub_from_this_row","actual_sub","excess_height","conj_idx","conj_idx_orig","next_sec_rows","pop","curr_sec_rows","splice","modelDimensions_merged","concat","apply","j","k","removeDuplicatePairs","arr","updateCurvedPts","broken","s_dtop_h","s_dbottom_h","scale_factor","s_dtop","s_dbottom","s_d1","s_d1_h","s_d2","s_d2_h","s_d3","s_d3_h","myPoints","subsections_idx","num_subsections","points","new_pts","h","r","THREE","section_pts","broken_pts","broken_pts_three","lo","hi","section_num","temp","slice","curr_idx","slice_size","views","PxModel","pixelColor","oldColor","canChangeColor","inverted","setPixelColor","col","setOldColor","setCanChangeColor","val","setInverted","RowModel","rowData","offset","displayRowNum","preColor","addPx","create","setOffset","setWidth","setDisplayRowNum","DrawingSectionModel","drawingSectionData","increasing","addRow","setWidthHeight","w","setIncreasing","DEFAULT_PNG","fileName","type","html2CanvasOptions","saveAs","uri","filename","link","document","createElement","download","body","appendChild","click","removeChild","window","open","ColoringForm","selectedColor","defaultColor","oldDefault","preload","clear","mode","size","canvasPic","appendPic","swan_two_wings","coloringFormData","counter","totPcs","doneDefualt","msg","resultMsg","storeAppendPic","setColor","setModel","swan_one_wing","setMsg","result","preloadDefaultColor","clearAll","unsetClear","setMode","setPreload","exportComponent","node","appendage","current","Error","element","ReactDOM","findDOMNode","html2canvas","scrollY","useCORS","imageTimeout","backgroundColor","then","canvas","toDataURL","saveDiagram","addDrawingSection","addPc","clearColoringForm","updateCounter","oldCol","newCol","done","curr_val","parseInt","String","updateCounterDefault","init","count","getCurvePointsBasket","BasketStore","diameter","update_top_handle","update_side_handles","update_lid","diameter_cm","update_diameter","height_used","dtop_used","diameter_used","dbottom_used","circ","s_diameter","s_diameter_h","num_subsections_top","num_subsections_bot","FigurineStore","body_scale","body_height","tot_rows_head","update_ears","update_arms","d","height_input","body_dimensions","head_rad","sin","head_circ","head_start_rad","head_start_circ","getDimensionsHead","console","log","getBrokenHeadPts","tot_theta_len","theta_start","theta_len","divisions","ratio","display_diameter","s_dtop_bottom","getCurvePointsFigurine","SwanStore","top_scale","bottom_scale","height_scale","wings","texture","update_wings","circ_pcs","swanBodyPts","getCurvePointsSwan","RootStore","vaseStore","coloringFormStore","basketStore","figStore","swanStore","RootStoreContext","React","createContext","RootStoreProvider","Provider","useStores","useContext","Create","useEffect","flexDirection","fig","vase","basket","swan","Gallery","justifyContent","alignItems","Browse","swans","s_ez_1w_2","s_ez_1w_2_2","s_ez_2w_2","s_ez_1w_3","s_ez_1w_4","s_ez_2w_4","s_med_1w_4","figs","f_bun_ez_8","f_cat_ez_8","f_bear_med_7","f_bear_med_8","baskets","b_lid_med_5","b_lid_med_10","b_hnd_med_12","vases","v_bot_cov_med_10","v_bot_cov_hard_20","v_hard_25","v_top_bot_rim_hard_40","len_figs","len_baskets","len_vases","key","img","difficulty","hours","placeholder","onClick","id","map","entry","Login","observer","vertices","purpose","my_vertices","useMemo","v","faces","onUpdate","geometry","computeFaceNormals","computeVertexNormals","z","verticesNeedUpdate","normalsNeedUpdate","image","grid","load","swan_pts","swan_body","args","side","specular","shininess","rim_mesh","position","rotation","getX","angle","radius","cos","getY","bottomRad","midRad","midHeight","topHeight","big_vertices","F_vertices","big_F_vertices","L_vertices","B_vertices","y_pos_wing","one_wing","shape","param","moveTo","lineTo","quadraticCurveTo","rad","depth","extrudeSettings","steps","bevelEnabled","neck_mesh","diameter_marker","useState","x_rot","changeXrot","y_rot","changeYrot","z_rot","changeZrot","dist","changeDist","handleKeyDown","event","preventDefault","addEventListener","removeEventListener","firebaseConfig","apiKey","process","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","measurementId","REACT_APP_measurementId","firebase","initializeApp","firestore","railStyle","Handle","handle","value","percent","getHandleProps","zIndex","cursor","fontFamily","fontSize","min_d","max_d","slider_diameter","rootStyle","domain","step","values","getRailProps","handles","bottom_rim_switch","onChange","options","label","selectedBackgroundColor","initialSelectedIndex","fontColor","optionBorderRadius","wings_switch","units_switch","background","camera","fov","aspect","near","far","intensity","overflow","incremented_val","FieldValue","increment","collection","doc","update","count_value","top_rim_mesh","bottom_rim_mesh","flat_bottom_mesh","getInputMarker","dtop_marker","dbottom_marker","d1_marker","d2_marker","d3_marker","sliderStyle","MultiHandle","min_h","max_h","sliderHeight","slider_dtop","slider_d3","slider_d2","slider_d1","slider_dbottom","dSlider","top_rim_switch","flat_bottom_switch","curved_bottom","phi_len","CustomCircleCurve","scale","ty","tz","multiplyScalar","this","tube_scale","path","tube_rad","percent_lid","rad_lid","lid_dist","tan","deco_r","deco_dist","percent_sphere","rad_bottom","bottom_dist","lid_switch","bottom_switch","top_handle_switch","side_handles_switch","head","bunny_ears","cat_ears","sphere_ears","bear_ears","tx","y_pos","half_side_len","bshape","ear_rad","arm_rad","x_pos","arms_switch","ears_switch","indexOf","itemsRef","useRef","insideRef","len","_","ref","el","texture_body","divs","broken_head","modelStore","canvasRef","context","getContext","defaultCol","sec_width","sec_height","fillStyle","fillRect","px_width","last_idx","c","ResultFigurine","upperbanner","lowerbanner","Home","diagram_num","set_diagram_num","get","data","catch","error","component","CreateSwan","CreateVase","CreateBasket","CreateFigurine","formObject","borderColor","substring","applyColor","onMouseEnter","onMouseLeave","onMouseOver","borderStyle","SpecialPixel","on","markerNum","rounded","paddingLeft","paddingRight","paddingBottom","pixels","SpecialRow","specialTop","specialBottom","my_dict","wing","numPx","caption","elevation","firstRowDisplay","panelRef","rows","var_offset","displayNum","swanUpper","wing_width","remainder","chest_width","ceil","back_width","wing1","wing2","chest","back","dimensions","objectRef","Array","fill","sTopCurr","sBottomCurr","curr","distribute","spacing","0","1","2","spacing_arr","sections","Rim","full","num_pcs","rim_image","half_rim_image","neck_image","arm","bunny","end_width","num_rows","Bottom","flat","object","tot_height","curr_row","Arm","small","med","big","large","BunnyOrHandle","input_height","Sphere","bottoms","rims","handle_size","ear_d","half_circ","getWindowDimensions","innerWidth","innerHeight","showInfo","setShowInfo","showPicker","setShowPicker","showPickerDefault","setShowPickerDefault","colorPaletteIdx","setColorIdx","dColorPaletteIdx","setDColorIdx","colorPalette","setColorPalette","dColorPalette","setDColorPalette","diagramRef","appendagesRef","myDimensions","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","absolute","colorPicker","colors","triangle","onChangeComplete","search","hex","toString","toUpperCase","includes","new_palette","defaultColorPicker","paintByPixel","sprayPaint","logoObject","exportComponentAsPNG","prevPageRoute","backButton","delay","replace","nextButton","clickAction","info","pc_size","stats","sheets","sheetsString","pieces","colorEntry","innerZ","overflowX","overflowY","rootStore","App","Component","render","getElementById"],"mappings":"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","file":"static/js/main.7f4383e6.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #D14240;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // padding: 0.5rem calc((100vw - 4000px) / 2);\r\n  padding: 0.5rem;\r\n  z-index: 10;\r\n  border-radius: 30px 30px 30px 30px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  // height: 70%;\r\n  cursor: pointer;\r\n  border-radius: 30px;\r\n  margin: 5px;\r\n  border-style: solid; \r\n  border-color: #D14240;\r\n\r\n  &:hover {\r\n    // transition: all 0.2s ease-in-out;\r\n    background: #FFE7EC;\r\n    color: red;\r\n    // height: 100%;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n\r\n  &.active {\r\n    color: red;\r\n    background: #FFE7EC;\r\n    // height: 100%;\r\n    border-radius: 40px;\r\n    border-style: solid;\r\n    border-color: #FFE7EC;\r\n  }\r\n`;\r\n\r\nexport const PlainLink = styled(Link)`\r\n  text-decoration:none;\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  // margin-right: 24px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 80vw; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 30px;\r\n  background: #256ce1;\r\n  // padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  width: 80px;\r\n  height: 50px;\r\n\r\n\r\n  /* Second Nav */\r\n  // margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #D14240;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/complex-logo.268ab665.png\";","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink, \r\n  PlainLink\r\n} from './NavbarElements';\r\nimport logo from \"../../assets/complex-logo.png\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <PlainLink to='/'><img style={{height: 60, margin: 20, float: 'left'}}src={logo} alt='logo' /></PlainLink>\r\n        <PlainLink to='/'>\r\n          <p style ={{letterSpacing: 3, marginRight: 100, color:\"white\", float: 'left'}}>3d-o</p>\r\n        </PlainLink>\r\n        {/* <Bars /> */}\r\n        <NavMenu>\r\n          <NavLink to='/about'>\r\n            <p style ={{letterSpacing: 2}}>about</p>\r\n          </NavLink>\r\n          <NavLink to='/learn' >\r\n            <p style ={{letterSpacing: 2}}>learn</p>\r\n          </NavLink>\r\n          <NavLink to='/create'>\r\n            <p style ={{letterSpacing: 2}}>create</p>\r\n          </NavLink>\r\n          <NavLink to='/browse'>\r\n            <p style ={{letterSpacing: 2}}>browse</p>\r\n          </NavLink>\r\n          <NavLink to='/gallery'>\r\n            <p style ={{letterSpacing: 2}}>gallery</p>\r\n          </NavLink>\r\n          <NavLink to='/contact'>\r\n            <p style ={{letterSpacing: 2}}>contact</p>\r\n          </NavLink>\r\n          <NavLink to='/login'>\r\n            <p style ={{letterSpacing: 2}}>login</p>\r\n          </NavLink>\r\n          {/* Second Nav */}\r\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n        </NavMenu>\r\n        {/* <NavBtn>\r\n          <NavBtnLink to='/signin'>Sign In</NavBtnLink>\r\n        </NavBtn> */}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/strawberry-slider-big.9374e4ca.png\";","export default __webpack_public_path__ + \"static/media/transparent.7b709eb2.png\";","import React from \"react\";\r\nimport \"./static.css\";\r\nimport logo from \"../../assets/transparent.png\";\r\n\r\nconst Heading = (props) => {\r\n  const { text, left, right_align } = props;\r\n  let width = Math.max(300, Math.round(text.length) * 40);\r\n  if (width >= 1000) {\r\n    width = \"100%\";\r\n  }\r\n  let logo_left = 0;\r\n  let logo_right = \"auto\";\r\n  let underline_left = 8;\r\n  let underline_right = \"auto\";\r\n  let text_left = 100;\r\n  let text_right = \"auto\";\r\n  let text_align = \"left\";\r\n  if (right_align) {\r\n    logo_right = 0;\r\n    logo_left = \"auto\";\r\n    underline_right = 8;\r\n    underline_left = \"auto\";\r\n    text_left = \"auto\";\r\n    text_right = 100;\r\n    text_align = \"right\";\r\n  }\r\n  return (\r\n    <div className=\"heading\" style={{ textAlign: text_align }}>\r\n      <img\r\n        className={left ? \"heading-left\" : \"heading-right\"}\r\n        src={logo}\r\n        alt={\"\"}\r\n        style={{ left: logo_left, right: logo_right }}\r\n      />\r\n      <div\r\n        className=\"heading-underline\"\r\n        style={{ width: width, left: underline_left, right: underline_right }}\r\n      ></div>\r\n      <div className=\"heading-text-holder\">\r\n        <p style={{ marginLeft: text_left, marginRight: text_right }}>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Paragraph = (props) => {\r\n  const { bottom, left, text } = props;\r\n  let margin_left = 70;\r\n  let margin_right = 30;\r\n  let bottom_margin = 40;\r\n  if (!left) {\r\n    margin_right = 30;\r\n    margin_left = 30;\r\n  }\r\n  if (bottom) {\r\n    bottom_margin = 0;\r\n  }\r\n  return (\r\n    <div\r\n      className=\"paragraph\"\r\n      style={{\r\n        textAlign: left ? \"left\" : \"right\",\r\n        marginLeft: margin_left,\r\n        marginRight: margin_right,\r\n        marginBottom: bottom_margin,\r\n      }}\r\n    >\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Bullet = (props) => {\r\n  const { bottom, left, boldtext, text } = props;\r\n  let margin_left = 70;\r\n  let margin_right = 30;\r\n  let bottom_margin = 10;\r\n  let text_align = \"left\";\r\n  if (!left) {\r\n    margin_right = 30;\r\n    margin_left = 30;\r\n    text_align = \"right\";\r\n  }\r\n  if (bottom) {\r\n    bottom_margin = 20;\r\n  }\r\n  return (\r\n    <div className=\"bullet\" style={{ textAlign: text_align }}>\r\n      {boldtext && (\r\n        <p\r\n          className=\"paragraph\"\r\n          style={{\r\n            display: \"inline-block\",\r\n            width: left ? \"auto\" : \"80%\",\r\n            marginTop: 15,\r\n            marginLeft: margin_left,\r\n            marginRight: margin_right,\r\n            marginBottom: bottom_margin,\r\n          }}\r\n        >\r\n          🍓 <span style={{ fontWeight: \"bold\" }}>{boldtext}:</span> {text}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NumberBullet = (props) => {\r\n  const { num, left, text } = props;\r\n  let factor = num ? 30 : 45;\r\n  let length = text.length <= 8 ? text.length + 2 : text.length;\r\n  let width = Math.max(200, Math.round(length) * factor);\r\n  let text_align = \"left\";\r\n  if (!left) {\r\n    text_align = \"right\";\r\n  }\r\n  let margin_left = 70;\r\n  let margin_right = 30;\r\n  let underline_left = 30;\r\n  let underline_right = \"auto\";\r\n  if (!left) {\r\n    margin_right = 70;\r\n    margin_left = 30;\r\n    underline_right = 30;\r\n    underline_left = \"auto\";\r\n  }\r\n  return (\r\n    <div className=\"num-bullet\" style={{ textAlign: text_align }}>\r\n      <p\r\n        className=\"num-heading-text\"\r\n        style={{\r\n          display: \"inline-block\",\r\n          marginTop: 30,\r\n          marginBottom: 0,\r\n          marginLeft: margin_left,\r\n          marginRight: margin_right,\r\n        }}\r\n      >\r\n        {num ? num + \".\" : \"🍓 ' . ` \"} {text} {num ? \"\" : \" ` . ' 🍓\"}\r\n      </p>\r\n      <div\r\n        className=\"num-bullet-bg\"\r\n        style={{\r\n          width: width,\r\n          left: underline_left,\r\n          right: underline_right,\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SideBySide = (props) => {\r\n  const { left, right } = props;\r\n\r\n  return (\r\n    <div className=\"sidebyside\">\r\n      {left}\r\n      {right}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Heading, Paragraph, Bullet, NumberBullet, SideBySide };\r\n","import React from \"react\";\r\nimport straw from \"../assets/strawberry-slider-big.png\";\r\nimport { Heading, Paragraph, Bullet } from \"../components/Static\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <img className=\"bg-straw\" src={straw} alt={\"\"} />\r\n      <img className=\"bg-straw-bottom\" src={straw} alt={\"\"} />\r\n      <Heading text={\"3d-origami\"} left={true} right_align={false} />\r\n      <Paragraph\r\n        bottom={false}\r\n        left={true}\r\n        text={\r\n          \"3d origami is the art of assembling hundreds to thousands of triangular paper units into intricate structures. Computational as it is artistic, 3d-origami design can involve much calculation and planning. Both an intellectual challenge and an artistic challenge; an exercise for the mind as well as the hands: 3d-origami is an engaging and accessible art form enjoyable for all age groups.\"\r\n        }\r\n      />\r\n      <Heading text={\"3d-o\"} left={false} right_align={false} />\r\n      <Paragraph\r\n        bottom={false}\r\n        left={true}\r\n        text={\r\n          \"3d-o is a web application that generates comprehensive and easy-to-follow 3d-origami diagrams. Initially developed to combat rising COVID19 case counts amidst the 2020 global pandemic, 3d-o automates 3d-origami design and promotes social distancing by engaging users in a fun, indoor activity. 3d-o is also the first of its kind — a pioneer in the space of 3d-origami, and art, automation.\"\r\n        }\r\n      />\r\n      <Heading text={\"the founder\"} left={true} right_align={false} />\r\n      <Paragraph\r\n        bottom={false}\r\n        left={true}\r\n        text={\r\n          \"About me: My name is Lina Nguyen and I am a senior engineering student at the University of British Columbia in Vancouver, Canada. Passionate about using software to solve real-world problems, I started developing 3d-o in December 2020 in response to my province's rising COVID19 case counts. 3d-o is really special to me: It is both based on my lifelong hobby and my most technical and challenging personal project to date. Now August 2021, I am proud to finally launch 3d-o.\"\r\n        }\r\n      />\r\n      <Heading text={\"why 3d-origami\"} left={false} right_align={true} />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={false}\r\n        text={\r\n          \"3d-origami projects can take months to complete. From cutting the paper, to folding the triangular units, to assembling them into the final structure, 3d-origami projects are a time investment. However, they are also highly rewarding:\"\r\n        }\r\n      />\r\n      <Bullet\r\n        bottom={false}\r\n        left={false}\r\n        boldtext={\"3d-origami projects make the perfect gifts\"}\r\n        text={\r\n          \"With the amount of time invested into 3d-origami projects, 3d-origmai works make highly thoughtful, impressive, and personalized gifts — perfect for teachers, coaches, and the like.\"\r\n        }\r\n      />\r\n      <Bullet\r\n        bottom={false}\r\n        left={false}\r\n        boldtext={\"3d-origami can improve your analytical skills\"}\r\n        text={\r\n          \"The careful and computational nature of 3d-origami work can translate to increased ability in other analytical areas, like math and science. 3d-origami work builds focus, self-discipline, and patience.\"\r\n        }\r\n      />\r\n      <Bullet\r\n        bottom={false}\r\n        left={false}\r\n        boldtext={\"3d-origami can improve brain function\"}\r\n        text={\r\n          \"The intricate and meticulous handwork that 3d-origami requires builds fine motor skills, improves memory, and challenges the brain.\"\r\n        }\r\n      />\r\n      <Bullet\r\n        bottom={true}\r\n        left={false}\r\n        boldtext={\"3d-origami can decrease stress and anxiety\"}\r\n        text={\r\n          \"Art, especially detail-oriented art involving high levels of concentration, can increase the brain's release of dopamine which can in turn decrease stress and anxiety. Doing art can also improve self-esteem.\"\r\n        }\r\n      />\r\n      <Heading text={\"why 3d-o\"} left={true} right_align={true} />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={false}\r\n        text={\r\n          \"3d-o saves time: Without automated 3d-origrami diagrams, artists have to manually create 3d-origami diagrams, a process that requires much and menial trial and error. A mistake or mistep in 3d-origami, analogous to a bug in a computer program, can cost tens of hours and resources to rectify. A 3d-o diagram provides not only a clear map of how each piece should fit together, but also a count of all the pieces needed and in which colors. With this information, users can know beforehand exactly how much paper to use and approximately how much time the project will take. 3d-o entirely abstracts away the computational details of the 3d-origami design process, allowing users to focus solely on the art.\"\r\n        }\r\n      />\r\n      <div style={{ height: 30 }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","export default __webpack_public_path__ + \"static/media/models.c6327438.jpg\";","export default __webpack_public_path__ + \"static/media/sliders.633a7d7d.PNG\";","export default __webpack_public_path__ + \"static/media/coloring.5d2dcb40.PNG\";","export default __webpack_public_path__ + \"static/media/downloadbutton.720f3ebf.PNG\";","import React from \"react\";\r\nimport models from \"../assets/models.jpg\";\r\nimport sliders from \"../assets/sliders.PNG\";\r\nimport coloring from \"../assets/coloring.PNG\";\r\nimport downloadbutton from \"../assets/downloadbutton.PNG\";\r\nimport {\r\n  Heading,\r\n  Paragraph,\r\n  Bullet,\r\n  NumberBullet,\r\n  SideBySide,\r\n} from \"../components/Static\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <Heading text={\"how to use 3d-o\"} left={false} right_align={false} />\r\n      <NumberBullet num={1} left={true} text={\"select a model\"} />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={true}\r\n        text={\r\n          \"Head to the 'create' tab to select a model. 3d-o supports four different 3d-origami models: \"\r\n        }\r\n      />\r\n      <SideBySide\r\n        left={\r\n          <div>\r\n            <Bullet\r\n              bottom={false}\r\n              left={true}\r\n              boldtext={\"Vase\"}\r\n              text={\r\n                \"Vases are typically more intermediate or advanced 3d-origrami projects. Vases requires the most pieces, the most time, and the most skill of the four models. The curvier your vase model is, the more difficult it will be to create.\"\r\n              }\r\n            />\r\n            <Bullet\r\n              bottom={false}\r\n              left={true}\r\n              boldtext={\"Basket\"}\r\n              text={\r\n                \"Baskets are similar to vases, but easier. They are easy to intermediate in difficulty and skill level. This model can be used to create beautiful jewelry boxes and fruit baskets.\"\r\n              }\r\n            />\r\n            <Bullet\r\n              bottom={false}\r\n              left={true}\r\n              boldtext={\"Figurine\"}\r\n              text={\r\n                \"This model is composed of two parts glued together: the head and the body. Figurines are easy to make. This model can be used to create your favourite charactors, like Hello Kitty or Winnie the Pooh!\"\r\n              }\r\n            />\r\n            <Bullet\r\n              bottom={false}\r\n              left={true}\r\n              boldtext={\"Swan\"}\r\n              text={\r\n                \"Swans are very easy to make and their elegance makes them perfect, quick, and beautiful gifts. Swans require the least skill of the four models.\"\r\n              }\r\n            />\r\n          </div>\r\n        }\r\n        right={\r\n          <img\r\n            src={models}\r\n            alt=\"\"\r\n            style={{\r\n              height: 550,\r\n              width: 500,\r\n              marginRight: 20,\r\n              marginTop: 10,\r\n              borderRadius: 40,\r\n            }}\r\n          />\r\n        }\r\n      />\r\n\r\n      <NumberBullet left={false} num={2} text=\"customize your model\" />\r\n      <SideBySide\r\n        left={\r\n          <img\r\n            src={sliders}\r\n            alt=\"\"\r\n            style={{ width: 500, marginLeft: 20, marginTop: 10 }}\r\n          ></img>\r\n        }\r\n        right={\r\n          <Paragraph\r\n            bottom={true}\r\n            left={false}\r\n            text={\r\n              \"Use the sliders to customize your model. For vases and baskets, curved models are stronger than straight models. For best results, make your model reasonably sized and not too curvy! Press 'done' to generate your 3d-origami diagram.\"\r\n            }\r\n          />\r\n        }\r\n      />\r\n\r\n      <NumberBullet left={true} num={3} text=\"color your diagram\" />\r\n      <div style={{ height: 15 }} />\r\n      <SideBySide\r\n        left={\r\n          <div>\r\n            <Bullet\r\n              bottom={false}\r\n              left={true}\r\n              boldtext={\"Primary Color\"}\r\n              text={\r\n                \"Select your primary color using the color selector on the right.\"\r\n              }\r\n            />\r\n            <Bullet\r\n              bottom={false}\r\n              left={true}\r\n              boldtext={\"Color Selection\"}\r\n              text={\r\n                \"Populate the left color selector with the colors you intend to use for your project so you can access them easily.\"\r\n              }\r\n            />\r\n            <Bullet\r\n              bottom={false}\r\n              left={true}\r\n              boldtext={\"Coloring\"}\r\n              text={\r\n                \"After choosing your colors, you are ready to color your diagram. Use 'spray paint' mode to color in large sections and 'paint by pixel' mode to color in fine details.\"\r\n              }\r\n            />\r\n            <Bullet\r\n              bottom={false}\r\n              left={true}\r\n              boldtext={\"Save Draft\"}\r\n              text={\r\n                \"At any time, press the 3d-o logo in the center of the toolbar to save your current diagram. This button allows you to save different drafts of your diagram and to try out different colors and patterns.\"\r\n              }\r\n            />\r\n            <Bullet\r\n              bottom={false}\r\n              left={true}\r\n              boldtext={\"Results\"}\r\n              text={\r\n                \"Once you are happy with your diagram, press the 'next' arrow to see the final result.\"\r\n              }\r\n            />\r\n          </div>\r\n        }\r\n        right={\r\n          <img\r\n            src={coloring}\r\n            alt=\"\"\r\n            style={{ width: 500, marginRight: 20 }}\r\n          ></img>\r\n        }\r\n      />\r\n      <NumberBullet left={false} num={4} text=\"save your 3d-o diagram\" />\r\n      <SideBySide\r\n        left={\r\n          <img\r\n            src={downloadbutton}\r\n            alt=\"\"\r\n            style={{ width: 495, marginLeft: 30, marginTop: -11 }}\r\n          ></img>\r\n        }\r\n        right={\r\n          <Paragraph\r\n            bottom={true}\r\n            left={false}\r\n            text=\"Download your diagram using the 'download' button.\"\r\n          />\r\n        }\r\n      />\r\n\r\n      <NumberBullet left={true} num={5} text=\"start folding!\" />\r\n      <div className=\"bottom-padding\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport models from \"../assets/models.jpg\";\r\nimport sliders from \"../assets/sliders.PNG\";\r\nimport coloring from \"../assets/coloring.PNG\";\r\nimport downloadbutton from \"../assets/downloadbutton.PNG\";\r\nimport {\r\n  Heading,\r\n  Paragraph,\r\n  Bullet,\r\n  NumberBullet,\r\n  SideBySide,\r\n} from \"../components/Static\";\r\n\r\nconst Learn = () => {\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <Heading text={\"learn 3d-origami\"} left={false} right_align={false} />\r\n      <NumberBullet num={false} left={false} text={\"the unit piece\"} />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={false}\r\n        text={\"3d-origami begins with the unit piece.\"}\r\n      />\r\n      <NumberBullet left={true} num={false} text=\"sizing\" />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={true}\r\n        text={\r\n          \"3d-origami pieces usually come in two different sizes: 1/32 and 1/16. These fractions indicate how many pieces pieces can be cut from an 8.5 x 11 inch piece of US letter paper (A4 paper works too!). If you are using a different size of paper, cut the larger paper into 8.5 x 11 inch (or 8.5 x 4.5 inch) pieces before starting. \"\r\n        }\r\n      />\r\n      <NumberBullet left={false} num={false} text=\"paper\" />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={false}\r\n        text={\r\n          \"Because not all colors come in standard letter paper or A4 sizes, sometimes other types of paper need to be used. Cardstock, poster board, or other thicker papers can be used as well, but I recommend that you make pieces half the length when using these papers. In other words, skip the first step of folding your piece in half when folding and start directly at Step 3 in the diagram above! \"\r\n        }\r\n      />\r\n      <NumberBullet left={true} num={false} text=\"inversion\" />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={true}\r\n        text={\r\n          \"Inversion is when the inside of the 3d-origami piece is facing outwards instead of inwards. Inversion is commonly used when building vases, baskets, and one-winged swans. Inverted pieces can be used to add interest and detailing to a project or to make the project more structurally sound. As a rule of thumb, 3d-o recommends using inverted pieces when your vase or basket is decreasing in circumference starting from the bottom. This is reflected in 3d-o's diagrams!\"\r\n        }\r\n      />\r\n      <NumberBullet left={false} num={false} text=\"increasing\" />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={false}\r\n        text={\r\n          \"Increasing is the technique of adding more pieces to a row to increase the circumference. In increasing, 2 pieces in one row become 3 pieces in the next row. This is achieved by putting two unit pieces where you would normally put one. Pretend there is an invisible piece between the two pieces involved in the increasing. Optionally, you can also add a small piece between the two pieces in place of the invisible piece! \"\r\n        }\r\n      />\r\n      <NumberBullet left={true} num={false} text=\"decreasing\" />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={true}\r\n        text={\r\n          \"Decreasing is the technique of removing pieces from a row to decrease the circumference. Decreasing slowly and properly makes structures stronger as curved surfaces are stronger than straight ones. In decreasing, 3 pieces become 2 pieces in the next row. This is achieved by putting two pieces where you would normally put three. In decreasing, two ''spikes'' go into one pocket.\"\r\n        }\r\n      />\r\n      <NumberBullet left={false} num={false} text=\"filling \" />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={false}\r\n        text={\r\n          \"When a particular colour of paper is hard to find, filling can be really useful. Filling is the technique of using scrap paper to ''fill'' your unit piece. Filling can be used when your paper is ripped or when you want to save paper by cutting pieces much smaller than usual.Filling gives your piece the same strength as a normal, perfect piece, and uses less of your precious coloured paper. Filling can be cut from any scrap paper, such as old newspaper or magazines. Also, make the filling length a bit smaller than half of your piece length so it stays hidden!\"\r\n        }\r\n      />\r\n      <NumberBullet left={true} num={false} text=\"shaping\" />\r\n      <Paragraph\r\n        bottom={true}\r\n        left={true}\r\n        text={\r\n          \"While 3d-o diagrams will give you your desired shape, you can mold your structure to perfection and guide its progress with your hands and fingers as you build as well. \"\r\n        }\r\n      />\r\n      <div className=\"bottom-padding\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Learn;\r\n","export default __webpack_public_path__ + \"static/media/logo-bg.1d8d140f.png\";","import React from 'react';\r\nimport bg from \"../assets/logo-bg.png\"\r\n// import bgOff from \"../assets/logo-bg-off.png\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport \"./create-vase.css\"\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '486px',\r\n        backgroundImage: `url(${bg})`, \r\n        backgroundPosition: \"50%\"\r\n      }}\r\n    >\r\n      <div className=\"info-box\" >\r\n        <img src={straw} alt={\"\"} className =\"straw-l\"/>\r\n        <img src={straw} alt={\"\"} className =\"straw-m\"/>\r\n        <img src={straw} alt={\"\"} className =\"straw-r\"/>\r\n        <p className = \"app-name\">3d-o<br/>engineering x art</p>\r\n        <p className = \"name\">— lina nguyen —</p>\r\n        <div className=\"left\">\r\n          <a href=\"https://www.linkedin.com/in/nlina/\" target=\"_blank\" className=\"link\">linkedin</a>\r\n          <br/>\r\n          <a href=\"https://github.com/n-lina/n-lina/raw/main/Lina%20Nguyen%20Grad2022%20Resume.pdf\" target=\"_blank\" className=\"link\">resume</a>\r\n        </div>\r\n        <div className=\"right\">\r\n          <a href=\"https://github.com/n-lina\" target=\"_blank\" className=\"link\">github</a>\r\n          <br/>\r\n          <a href=\"mailto:linanguyen@alumni.ubc.ca\" target=\"_blank\" className=\"link\">email</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","export default __webpack_public_path__ + \"static/media/vase.19cb9836.png\";","export default __webpack_public_path__ + \"static/media/basket.6d6869d7.png\";","export default __webpack_public_path__ + \"static/media/swan.219c1002.png\";","export default __webpack_public_path__ + \"static/media/fig.3fd7ce23.PNG\";","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsNew(_pts, tension, numOfSegmentsArr) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[8]\r\n    const last_y = _pts[9]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        let numOfSegments = numOfSegmentsArr[(i/2)-1]\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(y, 0.5));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n// function getCurvePoints(pts, tension, isClosed, numOfSegments) {\r\n\r\n//     // use input value if provided, or use a default value   \r\n//     tension = (typeof tension != 'undefined') ? tension : 0.5;\r\n//     isClosed = isClosed ? isClosed : false;\r\n//     numOfSegments = numOfSegments ? numOfSegments : 16;\r\n\r\n//     var _pts = [], res = [],    // clone array\r\n//         x, y,           // our x,y coords\r\n//         t1x, t2x, t1y, t2y, // tension vectors\r\n//         c1, c2, c3, c4,     // cardinal points\r\n//         st, t, i;       // steps based on num. of segments\r\n\r\n//     // clone array so we don't change the original\r\n//     //\r\n//     _pts = pts.slice(0);\r\n\r\n//     // The algorithm require a previous and next point to the actual point array.\r\n//     // Check if we will draw closed or open curve.\r\n//     // If closed, copy end points to beginning and first points to end\r\n//     // If open, duplicate first points to befinning, end points to end\r\n//     if (isClosed) {\r\n//         _pts.unshift(pts[pts.length - 1]);\r\n//         _pts.unshift(pts[pts.length - 2]);\r\n//         _pts.unshift(pts[pts.length - 1]);\r\n//         _pts.unshift(pts[pts.length - 2]);\r\n//         _pts.push(pts[0]);\r\n//         _pts.push(pts[1]);\r\n//     }\r\n//     else {\r\n//         _pts.unshift(pts[1]);   //copy 1. point and insert at beginning\r\n//         _pts.unshift(pts[0]);\r\n//         _pts.push(pts[pts.length - 2]); //copy last point and append\r\n//         _pts.push(pts[pts.length - 1]);\r\n//     }\r\n\r\n//     // ok, lets start..\r\n\r\n//     // 1. loop goes through point array\r\n//     // 2. loop goes through each segment between the 2 pts + 1e point before and after\r\n//     for (i=2; i < (_pts.length - 4); i+=2) {\r\n//         for (t=0; t <= numOfSegments; t++) {\r\n\r\n//             // calc tension vectors\r\n//             t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n//             t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n//             t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n//             t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n//             // calc step\r\n//             st = t / numOfSegments;\r\n\r\n//             // calc cardinals\r\n//             c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n//             c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n//             c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n//             c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n//             // calc x and y cords with common control vectors\r\n//             x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n//             y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n//             //store points in array\r\n//             res.push(x);\r\n//             res.push(y);\r\n\r\n//         }\r\n//     }\r\n\r\n//     return res;\r\n// }\r\n\r\nconst VaseStore = types\r\n  .model(\"Vase\", {\r\n    cm: true,\r\n    dtop: 20, \r\n    d3: 10, \r\n    d2: 10, \r\n    d1: 35, \r\n    dbottom: 20, \r\n    dtop_h: 100, \r\n    d3_h: 90, \r\n    d2_h: 70, \r\n    d1_h: 50, \r\n    dbottom_h: 0, \r\n    height: 50,\r\n    top_rim: false, \r\n    bottom_rim: true, \r\n    flat_bottom: true, \r\n    scale_h: 36,\r\n    default_color: \"#FFFFFF\",\r\n    upsize: false, \r\n    tot_rows_per_section: types.optional(types.array(types.number), []), // bottom to top ex. [15,19,10,10]\r\n    subsections: types.optional(types.array(types.array(types.number)),[]), // ex.[[5,4],[3,2],[1],[0]] // subsections are drawingSections\r\n    // vase has up to 4 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    // sections can only be merged up, ie. vals >= indeces\r\n    merged_sections: types.optional(types.array(types.number), [0,1,2,3]), // ex. [2,2,2,3] means sections 0, 1, 2 were merged into one section; bottom to top ie. section including bottom diameter = index 0\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), []), // top to bottom ex. [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]\r\n    maxWidth: 0,\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_flat_bottom(flat_bottom){\r\n        self.flat_bottom = flat_bottom\r\n    },\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop * conv)\r\n        self.d3 = Math.round(self.d3 * conv)\r\n        self.d2 = Math.round(self.d2 * conv)\r\n        self.d1 = Math.round(self.d1 * conv)\r\n        self.dbottom = Math.round(self.dbottom * conv)\r\n        self.height = Math.round(self.height * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop / conv)\r\n        self.d3 = Math.round(self.d3 / conv)\r\n        self.d2 = Math.round(self.d2 / conv)\r\n        self.d1 = Math.round(self.d1 / conv)\r\n        self.dbottom = Math.round(self.dbottom / conv)\r\n        self.height = Math.round(self.height / conv)\r\n        self.cm = false\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_d3(d3){\r\n        self.d3 = d3\r\n    }, \r\n    update_d2(d2){\r\n        self.d2 = d2\r\n    }, \r\n    update_d1(d1){\r\n        self.d1 = d1\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    },\r\n    update_d_heights(vals){\r\n        self.d3_h = vals[3]\r\n        self.d2_h = vals[2]\r\n        self.d1_h = vals[1]\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    setSize(){\r\n        const conv = 2.54\r\n        const dbottom_cm = self.cm ? self.dbottom : self.dbottom * conv\r\n        const d1_cm = self.cm ? self.d1 : self.d1 * conv\r\n        const d2_cm = self.cm ? self.d1 : self.d2 * conv\r\n        const d3_cm = self.cm ? self.d1 : self.d3 * conv\r\n        const dtop_cm = self.cm ? self.dtop : self.dtop * conv\r\n        const height_cm = self.cm ? self.height : self.height * conv\r\n        const average_diameter_cm = (dbottom_cm + d1_cm + d2_cm + d3_cm + dtop_cm)/5\r\n        if (average_diameter_cm > 30 || height_cm > 70){\r\n            self.upsize = true\r\n        }\r\n    },\r\n    cmToPcs(cm, height=false){\r\n        const height_factor = self.upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = self.upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(((cm/100) * self.height)/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    },\r\n    union(upper_section_idx, lower_section_idx){\r\n    // note that self.merged_sections is bottom to top so upper indexes will have a higher value \r\n        const upper_section_root = self.find(upper_section_idx)\r\n        const lower_section_root = self.find(lower_section_idx)\r\n        if (upper_section_root == lower_section_root) return \r\n        self.merged_sections[lower_section_root] = upper_section_root\r\n    },\r\n    find(idx){\r\n        if (self.merged_sections[idx] == idx) return idx\r\n        return self.find(self.merged_sections[idx])\r\n    },\r\n    getDimensions() {\r\n        // INPUTS \r\n        // dtop: 20,\r\n        // d3: 10, \r\n        // d2: 10, \r\n        // d1: 35,\r\n        // dbottom: 20, \r\n        // dtop_h: 100, \r\n        // d3_h: 90, \r\n        // d2_h: 70, \r\n        // d1_h: 50, \r\n        // dbottom_h: 0, \r\n        // height: 50,\r\n\r\n        // OUTPUTS\r\n        // tot_rows_per_section: types.optional(types.array(types.number), [15,19,10,10]), // bottom to top \r\n        // subsections: types.optional(types.array(types.array(types.number)),[[5,4],[3,2],[1],[0]]), // bottom to top\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n\r\n        // max allowed decrease rate: -1 per 5 pcs\r\n        // max increase rate: +1 per 1 pc \r\n        // min 3 rows per section\r\n\r\n        let zero_diff = [];\r\n        let modelDimensions = []\r\n        let subsections = [[],[],[],[]]\r\n        let tot_rows_per_section = [0,0,0,0]\r\n\r\n        // convert from in to cm first \r\n        if (!self.cm) self.in_to_cm()\r\n\r\n        const dbottom_h = 0\r\n        const d1_h = self.cmToPcs(self.d1_h, true) // units = pieces\r\n        const d2_h = self.cmToPcs(self.d2_h, true)\r\n        const d3_h = self.cmToPcs(self.d3_h, true)\r\n        const dtop_h = self.cmToPcs(self.dtop_h, true)\r\n        const heights = [dbottom_h, d1_h, d2_h, d3_h, dtop_h]\r\n\r\n        const ctop = self.cmToPcs(Math.PI * self.dtop) // units = pieces\r\n        const c3 = self.cmToPcs(Math.PI * self.d3)\r\n        const c2 = self.cmToPcs(Math.PI * self.d2)\r\n        const c1 = self.cmToPcs(Math.PI * self.d1)\r\n        const cbottom = self.cmToPcs(Math.PI * self.dbottom)\r\n        const widths = [cbottom, c1, c2, c3, ctop]\r\n\r\n        let max_width = widths[0]\r\n\r\n        // getting from diameter to diameter in 'height' pieces \r\n\r\n        for (let i = 0; i < widths.length-1; i++){\r\n            const min_height = 3\r\n            let min_height_needed = min_height\r\n            let diff = widths[i+1]-widths[i]\r\n            let height_diff = heights[i+1] - heights[i]\r\n\r\n            let temp_dbottom = widths[i]\r\n            let curr_section = []\r\n            \r\n            // increasing\r\n            if (diff > 0){\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0){\r\n                    const add_to_this_row = Math.floor(temp_dbottom/min_height)\r\n                    const actual_add = Math.min(diff, add_to_this_row)\r\n                    diff -= actual_add \r\n                    temp_dbottom += actual_add\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom, min_height])\r\n                }\r\n            }\r\n            // decreasing\r\n            else if (diff < 0){\r\n                diff = diff * -1\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0) {\r\n                    const sub_from_this_row = Math.floor(temp_dbottom/5)\r\n                    const actual_sub = Math.min(diff, sub_from_this_row)\r\n                    diff -= actual_sub\r\n                    temp_dbottom -= actual_sub\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom,min_height])\r\n                }            \r\n            }\r\n            // straight\r\n            else if (diff == 0){\r\n                min_height_needed = height_diff\r\n                curr_section.push([temp_dbottom, height_diff])\r\n                zero_diff.push(widths.length-1-1-i)\r\n            }\r\n            let excess_height = height_diff-min_height_needed\r\n            while (excess_height>0){\r\n                curr_section[excess_height%curr_section.length][1] += 1\r\n                excess_height -= 1\r\n            }\r\n            tot_rows_per_section[i] = Math.max(height_diff, min_height_needed)\r\n            modelDimensions.unshift(curr_section)    \r\n        }\r\n        for(let i = 0; i < zero_diff.length; i++){ // zero_diff is sorted in ascending order\r\n            // merge right(lower) into left(upper) so that the idx's in zero_diff are still accurate\r\n            // modelDimensions is top to bottom so right = lower and left = upper\r\n            const idx = zero_diff[i] // idx of modelDimensions\r\n            const conj_idx = tot_rows_per_section.length-1-idx // idx of tot_rows_per_section\r\n            const conj_idx_orig = 4 - 1 - idx// 4 = self.merged_sections.length\r\n            if (zero_diff[i] > 0){\r\n                if(modelDimensions[idx-1].length > 1) { // partial merge, no section deletion\r\n                    const next_sec_last_arr = modelDimensions[idx-1].pop()\r\n                    const next_sec_rows = next_sec_last_arr[1]\r\n                    modelDimensions[idx][0][1] += next_sec_rows // the diff for this section is 0 so it only has one arr in it\r\n                    tot_rows_per_section[conj_idx] += next_sec_rows\r\n                    tot_rows_per_section[conj_idx+1] -= next_sec_rows\r\n                }\r\n                else { // full merge, section deletion, this occurs when 2 sections have the exact same start and end diameters.\r\n                    // only in full merge do we have to merge sections in self.merged_sections\r\n                    self.union(conj_idx_orig+1, conj_idx_orig) // merges conj_idx into conj_idx+1 -> head will be conj_idx+1\r\n                    const curr_sec_last_arr = modelDimensions[idx].pop()\r\n                    const curr_sec_rows = curr_sec_last_arr[1]\r\n                    modelDimensions[idx-1][0][1] += curr_sec_rows\r\n                    modelDimensions.splice(idx,1) // deleting the whole section, the right(lower) section\r\n                    tot_rows_per_section[conj_idx] -= curr_sec_rows \r\n                    tot_rows_per_section[conj_idx+1] += curr_sec_rows\r\n                    tot_rows_per_section.splice(conj_idx, 1)\r\n                    subsections.pop()\r\n                }\r\n            }\r\n        }\r\n        var modelDimensions_merged = [].concat.apply([], modelDimensions);\r\n\r\n        let curr_section = modelDimensions_merged.length-1\r\n        for (let j = 0; j < subsections.length; j++){\r\n            for (let k = 0; k < modelDimensions[modelDimensions.length - j - 1].length; k++){\r\n                subsections[j].push(curr_section-k)\r\n            }\r\n            curr_section -= modelDimensions[modelDimensions.length - j - 1].length\r\n        }\r\n\r\n        self.maxWidth = max_width \r\n        self.modelDimensions = modelDimensions_merged\r\n        self.subsections = subsections\r\n        self.tot_rows_per_section = tot_rows_per_section\r\n        return modelDimensions_merged\r\n    },\r\n    removeDuplicatePairs(arr){\r\n        for (let i = arr.length-1; i-3 >= 0; i-=1){\r\n            if (arr[i] == arr[i-2] && arr[i-1] == arr[i-3]){\r\n                arr.splice(i-1,2)\r\n            }\r\n        }\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_d1 = self.d1 * scale_factor\r\n        const s_d1_h = (self.d1_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d2 = self.d2 * scale_factor\r\n        const s_d2_h = (self.d2_h/100) * self.scale_h - s_dtop_h\r\n    \r\n        const s_d3 = self.d3 * scale_factor\r\n        const s_d3_h = (self.d3_h/100) * self.scale_h - s_dtop_h\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_d1_h,s_d1/2,s_d2_h,s_d2/2, s_d3_h,s_d3/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.4\r\n\r\n        let numOfSegmentsArr = [6,6,6,6]\r\n    \r\n        if (broken){\r\n            let subsections_idx = self.subsections.length-1\r\n            for (let i = self.merged_sections.length-1; i >= 0; i--){\r\n                if (self.merged_sections[i] == i){ // unmerged section\r\n                    const num_subsections = self.subsections[subsections_idx].length\r\n                    numOfSegmentsArr[i] = num_subsections < 6 ? Math.max(6, 2* num_subsections) : num_subsections\r\n                    subsections_idx -= 1\r\n                } \r\n            }\r\n        }\r\n\r\n        let points = []\r\n        const new_pts = getCurvePointsNew(myPoints, tension, numOfSegmentsArr)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points \r\n        // broken points is for the result vase - to display the pattern\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n            let section_num = 0\r\n            // dividing the points array into the sections of the vase (number of sections starts off as 4 but some may be merged.)\r\n            // new_pts goes from bottom to top, ie. first section = bottom section\r\n            // sections can only be merged up\r\n            while (hi+3 < new_pts.length){\r\n                if (new_pts[hi] === new_pts[hi+2] && new_pts[hi+1] === new_pts[hi+3]){\r\n                    // only make a slice if the section is unmerged \r\n                    if (self.merged_sections[section_num] == section_num){\r\n                        const temp = new_pts.slice(lo,hi+2)\r\n                        section_pts.push(temp)\r\n                        lo = hi + 2\r\n                    }\r\n                    section_num += 1\r\n                }\r\n                hi += 2\r\n            }\r\n            section_pts.push(new_pts.slice(lo,new_pts.length))\r\n\r\n            // for each section, divide the section's points into the corresponding number of drawingSections in that section, set by the algorithm.\r\n            for (let i=0; i<section_pts.length; i+=1){ //section_pts.length = 4\r\n                if (self.subsections[i].length == 1){\r\n                    broken_pts.push(section_pts[i])\r\n                    continue\r\n                }\r\n                // else\r\n                let curr_idx = 0\r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    // self.subsections[i][j][1] = corresponding num of rows section num in modelDimensions\r\n                    // self.tot_rows_per_section[i] = num rows in this ^ section of modelDimensions \r\n                    // section_pts[i]/2 - number of data pts we have; /2 because its (y,x) pairs lined up \r\n                    let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                    slice_size = slice_size * 2\r\n                    const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                    curr_idx += slice_size\r\n                    broken_pts.push(slice)\r\n                }\r\n            }\r\n            // removing duplicate pairs in the unmerged sections \r\n            for (let i=0; i < broken_pts.length; i++){\r\n                self.removeDuplicatePairs(broken_pts[i])\r\n            }\r\n            // converting to three.js vectors\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push(new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default VaseStore;\r\n\r\nconst VaseContext = React.createContext();\r\n\r\nexport const VaseProvider = ({ children, store }) => {\r\n    return (\r\n      <VaseContext.Provider value={store}>{children}</VaseContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useVaseStore = () => React.useContext(VaseContext);\r\n\r\nexport const withVaseStore = (Component) => (props) => {\r\n    return <Component {...props} store={useVaseStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\n\r\nconst PxModel = types\r\n  .model(\"PxModel\", {\r\n    pixelColor: \"#FFFFFF\", \r\n    oldColor: \"#FFFFFE\", \r\n    canChangeColor: true, \r\n    inverted: false\r\n  })\r\n  .actions(self => ({\r\n    setPixelColor(col){\r\n      self.pixelColor = col\r\n    }, \r\n    setOldColor(col){\r\n      self.oldColor = col\r\n    }, \r\n    setCanChangeColor(val){\r\n      self.canChangeColor = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default PxModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport PxModel from './PxModel'\r\n\r\nconst RowModel = types\r\n  .model(\"RowModel\", {\r\n    rowData: types.optional(types.array(PxModel), []),\r\n    offset: 0, \r\n    width: 0, \r\n    displayRowNum: 0,\r\n    preColor: \"#FFFFFF\"\r\n  })\r\n  .actions(self => ({\r\n    addPx(){\r\n      self.rowData.push(PxModel.create({oldColor: self.preColor, pixelColor: self.preColor}))\r\n    },\r\n    setOffset(val = 10.5){\r\n      self.offset = val\r\n    }, \r\n    setWidth(val){\r\n      self.width = val\r\n    }, \r\n    setDisplayRowNum(val){\r\n      self.displayRowNum = val\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default RowModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport RowModel from './RowModel'\r\n\r\nconst DrawingSectionModel = types\r\n  .model(\"DrawingSectionModel\", {\r\n    drawingSectionData: types.optional(types.array(RowModel), []),\r\n    width: 0, \r\n    height: 0, \r\n    increasing: false, \r\n    preColor: \"#FFFFFF\"\r\n  })\r\n  .actions(self => ({\r\n    addRow(){\r\n      self.drawingSectionData.push(RowModel.create({preColor: self.preColor}))\r\n    }, \r\n    setWidthHeight(w, h){\r\n      self.width = w\r\n      self.height = h \r\n    }, \r\n    setIncreasing(val){\r\n      self.increasing = val\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default DrawingSectionModel;\r\n","import { types } from \"mobx-state-tree\";\r\nimport html2canvas from 'html2canvas';\r\nimport DrawingSectionModel from './DrawingSectionModel'\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst fileType = {\r\n  PNG: 'image/png',\r\n  JPEG: 'image/jpeg',\r\n  PDF: 'application/pdf'\r\n};\r\n\r\nconst DEFAULT_PNG = {\r\n  fileName: '3do-diagram.png',\r\n  type: fileType.PNG,\r\n  html2CanvasOptions: {}\r\n};\r\n\r\nconst saveAs = (uri, filename) => {\r\n  const link = document.createElement('a');\r\n\r\n  if (typeof link.download === 'string') {\r\n      link.href = uri;\r\n      link.download = filename;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n  } else {\r\n      window.open(uri);\r\n  }\r\n};\r\n\r\nconst ColoringForm = types\r\n  .model(\"ColoringForm\", {\r\n    selectedColor: \"#FF0000\",\r\n    defaultColor: \"#FFFFFF\",\r\n    oldDefault: \"#FFFFFE\",\r\n    preload: false,\r\n    clear: false,\r\n    mode: false,\r\n    size: 32,\r\n    canvasPic: \"\",\r\n    appendPic: \"\",\r\n    model: \"swan\", // vase, swan, fig, basket\r\n    inverted: false,\r\n    swan_two_wings: false,\r\n    coloringFormData: types.optional(types.array(DrawingSectionModel), []), \r\n    counter: types.optional(types.array(types.array(types.string)), []),\r\n    totPcs: 0, \r\n    doneDefualt: false,\r\n    msg: \"error\", \r\n    resultMsg: \"error\"\r\n  })\r\n  .actions(self => ({\r\n    storePic(picData){\r\n      self.canvasPic = picData\r\n      return\r\n    }, \r\n    storeAppendPic(picData){\r\n      self.appendPic = picData\r\n      return\r\n    }\r\n  }))\r\n  .actions(self => ({ \r\n    setColor(col){\r\n      self.clear = false\r\n      self.selectedColor = col\r\n    },\r\n    setModel(model, swan_one_wing){\r\n      self.model = model\r\n      if (model === \"swan\"){\r\n        self.swan_two_wings = swan_one_wing\r\n      }\r\n    },\r\n    setMsg(result=false, msg=\"valid\"){\r\n      if (!result) self.msg = msg\r\n      else self.resultMsg = msg\r\n    },\r\n    preloadDefaultColor(col){\r\n      self.defaultColor = col\r\n      self.oldDefault = col\r\n    },\r\n    setDefaultColor(col){\r\n      self.doneDefualt = false\r\n      self.clear = false\r\n      self.oldDefault = self.defaultColor\r\n      self.defaultColor = col\r\n    },\r\n    clearAll(){\r\n      self.doneDefualt = false\r\n      if (self.defaultColor === \"#FFFFFF\"){\r\n        self.oldDefault = \"#FFFFFE\" \r\n        self.defaultColor = \"#FFFFFE\"\r\n      }\r\n      else {\r\n        self.oldDefault = \"#FFFFFF\" \r\n        self.defaultColor = \"#FFFFFF\"\r\n      }\r\n      self.clear = true\r\n    }, \r\n    unsetClear(){\r\n      self.clear = false\r\n    },\r\n    setMode(val){\r\n      self.clear = false\r\n      self.mode = val\r\n    }, \r\n    setInverted(val=true){\r\n      self.inverted = val\r\n    },\r\n    setPreload(val=true){\r\n      self.preload = val\r\n    },\r\n    exportComponent (node, appendage=false) {\r\n      if(!node.current) {\r\n          throw new Error(\"'node' must be a RefObject\")\r\n      }\r\n      const element = ReactDOM.findDOMNode(node.current);\r\n      return html2canvas(element, {\r\n          scrollY: -window.scrollY,\r\n          useCORS: true,\r\n          // ...html2CanvasOptions\r\n          imageTimeout: 0,\r\n          backgroundColor: \"#FFFFFF\"\r\n      }).then(canvas => {\r\n          // self.canvasPic = canvas.toDataURL(DEFAULT_PNG, 0.1)\r\n          appendage? self.storeAppendPic(canvas.toDataURL(DEFAULT_PNG, 0.1)): self.storePic(canvas.toDataURL(DEFAULT_PNG, 0.1))\r\n      });\r\n    },\r\n    saveDiagram () {\r\n      saveAs(self.canvasPic, \"3do-diagram\")\r\n      saveAs(self.appendPic, \"3do-diagram-appendages\")\r\n      self.resultMsg = \"error\"\r\n    },\r\n    addDrawingSection(){\r\n      self.coloringFormData.push(DrawingSectionModel.create({preColor: self.defaultColor}))\r\n    }, \r\n    addPc(){\r\n      self.totPcs += 1 \r\n    },\r\n    clearColoringForm(){\r\n      self.coloringFormData = []\r\n      self.counter = []\r\n      self.totPcs = 0\r\n      self.selectedColor = \"#FF0000\"\r\n      self.defaultColor = \"#FFFFFF\"\r\n      self.oldDefault = \"#FFFFFE\"\r\n      self.mode = false\r\n      self.doneDefualt = false\r\n      self.canvasPic = \"\"\r\n      self.appendPic = \"\"\r\n      self.inverted = false\r\n      self.swan_two_wings = false\r\n      self.preload = false\r\n      // self.maxWidth = ??\r\n      // self.size = ??\r\n      // self.model = ??\r\n      // error messages dealt with seperately\r\n    },\r\n    updateCounter(oldCol, newCol){\r\n      let done = false\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        const curr_val = parseInt(self.counter[i][1])\r\n        if (self.counter[i][0] === oldCol){\r\n          if (curr_val <= 1){\r\n            self.counter.splice(i,1)\r\n          }\r\n          else self.counter[i][1] = String(curr_val - 1)\r\n        }\r\n      }\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        const curr_val = parseInt(self.counter[i][1])\r\n        if (self.counter[i][0] === newCol){\r\n          done = true\r\n          self.counter[i][1] = String(curr_val + 1)\r\n        }\r\n      }\r\n      if (!done) {\r\n        self.counter.push([newCol, \"1\"])\r\n      }\r\n    }, \r\n    updateCounterDefault(init=false, clear=false){\r\n      if (self.doneDefualt) return\r\n      if (init) {\r\n        self.counter =[[self.defaultColor, String(self.totPcs)]]\r\n        if (clear) self.doneDefualt = true\r\n        return\r\n      }\r\n      let done = false\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        if (self.counter[i][0] === self.oldDefault){\r\n          self.counter[i][0] = self.defaultColor\r\n          done = true\r\n        }\r\n      }\r\n      self.doneDefualt = true\r\n      if (!done) return\r\n      let count = 0 \r\n      let idx = 0\r\n      for (let i = 0; i < self.counter.length; i++){\r\n        if (self.counter[i][0] === self.defaultColor){\r\n          count += 1 \r\n          if (count === 1){\r\n            idx = i \r\n          }\r\n          else if (count === 2){ // merging by adding both to 1st encounter and deleting 2nd one\r\n            self.counter[idx][1] = String(parseInt(self.counter[idx][1]) + parseInt(self.counter[i][1]))\r\n            self.counter.splice(i,1)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default ColoringForm;\r\n","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsBasket(_pts, tension, numOfSegmentsArr) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        let numOfSegments = numOfSegmentsArr[(i/2)-1]\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst BasketStore = types\r\n  .model(\"Basket\", {\r\n    cm: true,\r\n    height: 20, \r\n    diameter: 34,\r\n    dtop: 20, \r\n    dbottom: 20,\r\n    top_rim: true, \r\n    bottom_rim: true, \r\n    lid: true, \r\n    top_handle: true, \r\n    side_handles: false, \r\n    scale_h: 15,\r\n    flat_bottom: false, \r\n    default_color: \"#FFFFFF\",\r\n    upsize: false,\r\n    tot_rows_per_section: types.optional(types.array(types.number), []), // bottom to top \r\n    subsections: types.optional(types.array(types.array(types.number)),[]), \r\n    // basket has 1-2 sections, each may be made of 1+ drawing sections // bottom to top\r\n    // it's numbered like that so you can refer to the corresponding section in modelDimensions\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), []),\r\n    maxWidth: 0,\r\n    // unused, only for consistency: \r\n    arms: false, \r\n    ears: \"\" \r\n  })\r\n  .actions(self => ({\r\n    update_top_rim(top_rim){\r\n        self.top_rim = top_rim\r\n    },\r\n    update_bottom_rim(bottom_rim){\r\n        self.bottom_rim = bottom_rim\r\n    },\r\n    update_top_handle(top_handle){\r\n        self.top_handle = top_handle\r\n    },\r\n    update_side_handles(side_handles){\r\n        self.side_handles = side_handles\r\n    },\r\n    update_lid(lid){\r\n        self.lid = lid \r\n    },\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop * conv)\r\n        self.diameter = Math.round(self.diameter * conv)\r\n        self.dbottom = Math.round(self.dbottom * conv)\r\n        self.height = Math.round(self.height * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.dtop = Math.round(self.dtop / conv)\r\n        self.diameter = Math.round(self.diameter / conv)\r\n        self.dbottom = Math.round(self.dbottom / conv)\r\n        self.height = Math.round(self.height / conv)\r\n        self.cm = false\r\n    },\r\n    setSize(){\r\n        const conv = 2.54\r\n        const dbottom_cm = self.cm ? self.dbottom : self.dbottom * conv\r\n        const diameter_cm = self.cm ? self.diameter : self.diameter * conv\r\n        const dtop_cm = self.cm ? self.dtop : self.dtop * conv\r\n        const height_cm = self.cm ? self.height : self.height * conv\r\n        const average_diameter_cm = (dbottom_cm + diameter_cm + dtop_cm)/3\r\n        if (average_diameter_cm > 30 || height_cm > 70){\r\n            self.upsize = true\r\n        }\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_height(height){\r\n        self.height = height\r\n    }, \r\n    update_diameter(diameter){\r\n        self.diameter = diameter\r\n    }, \r\n    update_dtop(dtop){\r\n        self.dtop = dtop\r\n    }, \r\n    update_dbottom(dbottom){\r\n        self.dbottom = dbottom\r\n    }, \r\n    update_flat_bottom(val) {\r\n        self.flat_bottom = val\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    cmToPcs(cm, height=false){\r\n        const height_factor = self.upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = self.upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            let height_used = self.height\r\n            if (!self.cm) height_used = self.height * 2.54\r\n            return Math.round(((cm/100) * height_used)/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    },\r\n    getDimensions() {\r\n        // INPUTS \r\n        // dtop: 20,\r\n        // diameter: 30,\r\n        // dbottom: 20, \r\n        // height: 50,\r\n\r\n        // OUTPUTS\r\n        // tot_rows_per_section: types.optional(types.array(types.number), [15,19,10,10]), // bottom to top \r\n        // subsections: types.optional(types.array(types.array(types.number)),[[5,4],[3,2],[1],[0]]), // bottom to top\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n\r\n        // max allowed decrease rate: -1 per 5 pcs\r\n        // max increase rate: +1 per 1 pc \r\n        // min 3 rows per section\r\n\r\n        let zero_diff = [];\r\n        let modelDimensions = []\r\n        let subsections = [[],[]]\r\n        let tot_rows_per_section = [0,0]\r\n\r\n        let dtop_used = self.dtop\r\n        let diameter_used = self.diameter\r\n        let dbottom_used = self.dbottom\r\n        let height_used = self.height\r\n\r\n        // convert from in to cm first \r\n        if (!self.cm){\r\n            const conv = 2.54\r\n            dtop_used = Math.round(self.dtop * conv)\r\n            diameter_used = Math.round(self.diameter * conv)\r\n            dbottom_used = Math.round(self.dbottom * conv)\r\n        } \r\n\r\n        const dbottom_h = 0\r\n        const diameter_h = self.cmToPcs(50, true) // units = pieces\r\n        const dtop_h = self.cmToPcs(100, true)\r\n        const heights = [dbottom_h, diameter_h, dtop_h]\r\n\r\n        const ctop = self.cmToPcs(Math.PI * dtop_used) // units = pieces\r\n        const circ = self.cmToPcs(Math.PI * diameter_used)\r\n        const cbottom = self.cmToPcs(Math.PI * dbottom_used)\r\n        const widths = [cbottom, circ, ctop]\r\n\r\n        let max_width = widths[0]\r\n\r\n        // getting from diameter to diameter in 'height' pieces\r\n\r\n        for (let i = 0; i < widths.length-1; i++){\r\n            const min_height = 3\r\n            let min_height_needed = min_height\r\n            let diff = widths[i+1]-widths[i]\r\n            let height_diff = heights[i+1] - heights[i]\r\n\r\n            let temp_dbottom = widths[i]\r\n            let curr_section = []\r\n            \r\n            // increasing\r\n            if (diff > 0){\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0){\r\n                    const add_to_this_row = Math.floor(temp_dbottom/min_height)\r\n                    const actual_add = Math.min(diff, add_to_this_row)\r\n                    diff -= actual_add \r\n                    temp_dbottom += actual_add\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom, min_height])\r\n                }\r\n            }\r\n            //  decreasing\r\n            else if (diff < 0){\r\n                diff = diff * -1\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0) {\r\n                    const sub_from_this_row = Math.floor(temp_dbottom/5)\r\n                    const actual_sub = Math.min(diff, sub_from_this_row)\r\n                    diff -= actual_sub\r\n                    temp_dbottom -= actual_sub\r\n                    max_width = Math.max(max_width, temp_dbottom)\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom,min_height])\r\n                }            \r\n            }\r\n            // straight\r\n            else if (diff == 0){\r\n                min_height_needed = height_diff\r\n                curr_section.push([temp_dbottom, height_diff])\r\n                zero_diff.push(widths.length-1-1-i)\r\n            }\r\n            let excess_height = height_diff-min_height_needed\r\n            while (excess_height>0){\r\n                curr_section[excess_height%curr_section.length][1] += 1\r\n                excess_height -= 1\r\n            }\r\n            tot_rows_per_section[i] = Math.max(height_diff, min_height_needed)\r\n            modelDimensions.unshift(curr_section)    \r\n        }\r\n        for(let i = 0; i < zero_diff.length; i++){ // zero_diff is sorted in ascending order\r\n            // merge right(lower) into left(upper) so that the idx's in zero_diff are still accurate\r\n            // modelDimensions is top to bottom so right = lower and left = upper\r\n            const idx = zero_diff[i] // idx of modelDimensions\r\n            const conj_idx = tot_rows_per_section.length-1-idx // idx of tot_rows_per_section\r\n            if (zero_diff[i] > 0){\r\n                if(modelDimensions[idx-1].length > 1) { // partial merge, no section deletion\r\n                    const next_sec_last_arr = modelDimensions[idx-1].pop()\r\n                    const next_sec_rows = next_sec_last_arr[1]\r\n                    modelDimensions[idx][0][1] += next_sec_rows // the diff for this section is 0 so it only has one arr in it\r\n                    tot_rows_per_section[conj_idx] += next_sec_rows\r\n                    tot_rows_per_section[conj_idx+1] -= next_sec_rows\r\n                }\r\n                else { // full merge, section deletion, this occurs when 2 sections have the exact same start and end diameters.\r\n                    const curr_sec_last_arr = modelDimensions[idx].pop()\r\n                    const curr_sec_rows = curr_sec_last_arr[1]\r\n                    modelDimensions[idx-1][0][1] += curr_sec_rows\r\n                    modelDimensions.splice(idx,1) // deleting the whole section, the right(lower) section\r\n                    tot_rows_per_section[conj_idx] -= curr_sec_rows \r\n                    tot_rows_per_section[conj_idx+1] += curr_sec_rows\r\n                    tot_rows_per_section.splice(conj_idx, 1)\r\n                    subsections.pop()\r\n                }\r\n            }\r\n        }\r\n        var modelDimensions_merged = [].concat.apply([], modelDimensions);\r\n\r\n        let curr_section = modelDimensions_merged.length-1\r\n        for (let j = 0; j < subsections.length; j++){\r\n            for (let k = 0; k < modelDimensions[modelDimensions.length - j - 1].length; k++){\r\n                subsections[j].push(curr_section-k)\r\n            }\r\n            curr_section -= modelDimensions[modelDimensions.length - j - 1].length\r\n        }\r\n\r\n        self.maxWidth = max_width\r\n        self.modelDimensions = modelDimensions_merged\r\n        self.subsections = subsections\r\n        self.tot_rows_per_section = tot_rows_per_section\r\n        return modelDimensions_merged\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    updateCurvedPts(broken=false){\r\n        const s_dtop_h = self.scale_h/2\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n        const scale_factor = self.scale_h/self.height\r\n    \r\n        const s_dtop = self.dtop * scale_factor\r\n        const s_dbottom = self.dbottom * scale_factor\r\n    \r\n        const s_diameter = self.diameter * scale_factor\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dbottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop/2]; \r\n        var tension = 0.8\r\n        var numOfSegmentsArr = [6,6]\r\n\r\n        if (broken){\r\n            if (self.subsections.length == 2){ // unmerged\r\n                const num_subsections_top = self.subsections[1].length\r\n                const num_subsections_bot = self.subsections[0].length\r\n                numOfSegmentsArr = [num_subsections_bot*3, num_subsections_top*3]\r\n            } else {\r\n                numOfSegmentsArr = [1,1]\r\n            }\r\n        }\r\n\r\n        let points = []\r\n        const new_pts = getCurvePointsBasket(myPoints, tension, numOfSegmentsArr)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        if (!broken) return points\r\n        else{\r\n            let section_pts = []\r\n            let broken_pts = []\r\n            let broken_pts_three = []\r\n            let lo = 0 \r\n            let hi = 2\r\n\r\n            if (self.subsections.length == 2){ // unmerged\r\n                while (hi+3 < new_pts.length){\r\n                    if (new_pts[hi] == new_pts[hi+2] && new_pts[hi+1] == new_pts[hi+3]){\r\n                        const temp = new_pts.slice(lo,hi+2)\r\n                        section_pts.push(temp)\r\n                        lo = hi + 2\r\n                    }\r\n                    hi += 2\r\n                }\r\n                section_pts.push(new_pts.slice(lo,new_pts.length))\r\n            } else {\r\n                new_pts.splice(new_pts.length/2, 2)\r\n                section_pts.push(new_pts)\r\n            }\r\n\r\n            for (let i=0; i<section_pts.length; i+=1){ //section_pts.length = 1 or 2 \r\n                if (self.subsections[i].length == 1){\r\n                    broken_pts.push(section_pts[i])\r\n                    continue\r\n                }\r\n                // else\r\n                let curr_idx = 0 \r\n                for (let j=0; j<self.subsections[i].length; j+=1){\r\n                    let slice_size = Math.round((self.modelDimensions[self.subsections[i][j]][1] / self.tot_rows_per_section[i]) * (section_pts[i].length/2))\r\n                    slice_size = slice_size * 2\r\n                    const slice = section_pts[i].slice(curr_idx,curr_idx + slice_size+2)\r\n                    curr_idx += slice_size\r\n                    broken_pts.push(slice)\r\n                } \r\n            }\r\n            // converting to three.js vectors\r\n            for(let j=0; j<broken_pts.length; j+= 1){\r\n                let temp = []\r\n                for(let k = 0; k < broken_pts[j].length; k += 2){\r\n                    const h = broken_pts[j][k]\r\n                    const r = broken_pts[j][k+1]\r\n                    temp.push( new THREE.Vector2(r, h));\r\n                }\r\n                broken_pts_three.push(temp)\r\n            }\r\n\r\n            return broken_pts_three\r\n        }\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default BasketStore;\r\n\r\nconst BasketContext = React.createContext();\r\n\r\nexport const BasketProvider = ({ children, store }) => {\r\n    return (\r\n      <BasketContext.Provider value={store}>{children}</BasketContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useBasketStore = () => React.useContext(BasketContext);\r\n\r\nexport const withBasketStore = (Component) => (props) => {\r\n    return <Component {...props} store={useBasketStore()} />;\r\n  };","import {types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsFigurine(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst FigurineStore = types\r\n  .model(\"Figurine\", {\r\n    maxWidth: 0,\r\n    cm: true,\r\n    diameter: 13,\r\n    arms: true, \r\n    ears: \"bear\", // bear, bunny, cat, sphere\r\n    body_scale: 0.7,\r\n    body_height: 0.35,\r\n    default_color: \"#FFFFFF\",\r\n    textures: types.optional(types.array(types.string), []), // first idx = top, last idx = bottom of vase\r\n    tot_rows_head: 0,\r\n    upsize: false, \r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[30,12],[40,11],[53,10],[40,10]]), // last = body\r\n    // unused, only for consistency: \r\n    flat_bottom: false, \r\n    top_rim: false, \r\n    bottom_rim: false, \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    update_ears(val){\r\n        self.ears = val\r\n    },\r\n    update_arms(val){\r\n        self.arms = val\r\n    },\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter / conv)\r\n        self.cm = false\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    cmToPcs(cm, height=false){\r\n        const height_factor = self.upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = self.upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(cm/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    },\r\n    setSize(){\r\n        const conv = 2.54\r\n        const diameter_cm = self.cm ? self.diameter : self.diameter * conv\r\n        if (diameter_cm > 25){\r\n            self.upsize = true\r\n        }\r\n    },\r\n    getDimensions() {\r\n        // INPUTS \r\n        // diameter: 30,\r\n\r\n        // OUTPUTS\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10]]\r\n\r\n        // convert from in to cm first \r\n        let diameter = self.diameter * self.body_scale\r\n\r\n        if (!self.cm) {\r\n            const conv = 2.54\r\n            diameter = Math.round(self.diameter * self.body_scale * conv)\r\n        }\r\n\r\n        // body \r\n        const height_input = diameter\r\n        const circ_pcs = self.cmToPcs(Math.PI * diameter)\r\n        const height = self.cmToPcs(height_input, true)\r\n        const body_dimensions = [circ_pcs, height]\r\n\r\n        // head\r\n        const theta_len = 0.8\r\n        const head_start_theta_len = 0.85\r\n        const goal_rad = (diameter * self.body_scale)/2 // units: cm\r\n        const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n        const head_circ = self.cmToPcs(Math.PI * head_rad * 2)\r\n        const head_start_rad = head_rad * Math.sin((1-head_start_theta_len) * Math.PI)\r\n        const head_start_circ = self.cmToPcs(Math.PI * head_start_rad * 2)\r\n\r\n        const widths = [head_start_circ, head_circ, Math.min(head_start_circ, 4)] // units: pcs, 4 is the absolute min\r\n        const heights = [0, self.cmToPcs(head_rad), self.cmToPcs(2*head_rad, true)]\r\n        let modelDimensions = self.getDimensionsHead(widths, heights) // call function here using this as input\r\n\r\n        // together \r\n        self.maxWidth = self.cmToPcs(head_rad)\r\n        modelDimensions.push(body_dimensions)\r\n        self.modelDimensions = modelDimensions\r\n        console.log(modelDimensions)\r\n        return modelDimensions\r\n    },\r\n    getDimensionsHead(widths, heights) {\r\n        // INPUTS (cm)\r\n        // dhead_start\r\n        // dhead\r\n        // dhead_end\r\n\r\n        // OUTPUTS\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10], [53, 10],[40,10],[28,9], [16,10], [24,5]]), // top to bottom\r\n\r\n        // max allowed decrease rate: -1 per 5 pcs\r\n        // max increase rate: +1 per 1 pc \r\n        // min 3 rows per section\r\n        self.tot_rows_head = 0\r\n        let modelDimensions = []\r\n        // getting from diameter to diameter in 'height' pieces\r\n\r\n        for (let i = 0; i < widths.length-1; i++){\r\n            const min_height = 3\r\n            let min_height_needed = min_height\r\n            let diff = widths[i+1]-widths[i]\r\n            let height_diff = heights[i+1] - heights[i]\r\n\r\n            let temp_dbottom = widths[i]\r\n            let curr_section = []\r\n            \r\n            // increasing\r\n            if (diff > 0){\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0){\r\n                    const add_to_this_row = Math.floor(temp_dbottom/min_height)\r\n                    const actual_add = Math.min(diff, add_to_this_row)\r\n                    diff -= actual_add \r\n                    temp_dbottom += actual_add\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom, min_height])\r\n                }\r\n            }\r\n            // decreasing\r\n            else if (diff < 0){\r\n                diff = diff * -1\r\n                curr_section.push([temp_dbottom,min_height])\r\n                while (diff > 0) {\r\n                    const sub_from_this_row = Math.floor(temp_dbottom/4)\r\n                    const actual_sub = Math.min(diff, sub_from_this_row)\r\n                    diff -= actual_sub\r\n                    temp_dbottom -= actual_sub\r\n                    if (diff == 0 && i < widths.length-2) break\r\n                    min_height_needed += min_height\r\n                    curr_section.unshift([temp_dbottom,min_height])\r\n                }            \r\n            }\r\n            self.tot_rows_head += Math.max(height_diff, min_height_needed)\r\n            let excess_height = height_diff-min_height_needed\r\n            while (excess_height>0){\r\n                curr_section[excess_height%curr_section.length][1] += 1\r\n                excess_height -= 1\r\n            }\r\n            modelDimensions.unshift(curr_section)    \r\n        }\r\n\r\n        var modelDimensions_merged = [].concat.apply([], modelDimensions);\r\n\r\n        return modelDimensions_merged\r\n    },\r\n    storePic(picData){\r\n        self.textures.push(picData)\r\n    },\r\n    clearTextures(){\r\n        self.textures = []\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    getBrokenHeadPts(tot_theta_len){\r\n        let theta_start = 0 \r\n        let theta_len = 0\r\n        let divisions = []\r\n        for (let i = 0; i < self.modelDimensions.length-1; i++){\r\n            const num_rows = self.modelDimensions[i][1]\r\n            const ratio = num_rows/self.tot_rows_head\r\n            console.log(tot_theta_len)\r\n            console.log(self.tot_rows_head)\r\n            theta_len = ratio * tot_theta_len\r\n            divisions.push([theta_start, theta_len])\r\n            theta_start += theta_len\r\n        }\r\n        console.log(divisions)\r\n        return divisions\r\n    },\r\n    updateCurvedPts(){\r\n        let display_diameter = self.diameter\r\n        if (!self.cm){\r\n            display_diameter = Math.round(display_diameter * 2.54)\r\n        }\r\n        const s_dtop_h = display_diameter * self.body_height\r\n        const s_dbottom_h = -1 * s_dtop_h\r\n\r\n        const s_dtop_bottom = display_diameter * self.body_scale\r\n\r\n        const s_diameter = display_diameter\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_dtop_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_dtop_bottom/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsFigurine(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    },\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default FigurineStore;\r\n\r\nconst FigurineContext = React.createContext();\r\n\r\nexport const FigurineProvider = ({ children, store }) => {\r\n    return (\r\n      <FigurineContext.Provider value={store}>{children}</FigurineContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useFigurineStore = () => React.useContext(FigurineContext);\r\n\r\nexport const withFigurineStore = (Component) => (props) => {\r\n    return <Component {...props} store={useFigurineStore()} />;\r\n  };","import { types } from \"mobx-state-tree\";\r\nimport * as THREE from \"three\";\r\nimport React from \"react\"\r\n\r\nfunction getCurvePointsSwan(_pts, tension, numOfSegments) {\r\n\r\n    var res = [],    // clone array\r\n        x, y,           // our x,y coords\r\n        t1x, t2x, t1y, t2y, // tension vectors\r\n        c1, c2, c3, c4,     // cardinal points\r\n        st, t, i;       // steps based on num. of segments\r\n\r\n    const first_x = _pts[0]\r\n    const first_y = _pts[1]\r\n    const last_x = _pts[4]\r\n    const last_y = _pts[5]\r\n\r\n    _pts.unshift(first_y)\r\n    _pts.unshift(first_x)\r\n    _pts.push(last_x)\r\n    _pts.push(last_y)\r\n\r\n    for (i=2; i < (_pts.length - 4); i+=2) {\r\n        for (t=0; t <= numOfSegments; t++) {\r\n\r\n            // calc tension vectors\r\n            t1x = (_pts[i+2] - _pts[i-2]) * tension;\r\n            t2x = (_pts[i+4] - _pts[i]) * tension;\r\n\r\n            t1y = (_pts[i+3] - _pts[i-1]) * tension;\r\n            t2y = (_pts[i+5] - _pts[i+1]) * tension;\r\n\r\n            // calc step\r\n            st = t / numOfSegments;\r\n\r\n            // calc cardinals\r\n            c1 =   2 * Math.pow(st, 3)  - 3 * Math.pow(st, 2) + 1; \r\n            c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2); \r\n            c3 =       Math.pow(st, 3)  - 2 * Math.pow(st, 2) + st; \r\n            c4 =       Math.pow(st, 3)  -     Math.pow(st, 2);\r\n\r\n            // calc x and y cords with common control vectors\r\n            x = c1 * _pts[i]    + c2 * _pts[i+2] + c3 * t1x + c4 * t2x;\r\n            y = c1 * _pts[i+1]  + c2 * _pts[i+3] + c3 * t1y + c4 * t2y;\r\n\r\n            //store points in array\r\n            res.push(x);\r\n            res.push(Math.max(0.5, y));\r\n\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nconst SwanStore = types\r\n  .model(\"Swan\", {\r\n    maxWidth: 0,\r\n    cm: true,\r\n    diameter: 16,\r\n    body_height: 0.35,\r\n    top_scale: 1,\r\n    bottom_scale:0.6, \r\n    height_scale: 0.4,\r\n    default_color: \"#FFFFFF\", \r\n    wings: true, // true = two wings\r\n    bottom_rim: true,\r\n    texture: \"\", \r\n    upsize: false,\r\n    modelDimensions: types.optional(types.array(types.array(types.number)), [[8, 2]]), // top to bottom, only one element\r\n    // unused, only for consistency: \r\n    flat_bottom: false,\r\n    top_rim: false, \r\n    arms: false, \r\n    ears: \"\", \r\n    lid: false, \r\n    top_handle: false, \r\n    side_handles: false, \r\n  })\r\n  .actions(self => ({\r\n    in_to_cm(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter * conv)\r\n        self.cm = true\r\n    },\r\n    cm_to_in(){\r\n        const conv = 2.54\r\n        self.diameter = Math.round(self.diameter / conv)\r\n        self.cm = false\r\n    },\r\n    update_units(units){\r\n        if (self.cm == units) return \r\n        // changing from in to cm\r\n        if (self.cm == false && units == true){\r\n            self.in_to_cm()\r\n        }\r\n        // changing from cm to in\r\n        else{\r\n            self.cm_to_in()\r\n        }\r\n        self.cm = units\r\n    },\r\n    update_wings(val){\r\n        self.wings = val\r\n    },\r\n    update_bottom_rim(val){\r\n        self.bottom_rim = val\r\n    },\r\n    update_diameter(d){\r\n        self.diameter = d\r\n    }, \r\n    storePic(picData){\r\n        self.texture = picData\r\n    },\r\n    clearTextures(){\r\n        self.texture = \"\"\r\n    },\r\n    setDefaultColor(color){\r\n        self.default_color = color\r\n    },\r\n    cmToPcs(cm, height=false){\r\n        const height_factor = self.upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = self.upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(cm/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    },\r\n    setSize(){\r\n        const conv = 2.54\r\n        const diameter_cm = self.cm ? self.diameter : self.diameter * conv\r\n        if (diameter_cm > 25){\r\n            self.upsize = true\r\n        }\r\n    },\r\n    getDimensions() {\r\n        // INPUTS \r\n        // diameter: 30,\r\n\r\n        // OUTPUTS\r\n        // modelDimensions: types.optional(types.array(types.array(types.number)), [[43, 10]]\r\n\r\n        // convert from in to cm first \r\n        let diameter = self.diameter * self.bottom_scale \r\n\r\n        if (!self.cm) {\r\n            const conv = 2.54\r\n            diameter = Math.round(self.diameter * self.bottom_scale * conv)\r\n        }\r\n\r\n        const height_input = diameter\r\n\r\n        const circ_pcs = self.cmToPcs(Math.PI * diameter)\r\n        const height = self.cmToPcs(height_input, true)\r\n        const modelDimensions = [[circ_pcs, height]]\r\n        \r\n        self.maxWidth = circ_pcs\r\n        self.modelDimensions = modelDimensions\r\n        return modelDimensions\r\n    },\r\n    swanBodyPts(){\r\n        let display_diameter = self.diameter\r\n        if (!self.cm){\r\n            display_diameter = Math.round(display_diameter * 2.54)\r\n        }\r\n        const s_dtop_h = display_diameter * self.height_scale\r\n        const s_dbottom_h = -1 * s_dtop_h * 0.8\r\n\r\n        const s_bottom = display_diameter * self.bottom_scale\r\n        const s_top = display_diameter * self.top_scale\r\n\r\n        const s_diameter = display_diameter\r\n        const s_diameter_h = 0\r\n\r\n        var myPoints = [s_dbottom_h,s_bottom/2, s_diameter_h,s_diameter/2, s_dtop_h,s_top/2]; \r\n        var tension = 0.65\r\n        var numOfSegments = 10\r\n        let points = [];\r\n        const new_pts = getCurvePointsSwan(myPoints, tension, numOfSegments)\r\n        for (let i=0; i<new_pts.length; i+=2){\r\n            const h = new_pts[i]\r\n            const r = new_pts[i+1]\r\n            points.push( new THREE.Vector2(r, h));\r\n        }\r\n        return points\r\n    }\r\n  }))\r\n  .views(self => ({\r\n  }));\r\n\r\nexport default SwanStore;\r\n\r\nconst SwanContext = React.createContext();\r\n\r\nexport const SwanProvider = ({ children, store }) => {\r\n    return (\r\n      <SwanContext.Provider value={store}>{children}</SwanContext.Provider>\r\n    );\r\n  };\r\n\r\nexport const useSwanStore = () => React.useContext(SwanContext);\r\n\r\nexport const withSwanStore = (Component) => (props) => {\r\n    return <Component {...props} store={useSwanStore()} />;\r\n  };","import VaseStore from \"./VaseStore\"\r\nimport ColoringForm from \"./ColoringForm\"\r\nimport BasketStore from \"./BasketStore\"\r\nimport FigurineStore from \"./FigurineStore\"\r\nimport SwanStore from \"./SwanStore\"\r\nimport { types } from \"mobx-state-tree\";\r\n\r\n/**\r\n * A RootStore model.\r\n */\r\n// prettier-ignore\r\nconst RootStore = types.model(\"RootStore\").props({\r\n  vaseStore: types.optional(VaseStore, {}),\r\n  coloringFormStore: types.optional(ColoringForm, {}),\r\n  basketStore: types.optional(BasketStore, {}),\r\n  figStore: types.optional(FigurineStore, {}),\r\n  swanStore: types.optional(SwanStore, {}),\r\n});\r\n\r\nexport default RootStore;\r\n\r\n","import React, { createContext, useContext } from \"react\";\r\nimport RootStore from \"./RootStore\";\r\n\r\n/**\r\n * Create a context we can use to\r\n * - Provide access to our stores from our root component\r\n * - Consume stores in our screens (or other components, though it's\r\n *   preferable to just connect screens)\r\n */\r\n// const RootStoreContext = createContext();\r\n\r\n// /**\r\n//  * The provider our root component will use to expose the root store\r\n//  */\r\n// export const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n// /**\r\n//  * A hook that screens can use to gain access to our stores, with\r\n//  * `const { someStore, someOtherStore } = useStores()`,\r\n//  * or less likely: `const rootStore = useStores()`\r\n//  */\r\n// export const useStores = () => useContext(RootStoreContext);\r\n\r\n//------------------------------------------------------------------\r\n\r\nconst RootStoreContext = React.createContext();\r\n\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\n\r\n\r\n// export const RootStoreProvider = ({ children, store }) => {\r\n//     return (\r\n//       <RootStoreContext.Provider value={store}>{children}</RootStoreContext.Provider>\r\n//     );\r\n// };\r\n\r\nexport const useStores = () => React.useContext(RootStoreContext);\r\n","import React, {useEffect} from 'react';\r\nimport vase from \"../assets/vase.png\"\r\nimport basket from \"../assets/basket.png\"\r\nimport swan from \"../assets/swan.png\"\r\nimport fig from \"../assets/fig.PNG\"\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport {PlainLink} from '../components/Navbar/NavbarElements';\r\nimport \"./create.css\"\r\nimport {useStores} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst Create = () => {\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n  }, [])\r\n\r\n  const {coloringFormStore} = useStores()\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"holderTop\">\r\n        <img src={straw} alt={\"\"} className =\"leftS\"/>\r\n        <p className=\"create-text\">select a model</p>\r\n        <img src={straw} alt={\"\"} className =\"rightS\"/>\r\n      </div>\r\n      <div \r\n        style={{\r\n          flexDirection: 'row',\r\n          height: 'auto'\r\n        }}\r\n      >\r\n        <div className = \"holder\">\r\n          <PlainLink to=\"/create-figurine\">\r\n            <img alt={\"\"} src={fig} className=\"create-link\"/>\r\n            <p className=\"create-text\">• figurine •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-vase\">\r\n            <img alt={\"\"} src={vase} className=\"create-link\"/>\r\n            <p className=\"create-text\">• vase •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-basket\">\r\n            <img alt={\"\"} src={basket} className=\"create-link\"/>\r\n            <p className=\"create-text\">• basket •</p>\r\n          </PlainLink>\r\n          <PlainLink to=\"/create-swan\">\r\n            <img alt={\"\"} src={swan} className=\"create-link\"/>\r\n            <p className=\"create-text\">• swan •</p>\r\n          </PlainLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;","import React from 'react';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <h1>Gallery</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","export default __webpack_public_path__ + \"static/media/basket_hndl_med_12h.430dd9d3.jpg\";","export default __webpack_public_path__ + \"static/media/basket_lid_med_5h.96721b18.jpg\";","export default __webpack_public_path__ + \"static/media/basket_lid_med_10h.32dbf9f9.jpg\";","export default __webpack_public_path__ + \"static/media/fig_bear_med_7h.3580c2b9.jpg\";","export default __webpack_public_path__ + \"static/media/fig_bear_med_8h.68df7590.jpg\";","export default __webpack_public_path__ + \"static/media/fig_bun_ez_8h.802c47f7.jpg\";","export default __webpack_public_path__ + \"static/media/fig_cat_ez_8h.3b12b868.jpg\";","export default __webpack_public_path__ + \"static/media/swan_ez_1w_2h_2.48927c79.jpg\";","export default __webpack_public_path__ + \"static/media/swan_ez_1w_2h.bf0224a1.jpg\";","export default __webpack_public_path__ + \"static/media/swan_ez_1w_3h.2cd76453.jpg\";","export default __webpack_public_path__ + \"static/media/swan_ez_1w_4h.1e8481d2.jpg\";","export default __webpack_public_path__ + \"static/media/swan_ez_2w_2h.92b74f02.jpg\";","export default __webpack_public_path__ + \"static/media/swan_ez_2w_4h.bbb76eb2.jpg\";","export default __webpack_public_path__ + \"static/media/swan_med_1w_8h.60887154.jpg\";","export default __webpack_public_path__ + \"static/media/vase_bot_cov_hard_20h.35c5e511.jpg\";","export default __webpack_public_path__ + \"static/media/vase_bot_cov_med_10h.4e3749c6.jpg\";","export default __webpack_public_path__ + \"static/media/vase_hard_25h.d855e989.jpg\";","export default __webpack_public_path__ + \"static/media/vase_top_bot_rim_hard_40h.b06c3c29.jpg\";","export default __webpack_public_path__ + \"static/media/placeholder.c765590d.PNG\";","import React from 'react';\r\nimport straw from \"../assets/strawberry-slider-big.png\"\r\nimport \"./create.css\"\r\nimport {HashLink} from 'react-router-hash-link';\r\nimport { FiDownload } from \"react-icons/fi\";\r\nimport b_hnd_med_12 from \"../assets/browse/basket_hndl_med_12h.jpg\"\r\nimport b_lid_med_5 from \"../assets/browse/basket_lid_med_5h.jpg\"\r\nimport b_lid_med_10 from \"../assets/browse/basket_lid_med_10h.jpg\"\r\nimport f_bear_med_7 from \"../assets/browse/fig_bear_med_7h.jpg\"\r\nimport f_bear_med_8 from \"../assets/browse/fig_bear_med_8h.jpg\"\r\nimport f_bun_ez_8 from \"../assets/browse/fig_bun_ez_8h.jpg\"\r\nimport f_cat_ez_8 from \"../assets/browse/fig_cat_ez_8h.jpg\"\r\nimport s_ez_1w_2_2 from \"../assets/browse/swan_ez_1w_2h_2.jpg\"\r\nimport s_ez_1w_2 from \"../assets/browse/swan_ez_1w_2h.jpg\"\r\nimport s_ez_1w_3 from \"../assets/browse/swan_ez_1w_3h.jpg\"\r\nimport s_ez_1w_4 from \"../assets/browse/swan_ez_1w_4h.jpg\"\r\nimport s_ez_2w_2 from \"../assets/browse/swan_ez_2w_2h.jpg\"\r\nimport s_ez_2w_4 from \"../assets/browse/swan_ez_2w_4h.jpg\"\r\nimport s_med_1w_4 from \"../assets/browse/swan_med_1w_8h.jpg\"\r\nimport v_bot_cov_hard_20 from \"../assets/browse/vase_bot_cov_hard_20h.jpg\"\r\nimport v_bot_cov_med_10 from \"../assets/browse/vase_bot_cov_med_10h.jpg\"\r\nimport v_hard_25 from \"../assets/browse/vase_hard_25h.jpg\"\r\nimport v_top_bot_rim_hard_40 from \"../assets/browse/vase_top_bot_rim_hard_40h.jpg\"\r\nimport placeholder from \"../assets/browse/placeholder.PNG\"\r\n\r\nconst Browse = () => {\r\n  // function loadColoringPage(model){\r\n  //   if (model === \"swan\"){\r\n  //     coloringFormStore.setPreload()\r\n  //     coloringFormStore.preloadDefaultColor(\"#000000\")\r\n  //     coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  //     // set swan dimensions so SwanStore can do the calcs to getDimensions\r\n  //   }\r\n  // }\r\n\r\n  const swans = [\r\n  [s_ez_1w_2, \"easy\", 2], \r\n  [s_ez_1w_2_2, \"easy\", 2], \r\n  [s_ez_2w_2, \"easy\", 2], \r\n  [s_ez_1w_3, \"easy\", 3], \r\n  [s_ez_1w_4, \"easy\", 4], \r\n  [s_ez_2w_4, \"easy\", 4], \r\n  [s_med_1w_4, \"medium\", 4]]\r\n\r\n  const figs = [\r\n  [f_bun_ez_8, \"easy\", 8], \r\n  [f_cat_ez_8, \"easy\", 8], \r\n  [f_bear_med_7, \"medium\", 7], \r\n  [f_bear_med_8, \"medium\", 8]]\r\n\r\n  const baskets = [\r\n  [b_lid_med_5, \"medium\", 5], \r\n  [b_lid_med_10, \"medium\", 10], \r\n  [b_hnd_med_12, \"medium\", 12]]\r\n\r\n  const vases = [\r\n  [v_bot_cov_med_10, \"medium\", 10], \r\n  [v_bot_cov_hard_20, \"hard\", 20], \r\n  [v_hard_25, \"hard\", 25], \r\n  [v_top_bot_rim_hard_40, \"hard\", 40]]\r\n\r\n  const len_swans = swans.length\r\n  const len_figs = figs.length\r\n  const len_baskets = baskets.length\r\n  const len_vases = vases.length\r\n\r\n  const TODO_SZ = \"1/32\"\r\n  const TODO_NUM = \"1432\"\r\n\r\n  function element(key, img, difficulty, hours){\r\n    return <div key={key} className=\"browse-el-holder\">\r\n      <div className=\"browse-straw-num\">\r\n        <div className=\"browse-straw-text\" style={{marginLeft: key+1 >= 10? 25:35}}>\r\n          {key+1}\r\n        </div>\r\n      </div>\r\n      <img className=\"browse-img\" src={img} alt={\"\"}/>\r\n      <div className=\"browse-el-info\">\r\n        <div className=\"browse-info\">\r\n          <p className=\"browse-el-text\"> difficulty: <span>{difficulty}</span></p>\r\n          <p className=\"browse-el-text\"> estimated time: <span>{hours} h</span></p>\r\n          <p className=\"browse-el-text\"> piece size: <span>{TODO_SZ}</span></p>\r\n          <p className=\"browse-el-text\"> # of pieces: <span>{TODO_NUM}</span></p>\r\n        </div>\r\n      </div>\r\n      <img className=\"browse-diag\" src={placeholder} alt={\"\"}/>\r\n      <div className = \"browse-done-button\"\r\n          onClick={() => console.log(\"hello\")}> \r\n          <p className = \"browse-download-label\"><span><FiDownload size={17}/></span> download 3d-o diagram <span><FiDownload size={17}/></span></p>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n\r\n  return (\r\n    <div id=\"top\">\r\n      <div className=\"holderTop\">\r\n        <img src={straw} alt={\"\"} className =\"leftS\" style={{left:\"35%\"}}/>\r\n        <p className=\"create-text\">browse pre-made designs</p>\r\n        <img src={straw} alt={\"\"} className =\"rightS\" style={{right:\"35%\"}}/>\r\n      </div>\r\n      <div \r\n        style={{\r\n        flexDirection: 'row',\r\n        height: '150px'\r\n      }}>\r\n        <div className = \"holder\">\r\n          <HashLink style={{color: \"#D14240\"}} to=\"/browse#figurine\">\r\n            <img src={straw} alt={\"\"} className =\"tabS-left\"/>\r\n            <p className=\"browse-tab\">• figurine •</p>\r\n          </HashLink>\r\n          <HashLink style={{color: \"#D14240\"}} to=\"/browse#vase\">\r\n            <img src={straw} alt={\"\"} className =\"tabS-right\"/>\r\n            <p className=\"browse-tab\">• vase •</p>\r\n          </HashLink>\r\n          <HashLink style={{color: \"#D14240\"}} to=\"/browse#basket\">\r\n            <img src={straw} alt={\"\"} className =\"tabS-left\"/>\r\n            <p className=\"browse-tab\">• basket •</p>\r\n          </HashLink>\r\n          <HashLink style={{color: \"#D14240\"}} to=\"/browse#swan\">\r\n            <img src={straw} alt={\"\"} className =\"tabS-right\"/>\r\n            <p className=\"browse-tab\">• swan •</p>\r\n          </HashLink>\r\n        </div>\r\n      </div>\r\n      <div id=\"figurine\" className=\"holderTop\">\r\n        <p className=\"create-text\">— figurine —</p>\r\n      </div>\r\n      {figs.map((entry, i) => (\r\n        element(i, entry[0], entry[1], entry[2])\r\n      ))}\r\n      <div id=\"vase\" className=\"holderTop\">\r\n        <p className=\"create-text\">— vase —</p>\r\n      </div>\r\n      {vases.map((entry, i) => (\r\n        element(len_figs + i, entry[0], entry[1], entry[2])\r\n      ))}\r\n      <div id=\"basket\" className=\"holderTop\">\r\n        <p className=\"create-text\">— basket —</p>\r\n      </div>\r\n      {baskets.map((entry, i) => (\r\n        element(len_figs + len_vases + i, entry[0], entry[1], entry[2])\r\n      ))}\r\n      <div id=\"swan\" className=\"holderTop\">\r\n        <p className=\"create-text\">— swan —</p>\r\n      </div>\r\n      {swans.map((entry, i) => (\r\n        element(len_figs + len_vases + len_baskets + i, entry[0], entry[1], entry[2])\r\n      ))}\r\n      <div style={{height: 160}}>\r\n      <HashLink style={{color: \"#D14240\"}} to=\"/browse#top\">\r\n        <img src={straw} alt={\"\"} className =\"tabS\"/>\r\n        <p className=\"browse-tab\" style={{width: 150, marginLeft: \"calc(50% - 90px)\"}}>• scroll to top •</p>\r\n      </HashLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;","import React from 'react';\r\nimport \"./create.css\"\r\nimport logo from \"../assets/transparent.png\"\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      <div>\r\n        <img className=\"transparent-logo\" src={logo} alt=\"\"/>\r\n        <p className=\"coming-soon-text\">coming soon</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/paper.2a44f726.PNG\";","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Wing = (props) => {\r\n    const {vertices, purpose} = props\r\n    const my_vertices = useMemo(() => vertices.map(v => new THREE.Vector3(...v)), [])\r\n\r\n    const faces = []\r\n    if (purpose == \"wing\"){\r\n        faces.push(\r\n            new THREE.Face3(17, 8, 7),\r\n            new THREE.Face3(16, 17, 7),\r\n            new THREE.Face3(16, 7, 6),\r\n            new THREE.Face3(15, 16, 6),\r\n            new THREE.Face3(15, 6, 5),\r\n            new THREE.Face3(14, 15, 5),\r\n            new THREE.Face3(14, 5, 4),\r\n            new THREE.Face3(13, 14, 4),\r\n            new THREE.Face3(13, 4, 3),\r\n            new THREE.Face3(12, 13, 3),\r\n            new THREE.Face3(12, 3, 2),\r\n            new THREE.Face3(11, 12, 2),\r\n            new THREE.Face3(11, 2, 1),\r\n            new THREE.Face3(10, 11, 1),\r\n            new THREE.Face3(10, 1, 0),\r\n            new THREE.Face3(9, 10, 0),\r\n            // top row \r\n            new THREE.Face3(18, 17, 16),\r\n            new THREE.Face3(18, 16, 15),\r\n            new THREE.Face3(18, 15, 14),\r\n            new THREE.Face3(18, 14, 13),\r\n            new THREE.Face3(18, 13, 12),\r\n            new THREE.Face3(18, 12, 11),\r\n            new THREE.Face3(18, 11, 10),\r\n            new THREE.Face3(18, 10, 9),\r\n        )\r\n    }\r\n    else if (purpose == \"front-back\"){\r\n        faces.push(\r\n            new THREE.Face3(5, 4, 3),\r\n            new THREE.Face3(5, 3, 2),\r\n            new THREE.Face3(5, 2, 1),\r\n            new THREE.Face3(5, 1, 0),\r\n        )\r\n    }\r\n\r\n    else if (purpose == \"one-wing\"){\r\n        faces.push(\r\n            new THREE.Face3(9, 8, 7),\r\n            new THREE.Face3(9, 7, 6),\r\n            new THREE.Face3(9, 6, 5),\r\n            new THREE.Face3(9, 5, 4),\r\n            new THREE.Face3(9, 4, 3),\r\n            new THREE.Face3(9, 3, 2),\r\n            new THREE.Face3(9, 2, 1),\r\n            new THREE.Face3(9, 1, 0),\r\n        )\r\n    }\r\n\r\n    // const uvs = [[\r\n    //     // front\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // right\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // back\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // left\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // top\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    //     // bottom\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 1), new THREE.Vector2(0, 1) ],\r\n    //     [ new THREE.Vector2(0, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 1) ],\r\n    // ]]\r\n\r\n    function update(geometry){\r\n        geometry.computeFaceNormals()\r\n        geometry.computeVertexNormals();\r\n        for (let i = 0; i < geometry.vertices.length; i++){\r\n            geometry.vertices[i].x = vertices[i][0]\r\n            geometry.vertices[i].y = vertices[i][1]\r\n            geometry.vertices[i].z = vertices[i][2]\r\n        }\r\n        geometry.verticesNeedUpdate = true\r\n        geometry.normalsNeedUpdate = true;\r\n    }\r\n\r\n    return (\r\n        // <geometry vertices={my_vertices} faces={faces} faceVertexUVs={uvs} onUpdate={update}/>\r\n        <geometry vertices={my_vertices} faces={faces} onUpdate={update}/>\r\n    )\r\n  }\r\n\r\nexport default observer(Wing);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\nimport Wing from \"../Wing\"\r\n\r\nconst Swan = (props) => {\r\n    const {swanStore, result} = props\r\n    const image = result ? swanStore.texture : grid\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(image), []) \r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const swan_pts = swanStore.swanBodyPts()\r\n\r\n    let display_diameter = swanStore.diameter\r\n    if (!swanStore.cm){\r\n        display_diameter = Math.round(display_diameter * 2.54)\r\n    }\r\n\r\n    const swan_body = \r\n    <group>\r\n        <mesh >\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh>\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const bottom = display_diameter * swanStore.height_scale * 0.8 * -1\r\n    const rim_mesh = <mesh position = {[0,bottom-0.1,0]} rotation = {[1.57,0,0]}> \r\n    <torusGeometry args={[(display_diameter * swanStore.bottom_scale/2)+0.1, display_diameter/70, 10, 50]}/>\r\n    <meshPhongMaterial color={result? swanStore.default_color : \"#FF7E98\"} />\r\n    </mesh>\r\n\r\n    function getX(angle, radius){\r\n        return  radius * Math.cos(angle)\r\n    }\r\n\r\n    function getY(angle, radius){\r\n        return radius * Math.sin(angle)\r\n    }\r\n\r\n    const bottomRad = display_diameter * swanStore.top_scale * 0.5\r\n    const midRad = display_diameter * swanStore.top_scale * 0.5 * 0.73\r\n    const midHeight = display_diameter * swanStore.height_scale * 1.7 * 0.5\r\n    const topHeight = display_diameter * swanStore.height_scale * 1.9\r\n\r\n    const vertices =\r\n    [\r\n        // bottom row\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [getX(Math.PI/3.7, bottomRad), 0, getY(Math.PI/3.7, bottomRad)],  // 1\r\n        [getX(Math.PI/6, bottomRad), 0, getY(Math.PI/6, bottomRad)],  // 2\r\n        [getX(Math.PI/12, bottomRad), 0, getY(Math.PI/12, bottomRad)],  // 3\r\n        [getX(0, bottomRad), 0, getY(0, bottomRad)],  // 4\r\n        [getX(Math.PI/12, bottomRad), 0, -getY(Math.PI/12, bottomRad)],  // 5\r\n        [getX(Math.PI/6, bottomRad), 0, -getY(Math.PI/6, bottomRad)],  // 6\r\n        [getX(Math.PI/3.7, bottomRad), 0, -getY(Math.PI/3.7, bottomRad)],  // 7\r\n        [getX(Math.PI/2.8, bottomRad), 0, -getY(Math.PI/2.8, bottomRad)],  // 8\r\n        // middle row\r\n        [getX(Math.PI/2.8, midRad), midHeight, getY(Math.PI/2.8, midRad)],  // 9\r\n        [getX(Math.PI/3.7, midRad), midHeight, getY(Math.PI/3.7, midRad)],  // 10\r\n        [getX(Math.PI/6, midRad), midHeight, getY(Math.PI/6, midRad)],  // 11\r\n        [getX(Math.PI/12, midRad), midHeight, getY(Math.PI/12, midRad)],  // 12\r\n        [getX(0, midRad), midHeight, getY(0, midRad)],  // 13\r\n        [getX(Math.PI/12, midRad), midHeight, -getY(Math.PI/12, midRad)],  // 14\r\n        [getX(Math.PI/6, midRad), midHeight, -getY(Math.PI/6, midRad)],  // 15\r\n        [getX(Math.PI/3.7, midRad), midHeight, -getY(Math.PI/3.7, midRad)],  // 16\r\n        [getX(Math.PI/2.8, midRad), midHeight, -getY(Math.PI/2.8, midRad)],  // 17\r\n        // heights\r\n        [bottomRad/6, topHeight, 0]  // 18\r\n    ];\r\n\r\n    const big_vertices = \r\n    [\r\n        [-getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 0\r\n        [-getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 1\r\n        [-getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 2\r\n        [-getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 3        \r\n        [getX(Math.PI/2, bottomRad), 0, -getY(Math.PI/2, bottomRad)],  // 4\r\n        [getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 5  \r\n        [getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 6\r\n        [getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 7\r\n        [getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 8\r\n        [0, topHeight*1.1, -bottomRad*1.25]  // 9\r\n    ];\r\n\r\n    const F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [-getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 3\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 4\r\n        [0, topHeight/3, bottomRad/1.3]  // 5\r\n    ];\r\n\r\n    const big_F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 0\r\n        [-getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 3\r\n        [getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 4\r\n        [0, topHeight/1.7, bottomRad/1.8]  // 5\r\n    ];\r\n\r\n    const L_vertices = []\r\n    for (let i = 0; i < vertices.length; i++){\r\n        let temp = []\r\n        temp.push(-1 * vertices[i][0],vertices[i][1],vertices[i][2])\r\n        L_vertices.push(temp)\r\n    }\r\n\r\n    const B_vertices = []\r\n    for (let i = 0; i < F_vertices.length-1; i++){\r\n        let temp = []\r\n        temp.push(F_vertices[i][0],F_vertices[i][1], -1 * F_vertices[i][2])\r\n        B_vertices.push(temp)\r\n    }\r\n    B_vertices.push([0, topHeight/4, -bottomRad * 1.1])\r\n\r\n    const y_pos_wing = display_diameter * swanStore.height_scale\r\n    const wings = \r\n    <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const one_wing = <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const shape = useMemo( () => new THREE.Shape(), [display_diameter]);\r\n    const param = display_diameter * 0.3\r\n    const t = param * 0.4\r\n    shape.moveTo(0, -param*1.3);\r\n    shape.lineTo(param*0.9, 0)\r\n    shape.quadraticCurveTo(param + param/3, param*1.5/2,param, param * 1.4)\r\n    shape.quadraticCurveTo(param/2, param * 1.9, -param/3,param)\r\n    shape.lineTo(-param/2.5, param - (1.5*t))\r\n    shape.quadraticCurveTo(param/2 , (param * 1.9) - t, param -t/1.5 , (param * 1.5) - t/1.5)\r\n    shape.quadraticCurveTo((param + param/3.5) -t/1.5, (param*1.5/2) + t/1.5, param -t/1.5, t/1.5)\r\n    \r\n    const depth = param/6\r\n\r\n    const extrudeSettings = {\r\n        steps: 100,  \r\n        depth: depth,  \r\n        bevelEnabled: false,   \r\n      };\r\n      \r\n\r\n    const offset = display_diameter * swanStore.height_scale + (param*1.3) + ((topHeight/3) * 0)\r\n    const neck_mesh = <mesh position={[-depth/2,offset,(bottomRad/1)]} rotation={[0, Math.PI/2, 0]}>\r\n        <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n        <meshPhongMaterial color={result? swanStore.default_color: \"#FFFFFF\"} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n    </mesh>\r\n\r\n\r\n    const diameter_marker = getInputMarker((display_diameter/2) + 0.1, 0)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            {swan_body}\r\n            {!swanStore.wings && one_wing}\r\n            {swanStore.wings && wings}\r\n            {!result && diameter_marker}\r\n            {swanStore.bottom_rim && rim_mesh}\r\n            {neck_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Swan);","import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId,\r\n    measurementId: process.env.REACT_APP_measurementId,\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const firestore = firebase.firestore()\r\n  export default firebase\r\n","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Swan from \"../components/Swan\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\nimport firebase from 'firebase/app'\r\nimport { firestore } from \"../firebase\"\r\n\r\nconst CreateSwan = () => {\r\n\r\n  const { swanStore, coloringFormStore } = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  }, [swanStore.wings])\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"∧ ∧\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"∧\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 50\r\n\r\n  // in\r\n  if (!swanStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[swanStore.diameter]} onUpdate={(val) => swanStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\nconst bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_bottom_rim(val)}\r\n    options={options}\r\n    initialSelectedIndex={swanStore.bottom_rim ? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\nconst wings_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_wings(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={swanStore.wings? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => swanStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={swanStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\nfunction nextPage(){\r\n  coloringFormStore.setMsg()\r\n  swanStore.setSize()\r\n  const incremented_val = firebase.firestore.FieldValue.increment(1)\r\n  firestore.collection(\"diagrams_count\").doc(\"count\").update({count_value: incremented_val})\r\n}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '400px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Swan swanStore={swanStore} result={false}/>\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">wings</p>\r\n          {wings_switch}\r\n          </div>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">bottom_rim</p>\r\n          {bottom_rim_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={nextPage} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateSwan);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport {useFrame} from \"react-three-fiber\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n// import temp from \"../../assets/tempp.png\";\r\n\r\nconst Vase = (props) => {\r\n    const {vase} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n    // texture.wrapS = THREE.MirroredRepeatWrapping;\r\n    // texture.wrapT = THREE.MirroredRepeatWrapping;\r\n    // texture.repeat.set(2, 2.6);\r\n\r\n    const s_dtop_h = vase.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vase.scale_h/vase.height\r\n\r\n    const s_dtop = Math.max(1,vase.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,vase.dbottom * scale_factor)\r\n\r\n    const s_d1 = Math.max(1, vase.d1 * scale_factor)\r\n    const s_d1_h = (vase.d1_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d2 = Math.max(1, vase.d2 * scale_factor)\r\n    const s_d2_h = (vase.d2_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    const s_d3 = Math.max(1,vase.d3 * scale_factor)\r\n    const s_d3_h = (vase.d3_h/100) * vase.scale_h - s_dtop_h\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = vase.top_rim ? getInputMarker((s_dtop/2) + 0.6, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = vase.bottom_rim ? getInputMarker((s_dbottom/2) + 0.6, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const d1_marker = getInputMarker((s_d1/2) + 0.1, s_d1_h)\r\n    const d2_marker = getInputMarker((s_d2/2) + 0.1, s_d2_h)\r\n    const d3_marker = getInputMarker((s_d3/2) + 0.1, s_d3_h)\r\n\r\n    if (vase.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.3,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (vase.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.3, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    const points = vase.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vase.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {vase.top_rim && top_rim_mesh}\r\n            {vase.bottom_rim && bottom_rim_mesh}\r\n            {vase.flat_bottom && flat_bottom_mesh}\r\n            {dbottom_marker}\r\n            {d1_marker}\r\n            {d2_marker}\r\n            {d3_marker}\r\n            {dtop_marker}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Vase);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Vase from \"../components/Vase\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\nimport firebase from 'firebase/app'\r\nimport { firestore } from \"../firebase\"\r\n\r\nconst CreateVase = () => {\r\n\r\n  const { vaseStore, coloringFormStore} = useStores();\r\n  \r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"vase\")\r\n  }, [])\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  function MultiHandle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    if (id == \"$$-0\" || id == \"$$-4\"){\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 2,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 3,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n          {...getHandleProps(id)}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 4, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 50\r\n  let min_h = 10 \r\n  let max_h = 100\r\n\r\n  // in\r\n  if (!vaseStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n    max_h = Math.round(max_h/ratio)\r\n    min_h = Math.round(min_h/ratio)\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[min_h, max_h]} step={1} mode={2} values={[vaseStore.height]} onUpdate={(val) => vaseStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.dtop]} onUpdate={(val) => vaseStore.update_dtop(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d3 = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.d3]} onUpdate={(val) => vaseStore.update_d3(val[0])} >\r\n    <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d2 = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.d2]} onUpdate={(val) => vaseStore.update_d2(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d1 = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.d1]} onUpdate={(val) => vaseStore.update_d1(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[vaseStore.dbottom]} onUpdate={(val) => vaseStore.update_dbottom(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const dSlider = <Slider\r\n  rootStyle={sliderStyle}\r\n  domain={[0, 100]}\r\n  mode={2}\r\n  values={[0, vaseStore.d1_h, vaseStore.d2_h, vaseStore.d3_h, 100] /* three values = three handles */}\r\n  onUpdate={(val)=>vaseStore.update_d_heights(val)}\r\n  step={5}\r\n  >\r\n  <div style={railStyle} />\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <MultiHandle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const flat_bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_flat_bottom(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.flat_bottom ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={vaseStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  function nextPage(){\r\n    coloringFormStore.setMsg()\r\n    vaseStore.setSize()\r\n    const incremented_val = firebase.firestore.FieldValue.increment(1)\r\n    firestore.collection(\"diagrams_count\").doc(\"count\").update({count_value: incremented_val})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            {/* <ambientLight intensity={0} /> */}\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.3}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n             {/* <spotLight position={[1, 10, 10]} angle={0.15} penumbra={1} /> */}\r\n            {/* <pointLight position={[-10, -10, -10]} /> */}\r\n            <Vase vase={vaseStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{background: '#FFE7E5', width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">2nd diameter</p>\r\n              {slider_d3}\r\n              <p className=\"text\">4th diameter</p>\r\n              {slider_d1}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n              <p className=\"text\">3rd diameter</p>\r\n              {slider_d2}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <p className=\"text\">diameter heights ( % )</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {dSlider}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'right', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom cover</p>\r\n            {flat_bottom_switch}\r\n          </div>\r\n          <div style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={nextPage} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Basket = (props) => {\r\n    const {basketStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []);\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    const s_diameter = Math.max(1, basketStore.diameter * scale_factor)\r\n    const s_diameter_h = 0\r\n\r\n    // need rounded bottom shape , concave\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color=\"#FF7E98\" />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial  map={texture} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial map = {texture}  side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n    \r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const dtop_marker = basketStore.top_rim ? getInputMarker((s_dtop/2) + 0.5, s_dtop_h) : getInputMarker((s_dtop/2) + 0.1, s_dtop_h) \r\n    const dbottom_marker = basketStore.bottom_rim ? getInputMarker((s_dbottom/2) + 0.5, s_dbottom_h) : getInputMarker((s_dbottom/2) + 0.1, s_dbottom_h)\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    const points = basketStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {diameter_marker}\r\n            {dtop_marker}\r\n            {dbottom_marker}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Basket);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Basket from \"../components/Basket\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\nimport firebase from 'firebase/app'\r\nimport { firestore } from \"../firebase\"\r\n\r\nconst CreateBasket = () => {\r\n\r\n  const { basketStore, coloringFormStore} = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"basket\")\r\n  }, [])\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 50\r\n  let min_h = 10 \r\n  let max_h = 100\r\n\r\n  // in\r\n  if (!basketStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n    max_h = Math.round(max_h/ratio)\r\n    min_h = Math.round(min_h/ratio)\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[min_h, max_h]} step={1} mode={2} values={[basketStore.height]} onUpdate={(val) => basketStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[basketStore.diameter]} onUpdate={(val) => basketStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[basketStore.dbottom]} onUpdate={(val) => basketStore.update_dbottom(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n\r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[basketStore.dtop]} onUpdate={(val) => basketStore.update_dtop(val[0])} >\r\n  <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n  </Rail>\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <Handle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const lid_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_lid(val)}\r\n          options={options}\r\n          initialSelectedIndex={basketStore.lid ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_flat_bottom(!val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.flat_bottom ? 1 : 0}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n</div>\r\n\r\n  const top_handle_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_top_handle(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.top_handle ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  const side_handles_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => basketStore.update_side_handles(val)}\r\n      options={options}\r\n      initialSelectedIndex={basketStore.side_handles ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => basketStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={basketStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\nfunction nextPage(){\r\n  coloringFormStore.setMsg()\r\n  basketStore.setSize()\r\n  const incremented_val = firebase.firestore.FieldValue.increment(1)\r\n  firestore.collection(\"diagrams_count\").doc(\"count\").update({count_value: incremented_val})\r\n}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '690px'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 100], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Basket basketStore={basketStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">middle diameter</p>\r\n              {slider_diameter}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">curved bottom</p>\r\n            {bottom_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top handle</p>\r\n            {top_handle_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">lid</p>\r\n            {lid_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">side handles</p>\r\n            {side_handles_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={nextPage} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateBasket);","import React, {useState, useMemo} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(grid), []) \r\n\r\n    let display_diameter = figStore.diameter\r\n    if (!figStore.cm){\r\n        display_diameter = Math.round(display_diameter * 2.54)\r\n    }\r\n\r\n    const s_diameter = display_diameter \r\n    const s_diameter_h = 0\r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (display_diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const head =\r\n    <group>\r\n        <mesh position={[0,(display_diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh position={[0,(display_diameter * figStore.body_height) + offset,0]}>\r\n            <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI * theta_len]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.BackSide}/>\r\n        </mesh>\r\n    </group>\r\n\r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears === \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  map={texture} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears === \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = display_diameter/7\r\n        const y_pos = (display_diameter * figStore.body_height)/2\r\n        const x_pos = (display_diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  map={texture} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n    const diameter_marker = getInputMarker((s_diameter/2) + 0.1, s_diameter_h)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n                    break;\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {head}\r\n            {diameter_marker}\r\n            {figStore.ears === \"bear\" && bear_ears}\r\n            {figStore.ears === \"bunny\" && bunny_ears}\r\n            {figStore.ears === \"cat\" && cat_ears}\r\n            {figStore.ears === \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Figurine from \"../components/Figurine\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\nimport firebase from 'firebase/app'\r\nimport { firestore } from \"../firebase\"\r\n\r\nconst CreateFigurine = () => {\r\n\r\n  const { figStore, coloringFormStore} = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"fig\")\r\n  }, [])\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"◠ ◠\",\r\n        value: \"bear\",\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"〇 〇\",\r\n        value: \"sphere\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∧ ∧\",\r\n        value: \"cat\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },  {\r\n        label: \"∩ ∩\",\r\n        value: \"bunny\",\r\n        selectedBackgroundColor: \"#E28988\"\r\n    },\r\n  ];\r\n\r\n  const ears = [\"bear\", \"sphere\", \"cat\", \"bunny\"]\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  // cm\r\n  let min_d = 5\r\n  let max_d = 50\r\n\r\n  // in\r\n  if (!figStore.cm){\r\n    const ratio = 2.54\r\n    min_d = Math.round(min_d/ratio)\r\n    max_d = Math.round(max_d/ratio)\r\n  }\r\n  \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[min_d, max_d]} step={1} mode={2} values={[figStore.diameter]} onUpdate={(val) => figStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n\r\n  const arms_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n  <SwitchSelector\r\n      onChange={(val) => figStore.update_arms(val)}\r\n      options={options}\r\n      initialSelectedIndex={figStore.arms ? 0 : 1}\r\n      backgroundColor={\"#FFE7E5\"}\r\n      fontColor={\"#D75A58\"}\r\n      optionBorderRadius={30}\r\n  />\r\n  </div>\r\n\r\n  \r\nconst ears_switch = <div className=\"switch\"  style={{width: 360, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => figStore.update_ears(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={ears.indexOf(`${figStore.ears}`)}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n    fontSize={20}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => figStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={figStore.cm ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\nfunction nextPage(){\r\n  coloringFormStore.setMsg()\r\n  figStore.setSize()\r\n  const incremented_val = firebase.firestore.FieldValue.increment(1)\r\n  firestore.collection(\"diagrams_count\").doc(\"count\").update({count_value: incremented_val})\r\n}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '470px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Figurine figStore={figStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <p className=\"text\">arms</p>\r\n          {arms_switch}\r\n          <br/>\r\n          <p className=\"text\">ears</p>\r\n          {ears_switch}\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={nextPage} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateFigurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultVase = (props) => {\r\n    const {vaseStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        const len = vaseStore.modelDimensions.length\r\n        itemsRef.current = itemsRef.current.slice(0, len)\r\n        insideRef.current = insideRef.current.slice(0, len)\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(vaseStore.textures[len-i-1])\r\n        }\r\n     }, []);\r\n\r\n    const s_dtop_h = vaseStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = vaseStore.scale_h/vaseStore.height\r\n\r\n    const s_dtop = vaseStore.dtop * scale_factor\r\n    const s_dbottom = vaseStore.dbottom * scale_factor\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let flat_bottom_mesh = <mesh />\r\n\r\n    if (vaseStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.1,0.3,10,50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (vaseStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.1, 0.3, 10, 50]}/>\r\n        <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const points = useMemo(() => vaseStore.updateCurvedPts(true), [vaseStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    if (vaseStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={vaseStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-550)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,40)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,0,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshLambertMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh> \r\n            ))}\r\n            </group>\r\n            {vaseStore.top_rim && top_rim_mesh}\r\n            {vaseStore.bottom_rim && bottom_rim_mesh}\r\n            {vaseStore.flat_bottom && flat_bottom_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultVase);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Figurine = (props) => {\r\n    const {figStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        const len = figStore.modelDimensions.length-1\r\n        itemsRef.current = itemsRef.current.slice(0, len);\r\n        insideRef.current = insideRef.current.slice(0, len);\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(figStore.textures[i])\r\n        }\r\n     }, []);\r\n\r\n    const texture_body = useMemo(() => new THREE.TextureLoader().load(figStore.textures[figStore.textures.length-1]), []) \r\n\r\n    let display_diameter = figStore.diameter\r\n    if (!figStore.cm){\r\n        display_diameter = Math.round(display_diameter * 2.54)\r\n    }\r\n\r\n    const theta_len = 0.8\r\n    const goal_rad = (display_diameter * figStore.body_scale)/2\r\n    const head_rad = goal_rad/Math.sin((1-theta_len) * Math.PI)\r\n    const offset = head_rad*Math.cos((1-theta_len) * Math.PI) - 0.2\r\n\r\n    const divs = figStore.getBrokenHeadPts(Math.PI*theta_len)\r\n\r\n    const broken_head = \r\n    <group>\r\n        {divs.map((_, i) => (\r\n            <mesh key={i} position={[0,(display_diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        ))}\r\n        {divs.map((_, i) => (\r\n            <mesh key={i} position={[0,(display_diameter * figStore.body_height) + offset,0]}>\r\n                <sphereGeometry args={[head_rad, 20, 14, 0, 2 * Math.PI, divs[i][0], divs[i][1]]}/>\r\n                <meshPhongMaterial ref={el => insideRef.current[i] = el} side={THREE.BackSide}/>\r\n            </mesh>\r\n        ))}\r\n    </group>\r\n    \r\n    let bunny_ears = <mesh/>\r\n    let cat_ears = <mesh/> \r\n    let sphere_ears = <mesh/>\r\n    let bear_ears = <mesh/>\r\n    let arms = <mesh/>\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = Math.cos(2 * Math.PI * t);\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = 0;\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n    }\r\n\r\n    if(figStore.ears === \"bear\"){\r\n        const tube_scale = head_rad/3\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/7)\r\n        const rad_segs = 7\r\n        const closed = false\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + tube_scale/4 + (head_rad * Math.cos(Math.PI/4))\r\n\r\n        bear_ears =  \r\n        <group>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,Math.PI/4]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) + tube_scale/5),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial  color={figStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"cat\"){\r\n        const shape = new THREE.Shape();\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/1.5)/2\r\n        shape.moveTo(-half_side_len,0);\r\n        shape.quadraticCurveTo(-half_side_len/1.2, half_side_len * 1.3, 0,half_side_len * 1.8);\r\n        shape.quadraticCurveTo(half_side_len/1.2, half_side_len * 1.3, half_side_len,0);\r\n        shape.lineTo(-half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        cat_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4.5]}>\r\n            <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n\r\n    }\r\n\r\n    if(figStore.ears === \"bunny\"){\r\n        const bshape = new THREE.Shape();\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + (head_rad * Math.cos(Math.PI/4))\r\n        const half_side_len = (head_rad/2)/2\r\n        bshape.moveTo(-half_side_len,0);\r\n        bshape.lineTo(-half_side_len, half_side_len * 3)\r\n        bshape.quadraticCurveTo(-half_side_len/2, (half_side_len * 4), 0,half_side_len * 4);\r\n        bshape.quadraticCurveTo(half_side_len/2, half_side_len * 4, half_side_len, half_side_len * 3);\r\n        bshape.lineTo(half_side_len,0);\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,  \r\n            depth: 1,  \r\n            bevelEnabled: false,  \r\n          };\r\n\r\n        bunny_ears = \r\n        <group>\r\n        <mesh position={[(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        <mesh position={[-(head_rad * Math.cos(Math.PI/4) - half_side_len/3),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n            <extrudeGeometry args={[bshape, extrudeSettings]}/>\r\n            <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>        \r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if(figStore.ears === \"sphere\"){\r\n        const ear_rad = head_rad/3.5\r\n        const y_pos = (display_diameter * figStore.body_height) + offset + ear_rad + (head_rad * Math.cos(Math.PI/4))\r\n        sphere_ears = \r\n        <group>\r\n            <mesh position={[-(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[(head_rad * Math.cos(Math.PI/4)),y_pos,0]} rotation={[0,0,-Math.PI/4]}>\r\n                <sphereGeometry args={[ear_rad, 20, 14, 0, 2 * Math.PI, 0, Math.PI ]}/>\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (figStore.arms){\r\n        const arm_rad = display_diameter/7\r\n        const y_pos = (display_diameter * figStore.body_height)/2\r\n        const x_pos = (display_diameter * figStore.body_scale)/2 + arm_rad*1.3\r\n        arms = \r\n        <group>\r\n            <mesh position={[-(x_pos),y_pos,0]} rotation={[0,0,Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh position={[x_pos,y_pos,0]} rotation={[0,0,-Math.PI/2.65]}>\r\n                <cylinderGeometry args={[arm_rad, arm_rad, arm_rad*1.3, 15]} />\r\n                <meshPhongMaterial  color={figStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    const points = figStore.updateCurvedPts()\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n                    break;\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <mesh >\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n            </mesh>\r\n            <mesh>\r\n                <latheGeometry args={[points, 30, 0, 2*Math.PI]}/>\r\n                <meshPhongMaterial map = {texture_body}  side = {THREE.BackSide} />\r\n            </mesh>\r\n            {broken_head}\r\n            {figStore.ears === \"bear\" && bear_ears}\r\n            {figStore.ears === \"bunny\" && bunny_ears}\r\n            {figStore.ears === \"cat\" && cat_ears}\r\n            {figStore.ears === \"sphere\" && sphere_ears}\r\n            {figStore.arms && arms}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Figurine);","import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultBasket = (props) => {\r\n    const {basketStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        const len = basketStore.modelDimensions.length\r\n        itemsRef.current = itemsRef.current.slice(0, basketStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, basketStore.modelDimensions.length);\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n        }\r\n     }, []);\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    // const points = basketStore.updateCurvedPts()\r\n    const points = useMemo(() => basketStore.updateCurvedPts(true), [basketStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh>\r\n            ))}\r\n            </group>   \r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultBasket);","export default __webpack_public_path__ + \"static/media/upper-banner.1523f22e.png\";","export default __webpack_public_path__ + \"static/media/lower-banner.94f2cf86.png\";","import React, {useEffect, useRef} from 'react';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport { observer } from \"mobx-react\";\r\nimport  ResultVase  from \"../components/ResultVase\"\r\nimport  Swan  from \"../components/Swan\"\r\nimport  ResultFigurine  from \"../components/ResultFigurine\"\r\nimport  ResultBasket  from \"../components/ResultBasket\"\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport './create-vase.css'\r\nimport upperbanner from \"../assets/upper-banner.png\"\r\nimport lowerbanner from \"../assets/lower-banner.png\"\r\nimport { FiDownload } from \"react-icons/fi\";\r\n\r\nconst Result = () => {\r\n  const {coloringFormStore, vaseStore, swanStore, basketStore, figStore} = useStores()\r\n  \r\n  const canvasRef = useRef()\r\n  let modelStore; \r\n  if (coloringFormStore.model === \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model === \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model === \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model === \"basket\") modelStore = basketStore\r\n  modelStore.setDefaultColor(coloringFormStore.defaultColor)\r\n  modelStore.clearTextures()\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext(\"2d\")\r\n    const px_width = 16*2\r\n    const px_height = 11*2\r\n    const half_px_width = px_width/2\r\n    const defaultCol = coloringFormStore.defaultColor;\r\n\r\n    for (let i = 0; i < coloringFormStore.coloringFormData.length; i++){\r\n      const sec_width = modelStore.modelDimensions[i][0]\r\n      const sec_height = modelStore.modelDimensions[i][1] \r\n      canvas.width = sec_width * px_width\r\n      canvas.height = sec_height * px_height\r\n      context.fillStyle = defaultCol\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n      for (let r = 0; r < sec_height; r++){\r\n        let offset = 0 \r\n        if (coloringFormStore.coloringFormData[i].drawingSectionData[r].offset){\r\n          offset = half_px_width\r\n          const last_idx = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData.length\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[last_idx-1].pixelColor\r\n          context.fillRect(0, px_height * r, half_px_width, px_height)\r\n        }\r\n        for (let c = 0; c < sec_width; c++){\r\n          if (coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor === defaultCol) continue\r\n          context.fillStyle = coloringFormStore.coloringFormData[i].drawingSectionData[r].rowData[c].pixelColor\r\n          context.fillRect((px_width * c) + offset, px_height * r, px_width, px_height)\r\n        }\r\n      }\r\n      var texture = canvas.toDataURL(\"image/png\", 1.0)\r\n      modelStore.storePic(texture)\r\n    }\r\n    coloringFormStore.setMsg(\"error\")\r\n  }, [])\r\n\r\n  return (\r\n    // <canvas ref={canvasRef}/> // to test texture generation\r\n    <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: '600px'}}>\r\n      <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '52%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: \"80%\", borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {0.8}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {0.8}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.3} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.1} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.1} />\r\n            {coloringFormStore.model === \"vase\" && <ResultVase vaseStore={vaseStore} />}\r\n            {coloringFormStore.model === \"swan\" && <Swan swanStore={swanStore} result={true}/>}\r\n            {coloringFormStore.model === \"fig\" && <ResultFigurine figStore={figStore}/>}\r\n            {coloringFormStore.model === \"basket\" && <ResultBasket basketStore={basketStore} />}\r\n          </Canvas>\r\n        <div className=\"containerCaption\">\r\n            <div style={{height: 10}}></div>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 10}}></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"containerRight\" style={{width: '48%', height: \"100%\", overflow: 'visible', float:'right', alignItems:\"center\", justifyContent:\"center\", position: \"relative\"}}>\r\n        <canvas style={{display:\"none\"}} ref={canvasRef}/>\r\n        <img alt={\"\"} src={upperbanner} className=\"banner\" style={{marginTop: 2}}/>\r\n        <div className = \"done-button\"\r\n          onClick={() => coloringFormStore.saveDiagram()}> \r\n          <p className = \"download-label\"><span><FiDownload size={20}/></span> download 3d-o diagram <span><FiDownload size={20}/></span></p>\r\n        </div>\r\n        <img alt={\"\"} src={lowerbanner} className=\"banner-b\"  />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Result);","import React, {useState} from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport Landing from './landing';\r\nimport About from './about';\r\nimport Learn from './learn';\r\nimport Contact from './contact';\r\nimport Create from './create';\r\nimport Gallery from './gallery';\r\nimport Browse from './browse';\r\nimport Login from './login';\r\nimport CreateSwan from \"./create-swan\"\r\nimport CreateVase from \"./create-vase\"\r\nimport CreateBasket from \"./create-basket\"\r\nimport CreateFigurine from \"./create-figurine\"\r\nimport Result from \"./result\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useStores } from \"../models/RootStoreContext\"\r\nimport '../App.css'\r\nimport { firestore } from '../firebase';\r\n\r\nconst Home = () => {\r\n\r\n  const {coloringFormStore} = useStores();\r\n  const [diagram_num, set_diagram_num] = useState(\"\");\r\n\r\n  const docRef = firestore.collection(\"diagrams_count\").doc(\"count\")\r\n\r\n  docRef.get().then((doc) => {\r\n    // Document was found in the cache. If no cached document exists,\r\n    // an error will be returned to the 'catch' block below.\r\n    set_diagram_num(doc.data().count_value)\r\n  }).catch((error) => {\r\n    console.log(\"Error getting cached document:\", error);\r\n  });\r\n\r\n  return (\r\n  <div className=\"Background\">\r\n    <div className=\"InnerApp\"> \r\n      <Navbar/>\r\n      <Switch>\r\n        <Route path='/about' component={About} />\r\n        <Route path='/create' component={Create} />\r\n        <Route path='/learn' component={Learn} />\r\n        <Route path='/contact' component={Contact} />\r\n        <Route path='/gallery' component={Gallery} />\r\n        <Route path='/browse' component={Browse} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/create-swan' component={CreateSwan} />\r\n        <Route path='/create-vase' component={CreateVase} />\r\n        <Route path='/create-basket' component={CreateBasket} />\r\n        <Route path='/create-figurine' component={CreateFigurine} />\r\n        <Route path='/result'>\r\n          {coloringFormStore.resultMsg === \"error\" ? <Redirect to=\"/create\"/> : <Result />}\r\n        </Route>\r\n        <Route path='/' component={Landing}/>\r\n      </Switch>\r\n    </div>\r\n    <p className=\"generated-count\"><span>{diagram_num}</span> 3d-o diagram{diagram_num == 1?\"\":\"s\"} generated to date ...</p>\r\n    <p className=\"bottom-name\">Lina Nguyen 🍓 2021</p>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect} from \"react\";\r\nimport \"./pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Pixel = (props) => {\r\n  const {formObject, PxModel} = props;\r\n\r\n  function borderColor() {\r\n    var color = PxModel.pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true)\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(PxModel.pixelColor === formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n    if (PxModel.pixelColor !== PxModel.oldColor){\r\n      formObject.updateCounter(PxModel.oldColor, PxModel.pixelColor)\r\n      PxModel.setOldColor(PxModel.pixelColor)\r\n    } \r\n    PxModel.setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    PxModel.setOldColor(PxModel.pixelColor);\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (PxModel.canChangeColor) {\r\n      PxModel.setPixelColor(PxModel.oldColor);\r\n    }\r\n\r\n    PxModel.setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: PxModel.pixelColor, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {PxModel.inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(Pixel);","import React, { useState } from \"react\";\r\nimport \"./specialPixel.css\";\r\n\r\nexport default function SpecialPixel(props) {\r\n  const {on, num, markerNum, displayRowNum, rounded} = props;\r\n\r\n  if (on){\r\n    if (markerNum){\r\n      return (\r\n        <div\r\n          className=\"specialPixelOn\"\r\n        ><p style={{marginTop: -4, fontSize: 10, marginLeft: -1.6, position:'absolute', background: \"#FF6C7B\", paddingLeft: 2.5, paddingRight:3, paddingBottom:0.3, borderRadius:8, color:\"white\"}}> {markerNum}</p></div>\r\n      );\r\n    } else {\r\n      if (rounded){\r\n        return (\r\n          <div className=\"roundedRight\"\r\n          ></div>\r\n        );\r\n      }\r\n      else{\r\n        return (\r\n          <div className=\"specialPixelOn\"\r\n          ></div>\r\n        );\r\n      }\r\n    }\r\n  } \r\n  else {\r\n    if (displayRowNum){\r\n      return (\r\n        <div\r\n          className=\"rowMarkerPixel\"\r\n        >\r\n          <p style={{fontSize:9, marginLeft: 5, marginTop:-0.5, position:'absolute'}}>{displayRowNum}</p>\r\n          </div>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <div\r\n          className=\"specialPixelOff\"\r\n        >\r\n          <p style={{fontSize:10, marginLeft: 4, marginTop: -4, position:'absolute'}}>{num}</p>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n}","import React, {useEffect} from \"react\";\r\nimport \"./row.css\";\r\nimport Pixel from \"../Pixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst Row = (props) => {\r\n  const {formObject, RowModel} = props;\r\n  let pixels = [];\r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  if (RowModel.rowData.length == 0){\r\n    for (let i = 0; i < RowModel.width; i++) {\r\n      RowModel.addPx()\r\n    }\r\n  }\r\n  for (let i = 0; i < RowModel.width; i++) {\r\n    if(formObject.inverted) RowModel.rowData[i].setInverted()\r\n    pixels.push(<Pixel key={i} formObject={formObject} PxModel={RowModel.rowData[i]}/>);\r\n  }\r\n\r\n  pixels.push(<SpecialPixel key={RowModel.width} on={false} displayRowNum={RowModel.displayRowNum} />)\r\n\r\n  return <div style={{marginLeft: RowModel.offset}} className=\"row\">{pixels}</div>;\r\n}\r\n\r\nexport default observer(Row)","import React from \"react\";\r\nimport \"./specialRow.css\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\n\r\n// at least one of specialTop or specialBottom != null \r\n\r\nexport default function SpecialRow(props) {\r\n  const { width, offset, specialTop, specialBottom } = props;\r\n\r\n  let pixels = [];\r\n\r\n  const my_dict = specialBottom ? specialBottom : specialTop\r\n  let count = 0 \r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} num={\"\"}/>)\r\n\r\n  for (let i = 0; i < width; i++) {\r\n    if (i in my_dict){\r\n      if (my_dict[i] == 1){\r\n        count += 1\r\n        pixels.push(<SpecialPixel key={i} on={true} markerNum={count}/>);\r\n      }\r\n      else if (my_dict[i] == -1){\r\n        pixels.push(<SpecialPixel key={i} on={true} rounded={true}/>);\r\n      }\r\n      else if (i == width-1 && my_dict[i] == 0){\r\n        pixels[0] = <SpecialPixel key={i} on={true}/>\r\n      }\r\n      else{\r\n        pixels.push(<SpecialPixel key={i} on={true}/>);\r\n      }\r\n    }\r\n    else{\r\n        pixels.push(<SpecialPixel key={i} on={false} num = {i+1}/>);\r\n    }\r\n  }\r\n\r\n  return <div style={{marginLeft: offset}} className=\"specialRow\">{pixels}</div>;\r\n}","import React, { useEffect, useState, useRef} from \"react\";\r\nimport \"../Pixel/pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedPixel = (props) => {\r\n  const {formObject, inverted} = props;\r\n\r\n  const [pixelColor, setPixelColor] = useState(formObject.defaultColor);\r\n  const [oldColor, setOldColor] = useState(pixelColor);\r\n  const [canChangeColor, setCanChangeColor] = useState(true);\r\n\r\n  function borderColor() {\r\n    var color = pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n  \r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true, true)\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(pixelColor == formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    setPixelColor(formObject.selectedColor);\r\n    if (pixelColor != oldColor){\r\n      formObject.updateCounter(oldColor, pixelColor)\r\n      setOldColor(pixelColor)\r\n    }\r\n    setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    setOldColor(pixelColor);\r\n    setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (canChangeColor) {\r\n      setPixelColor(oldColor);\r\n    }\r\n\r\n    setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: pixelColor, width: 20, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(UntrackedPixel);","import React, {useEffect} from \"react\";\r\nimport \"../Row/row.css\";\r\nimport UntrackedPixel from \"../UntrackedPixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst UntrackedRow = (props) => {\r\n  const {wing, formObject, numPx, offset, display, inverted} = props;\r\n  let pixels = [];\r\n\r\n  if(display) pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={display}/>)\r\n\r\n  for (let i = 0; i < numPx; i++) {\r\n    pixels.push(<UntrackedPixel key={i} formObject={formObject} inverted={inverted} />);\r\n  }\r\n\r\n  if (!wing) pixels.push(<SpecialPixel key={numPx} on={false} displayRowNum={display} />)\r\n  \r\n  return <div style={{marginLeft: offset}} className=\"row\">{pixels}</div>;\r\n  \r\n}\r\n\r\nexport default observer(UntrackedRow)","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\nimport SpecialRow from \"../SpecialRow\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst TriangleSection = (props) => {\r\n  const {wing, caption, width, formObject, elevation, firstRowDisplay, inverted} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = [];\r\n  \r\n  // height = width \r\n  const px_width = 21 // 21 is the px width w border\r\n  for (let i = 0; i < width; i++) {\r\n    let var_offset = (0.5*(px_width)*(width-i-1))\r\n    let displayNum = elevation+width-i\r\n    if (!firstRowDisplay){\r\n      if (i < width - 1) var_offset = (0.5*(px_width)*(width-i-3))\r\n      else displayNum = false\r\n    }\r\n    rows.push(<UntrackedRow key={i} wing={wing} numPx={i+1} offset={var_offset} formObject={formObject} display={displayNum} inverted={inverted}/>);\r\n    if (!wing && i == width-1){\r\n      rows.push(<SpecialRow key={i+1} width={width} offset={var_offset} specialTop = {{}}/>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"triangleSection\">\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 0, marginLeft: 0, marginRight:0}}>\r\n        {caption && <p id=\"text\">{caption}</p>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(TriangleSection)","  \r\nimport React, { useRef} from \"react\";\r\nimport \"./drawingSection.css\";\r\nimport Row from \"../Row\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport TriangleSection from \"../TriangleSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// import { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nconst DrawingSection = (props) => {\r\n  const {caption, specialTop, specialBottom, formObject, DrawingSectionModel} = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = []; \r\n  let swanUpper = [];\r\n\r\n  if (formObject.model === \"swan\"){\r\n    if (formObject.swan_two_wings){\r\n      const wing_width = Math.round(0.4 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - (2 * wing_width)\r\n      const chest_width = Math.ceil(remainder/2)\r\n      const back_width = Math.floor(remainder/2)\r\n      const wing1 = <TriangleSection key={0} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true}/> \r\n      const wing2 = <TriangleSection key={1} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} /> \r\n      const chest = <TriangleSection key={2} wing={true} width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} />\r\n      const back = <TriangleSection key={3} wing={true} width={back_width} formObject={formObject} elevation={DrawingSectionModel.height} inverted={true}/>\r\n      swanUpper.push(wing1, chest, wing2, back)\r\n    } \r\n    else {\r\n      const wing_width = Math.round(0.75 * DrawingSectionModel.width)\r\n      const remainder = DrawingSectionModel.width - wing_width\r\n      const chest_width = remainder - 2\r\n      const wing = <TriangleSection key={0} wing={true} width={wing_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} inverted={true}/> \r\n      const chest = <TriangleSection key={1} wing={true} width={chest_width} formObject={formObject} elevation={DrawingSectionModel.height} firstRowDisplay={true} />\r\n      swanUpper.push(wing, chest)\r\n    }\r\n  }\r\n\r\n  if (formObject.model != \"swan\") rows.push(<SpecialRow key={-1} offset={0} width={DrawingSectionModel.width} specialTop={specialTop} />)\r\n  \r\n  if(DrawingSectionModel.drawingSectionData.length === 0){\r\n    for (let i = 0; i < DrawingSectionModel.height; i++){\r\n      DrawingSectionModel.addRow()\r\n    }\r\n  }\r\n  for (let i = 0; i < DrawingSectionModel.height; i++) {\r\n    DrawingSectionModel.drawingSectionData[i].setWidth(DrawingSectionModel.width)\r\n    DrawingSectionModel.drawingSectionData[i].setDisplayRowNum(DrawingSectionModel.height-i)\r\n    if (i%2 === 1){\r\n      DrawingSectionModel.drawingSectionData[i].setOffset()\r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n    else{ \r\n      rows.push(<Row key={i} formObject={formObject} RowModel={DrawingSectionModel.drawingSectionData[i]}/>);\r\n    }\r\n  }\r\n  \r\n  if(DrawingSectionModel.increasing){\r\n    if (DrawingSectionModel.height%2 === 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5*2} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (DrawingSectionModel.height%2 === 1){\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={0} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={DrawingSectionModel.height} offset={10.5} width={DrawingSectionModel.width} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" ref={panelRef} style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {formObject.model === \"swan\" && <div style={{display:\"flex\", alignItems:\"flex-end\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n          {swanUpper}\r\n        </div>}\r\n        {caption && <p id=\"text\">{caption}</p>}\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(DrawingSection)","import React, {useRef} from 'react';\r\nimport DrawingSection from \"../DrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst OrigamiObject = (props) => {\r\n    const {caption, dimensions, formObject} = props;\r\n  \r\n    const objectRef = useRef();\r\n\r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    if (formObject.model === \"swan\"){\r\n      specialTop = Array(dimensions.length).fill({})\r\n      specialBottom = Array(dimensions.length).fill({})\r\n    }\r\n    else {\r\n      if (dimensions.length > 1 && dimensions[dimensions.length-2][0] < dimensions[dimensions.length-1][0]) formObject.setInverted()\r\n\r\n      for (let i = dimensions.length-2; i >= 0; i--){\r\n        let sTopCurr = {}\r\n        let sBottomCurr = {}\r\n\r\n        const curr = dimensions[i+1][0]\r\n        const next = dimensions[i][0]\r\n        let diff = next-curr // number of pieces need to add or subtract \r\n\r\n        let distribute = 0 \r\n        let remainder = 0\r\n        let spacing = 0\r\n        if (diff === 0){\r\n          specialTop = Array(dimensions.length).fill({})\r\n          specialBottom = Array(dimensions.length).fill({})\r\n        }\r\n        else if (diff > 0){ // increasing - 2 pcs per increase\r\n          sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n          distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n          remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = -1\r\n            idx += spacing_arr[i] + 2\r\n            i += 1 \r\n          }\r\n          let last_idx = 2\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n            sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 3\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)    \r\n          increasing.unshift(true) \r\n        } \r\n        else { // decreasing \r\n          sBottomCurr = {0: 1, 1: -1}\r\n          diff = -1 * diff\r\n          distribute = curr - (3 * diff)\r\n          remainder = distribute % diff\r\n          spacing = Math.floor(distribute/diff)\r\n          let spacing_arr = Array(diff).fill(spacing)\r\n          for (let i = 0; i < 2; i++){\r\n            let j = i\r\n            while (j < diff && remainder > 0){\r\n              spacing_arr[j] += 1 \r\n              remainder -= 1 \r\n              j += 2 \r\n            }\r\n          }\r\n          let i = 0 \r\n          let idx = 0 \r\n          while(i < diff){\r\n            sTopCurr[idx] = 1\r\n            sTopCurr[idx+1] = 0\r\n            sTopCurr[idx+2] = -1\r\n            idx += spacing_arr[i] + 3\r\n            i += 1 \r\n          }\r\n          let last_idx = 1\r\n          for (let i = 0; i < spacing_arr.length-1; i ++){\r\n            sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n            sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n            last_idx = last_idx + spacing_arr[i] + 2\r\n          }  \r\n          specialTop.unshift(sTopCurr)\r\n          specialBottom.unshift(sBottomCurr)  \r\n          increasing.unshift(false)\r\n        }\r\n      }\r\n      if (formObject.model === \"fig\"){\r\n        specialTop[specialTop.length-1] = {}\r\n        specialBottom[specialBottom.length-1] = {}\r\n      } \r\n      specialTop.unshift({})\r\n      specialBottom.push({})\r\n      increasing.push(false)\r\n    }\r\n\r\n    let sections = [];\r\n  \r\n    if (formObject.coloringFormData.length == 0){\r\n      for (let i = 0; i < dimensions.length; i++) {\r\n        formObject.addDrawingSection()\r\n      }\r\n    }\r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      formObject.coloringFormData[i].setWidthHeight(dimensions[i][0], dimensions[i][1])\r\n      formObject.coloringFormData[i].setIncreasing(increasing[i])\r\n      let caption = false\r\n      if (formObject.model === \"fig\" && i === dimensions.length-1) caption = \"figurine body\"\r\n      sections.push(<DrawingSection key={i} caption={caption} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} formObject={formObject} DrawingSectionModel={formObject.coloringFormData[i]} />);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        <div id=\"sections\" ref={objectRef}>\r\n          <p id=\"text\">{caption}</p>\r\n          {sections}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(OrigamiObject)","export default __webpack_public_path__ + \"static/media/rim.90d28599.png\";","export default __webpack_public_path__ + \"static/media/halfRim.934ee4ec.png\";","export default __webpack_public_path__ + \"static/media/neck.d9f33158.png\";","import React from \"react\";\r\nimport rim_image from \"../../assets/rim.png\";\r\nimport half_rim_image from \"../../assets/halfRim.png\";\r\nimport neck_image from \"../../assets/neck.png\"\r\nimport \"./rim.css\"\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\n// input 'length' doesn't have to be int\r\n\r\nconst Rim = (props) => {\r\n    const {swan, full, caption, length, upsize} = props \r\n\r\n    function cmToPcs(cm, height=false){\r\n        const height_factor = upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(cm/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    }\r\n    \r\n    const num_pcs = cmToPcs(length,true)\r\n\r\n    return (\r\n        <div className=\"rimDiv\">\r\n            <p id=\"text\">{caption}</p>\r\n            {full && <img src={rim_image} className=\"rim\" />}\r\n            {!full && !swan  && <img src={half_rim_image} className=\"half_rim\" />}\r\n            {swan && <img src={neck_image} className=\"neck\" />} \r\n            <p id=\"text\">{num_pcs} pieces</p>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Rim;","  \r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"../DrawingSection/drawingSection.css\";\r\nimport UntrackedRow from \"../UntrackedRow\";\r\nimport SpecialRow from \"../SpecialRow\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedDrawingSection = (props) => {\r\n  const {arm, open, bunny, specialTop, specialBottom, increasing, formObject, dimensions} = props;\r\n\r\n  let rows = []; \r\n  let inverted = false\r\n\r\n  if (!bunny) rows.push(<SpecialRow key={-1} offset={0} width={dimensions[0]} specialTop={specialTop} />)\r\n  else{\r\n    const end_width = Math.floor(dimensions[0]*(0.5))\r\n    const num_rows = dimensions[0] - end_width\r\n    for (let i = 0; i < num_rows; i++){\r\n      rows.push(<UntrackedRow key={dimensions[1]+1+i} numPx={end_width+i} offset={10.5*(num_rows-i)} formObject={formObject} display={dimensions[1]+num_rows-i} inverted={inverted}/>)\r\n    }\r\n\r\n  }\r\n  \r\n  for (let i = 0; i < dimensions[1]; i++) {\r\n    arm && i == dimensions[1]-1 ? inverted = true : inverted = false\r\n    if (i%2 == 1){\r\n      let numPx = dimensions[0]\r\n      if (open) numPx -= 1\r\n      rows.push(<UntrackedRow key={i} numPx={numPx} offset={10.5} formObject={formObject} display={dimensions[1]-i} inverted={inverted}/>);\r\n    }\r\n    else{ \r\n      rows.push(<UntrackedRow key={i} numPx={dimensions[0]} offset={0} formObject={formObject} display={dimensions[1]-i} inverted={inverted}/>);\r\n    }\r\n  }\r\n  \r\n  if(increasing){\r\n    if (dimensions[1]%2 == 1){\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5*2} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    }\r\n  }\r\n  else{\r\n    if (dimensions[1]%2 == 1){\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={0} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    } else {\r\n      rows.push(<SpecialRow key={dimensions[1]} offset={10.5} width={dimensions[0]} specialBottom={specialBottom} />)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div id=\"drawingSection\" >\r\n      <div id=\"pixels\" style={{marginBottom: 10, marginLeft: 40, marginRight: 40}}>\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(UntrackedDrawingSection)","import React, {useRef} from 'react';\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst UntrackedOrigamiObject = (props) => {\r\n    const {dimensions, formObject} = props;\r\n  \r\n    let increasing = []\r\n    let specialTop = []\r\n    let specialBottom = []\r\n\r\n    for (let i = dimensions.length-2; i >= 0; i--){\r\n      let sTopCurr = {}\r\n      let sBottomCurr = {}\r\n\r\n      const curr = dimensions[i+1][0]\r\n      const next = dimensions[i][0]\r\n      let diff = next-curr // number of pieces need to add or subtract \r\n\r\n      let distribute = 0 \r\n      let remainder = 0\r\n      let spacing = 0\r\n      \r\n      if (diff == 0){\r\n        specialTop = Array(dimensions.length).fill({})\r\n        specialBottom = Array(dimensions.length).fill({})\r\n      }\r\n      else if (diff > 0){ // increasing - 2 pcs per increase\r\n        sBottomCurr  = {0: 1, 1: 0, 2: -1}\r\n        distribute = curr - (2 * diff)// pieces left to distribute for spacing \r\n        remainder = distribute >= 0 ? distribute % diff : curr-diff\r\n        spacing = Math.floor(distribute/diff)\r\n        let spacing_arr = Array(diff).fill(spacing)\r\n        for (let i = 0; i < 2; i++){\r\n          let j = i\r\n          while (j < diff && remainder > 0){\r\n            spacing_arr[j] += 1 \r\n            remainder -= 1 \r\n            j += 2 \r\n          }\r\n        }\r\n        let i = 0 \r\n        let idx = 0 \r\n        while(i < diff){\r\n          sTopCurr[idx] = 1\r\n          sTopCurr[idx+1] = -1\r\n          idx += spacing_arr[i] + 2\r\n          i += 1 \r\n        }\r\n        let last_idx = 2\r\n        for (let i = 0; i < spacing_arr.length-1; i ++){\r\n          sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n          sBottomCurr[last_idx + spacing_arr[i] + 2] = 0\r\n          sBottomCurr[last_idx + spacing_arr[i] + 3] = -1\r\n          last_idx = last_idx + spacing_arr[i] + 3\r\n        }  \r\n        specialTop.unshift(sTopCurr)\r\n        specialBottom.unshift(sBottomCurr)    \r\n        increasing.unshift(true) \r\n      } \r\n      else { // decreasing \r\n        sBottomCurr = {0: 1, 1: -1}\r\n        diff = -1 * diff\r\n        distribute = curr - (3 * diff)\r\n        remainder = distribute % diff\r\n        spacing = Math.floor(distribute/diff)\r\n        let spacing_arr = Array(diff).fill(spacing)\r\n        for (let i = 0; i < 2; i++){\r\n          let j = i\r\n          while (j < diff && remainder > 0){\r\n            spacing_arr[j] += 1 \r\n            remainder -= 1 \r\n            j += 2 \r\n          }\r\n        }\r\n        let i = 0 \r\n        let idx = 0 \r\n        while(i < diff){\r\n          sTopCurr[idx] = 1\r\n          sTopCurr[idx+1] = 0\r\n          sTopCurr[idx+2] = -1\r\n          idx += spacing_arr[i] + 3\r\n          i += 1 \r\n        }\r\n        let last_idx = 1\r\n        for (let i = 0; i < spacing_arr.length-1; i ++){\r\n          sBottomCurr[last_idx + spacing_arr[i] + 1] = 1\r\n          sBottomCurr[last_idx + spacing_arr[i] + 2] = -1\r\n          last_idx = last_idx + spacing_arr[i] + 2\r\n        }  \r\n        specialTop.unshift(sTopCurr)\r\n        specialBottom.unshift(sBottomCurr)  \r\n        increasing.unshift(false)\r\n      }\r\n    }\r\n    specialTop.unshift({})\r\n    specialBottom.push({})\r\n    increasing.push(false)\r\n\r\n    let sections = [];\r\n  \r\n    for (let i = 0; i < dimensions.length; i++) {\r\n      sections.push(<UntrackedDrawingSection key={i} specialTop = {specialTop[i]} specialBottom = {specialBottom[i]} increasing={increasing[i]} formObject={formObject} dimensions={dimensions[i]}/>);\r\n    }\r\n    return (\r\n      <div id=\"origamiObject\">\r\n        {sections}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(UntrackedOrigamiObject)","import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nfunction getDimensions(widths, heights) {\r\n    let curr_section = []\r\n    // getting from diameter to diameter in 'height' pieces\r\n    for (let i = 0; i < widths.length-1; i++){\r\n        const min_height = 3\r\n        let min_height_needed = min_height\r\n        let diff = widths[i+1]-widths[i]\r\n        let height_diff = heights[i+1] - heights[i]\r\n\r\n        let temp_dbottom = widths[i]\r\n        \r\n        // increasing\r\n        if (diff > 0){\r\n            curr_section.push([temp_dbottom,min_height])\r\n            while (diff > 0){\r\n                const add_to_this_row = Math.floor(temp_dbottom/min_height)\r\n                const actual_add = Math.min(diff, add_to_this_row)\r\n                diff -= actual_add \r\n                temp_dbottom += actual_add\r\n                if (diff == 0 && i < widths.length-2) break\r\n                min_height_needed += min_height\r\n                curr_section.unshift([temp_dbottom, min_height])\r\n            }\r\n        }\r\n        // decreasing\r\n        else if (diff < 0){\r\n            diff = diff * -1\r\n            curr_section.push([temp_dbottom,min_height])\r\n            while (diff > 0) {\r\n                const sub_from_this_row = Math.floor(temp_dbottom/4)\r\n                const actual_sub = Math.min(diff, sub_from_this_row)\r\n                diff -= actual_sub\r\n                temp_dbottom -= actual_sub\r\n                if (diff == 0 && i < widths.length-2) break\r\n                min_height_needed += min_height\r\n                curr_section.unshift([temp_dbottom,min_height])\r\n            }            \r\n        }\r\n        let excess_height = height_diff-min_height_needed\r\n        while (excess_height>0){\r\n            curr_section[excess_height%curr_section.length][1] += 1\r\n            excess_height -= 1\r\n        }\r\n    }\r\n    return curr_section\r\n}\r\n\r\nconst Bottom = (props) => {\r\n    const {flat, upsize, diameter, caption, formObject} = props \r\n    let object = <div></div>\r\n    let dimensions = []\r\n\r\n    function cmToPcs(cm, height=false){\r\n        const height_factor = upsize? 0.7: 0.55 // 0.5 cm height per row\r\n        const width_factor = upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n        if (height){\r\n            return Math.round(cm/height_factor)\r\n        }\r\n        return Math.round(cm/width_factor)\r\n    }\r\n\r\n    if (flat){\r\n        const rows = [[192,10],[160,8],[128,5],[96,5],[64,4],[48,4],[32,3],[16,3],[8,2],[4,2]] // backwards\r\n        let tot_height = Math.ceil(cmToPcs(diameter/2, true))\r\n        while (tot_height > 0){\r\n            const curr_row = rows.pop()\r\n            dimensions.unshift([curr_row[0], Math.min(tot_height,curr_row[1])])\r\n            tot_height -= curr_row[1]\r\n        } \r\n        object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n    }\r\n    else{\r\n        // curved bottom/lid for basket\r\n        const widths = [4,cmToPcs(diameter * Math.PI)]\r\n        const heights = [0,Math.ceil(diameter/4)]\r\n        dimensions = getDimensions(widths, heights) // top to bottom \r\n        object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Bottom;","import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Arm = (props) => {\r\n    const {caption, size, formObject} = props;\r\n    const arms = {\r\n        small: [10,4],\r\n        med: [15,6], \r\n        big: [20,8]\r\n    }\r\n    let dimensions = arms.med\r\n    if (size == \"small\") dimensions = arms.small\r\n    else if (size == \"big\") dimensions = arms.large\r\n    const object = <UntrackedDrawingSection arm={true} specialTop = {[]} specialBottom = {[]} formObject={formObject} dimensions={dimensions}/>\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Arm;","import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst BunnyOrHandle = (props) => {\r\n    const {caption, size, formObject, upsize} = props;\r\n    let object = <div></div>\r\n    let height = 0\r\n    const lim = 50\r\n\r\n    function cmToPcs(cm, height=false){\r\n      const height_factor = upsize? 0.7: 0.55 // 0.5 cm height per row\r\n      const width_factor = upsize? 1.2 : 0.8 // 0.8 cm width per pc\r\n      if (height){\r\n          return Math.round(cm/height_factor)\r\n      }\r\n      return Math.round(cm/width_factor)\r\n    }\r\n\r\n    if (caption == \"bunny ear\"){\r\n        // height has to be odd number to have the base bigger\r\n        object = <UntrackedDrawingSection bunny={true} open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[size,(2*size)+1]} />\r\n    }\r\n    else {\r\n        height = cmToPcs(1.2 * size * Math.PI/2, true) // length of the handle = a bit more than hemisphere\r\n        const input_height = Math.min(height, lim)\r\n        const width = cmToPcs((38/360) * size * Math.PI)\r\n        object = <UntrackedDrawingSection open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[width,input_height]} />\r\n    }\r\n\r\n    return (    \r\n      <div>\r\n        <p id=\"text\">{caption}</p>\r\n        {object}\r\n        {height > lim && <p id=\"text\">+ {height-lim} more rows ...</p>}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default BunnyOrHandle;","import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Sphere = (props) => {\r\n    const {size, caption, formObject} = props \r\n    let object = <div></div>\r\n    const spheres = {\r\n        small: [[4,2],[6,2],[8,5],[4,2]],\r\n        med: [[8,2],[10,2],[12,2],[16,4],[8,2],[4,2]],\r\n        big: [[16,2],[19,3],[23,2],[24,4],[16,3],[8,1],[4,2]]\r\n    }\r\n    let dimensions = spheres.med\r\n    if (size == \"small\") dimensions = spheres.small\r\n    else if (size == \"big\") dimensions = spheres.big\r\n    else {console.log(\"med\")}\r\n\r\n    object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Sphere;","import React from 'react';\r\nimport { observer } from \"mobx-react\";\r\nimport Rim from \"../Rim\";\r\nimport Bottom from \"../Bottom\";\r\nimport Arm from \"../Arm\"\r\nimport BunnyOrHandle from \"../BunnyOrHandle\"\r\nimport TriangleSection from \"../TriangleSection\"\r\nimport Sphere from \"../Sphere\"\r\n\r\nconst Appendages = (props) => {\r\n    const {modelStore, formObject} = props;\r\n  \r\n    let bottoms = []\r\n    let sections = []\r\n    let rims = []\r\n    let key = 0\r\n    const conv = 2.54\r\n\r\n    if (modelStore.flat_bottom){\r\n      const dbottom = modelStore.cm? modelStore.dbottom: modelStore.dbottom * conv\r\n      bottoms.push(<Bottom key={key} caption={\"flat bottom\"} flat={true} diameter={dbottom} lid={false} formObject={formObject} upsize={modelStore.upsize}/>)\r\n      key += 1\r\n    }\r\n    else if (formObject.model === \"basket\"){\r\n      const dbottom = modelStore.cm? modelStore.dbottom: modelStore.dbottom * conv\r\n      bottoms.push(<Bottom key={key} caption={\"curved bottom\"} flat={false} diameter={dbottom} lid={false} formObject={formObject} upsize={modelStore.upsize}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.lid){\r\n      const dtop = modelStore.cm? modelStore.dtop: modelStore.dtop * conv\r\n      const handle_size = modelStore.dtop <= 15? \"small\": modelStore.dtop >= 35? \"big\":\"med\"\r\n      bottoms.push(<Bottom key={key} caption={\"lid\"} flat={false} diameter={dtop} formObject={formObject} upsize={modelStore.upsize}/>)\r\n      key += 1\r\n      sections.push(<Sphere key={key} caption={\"lid handle\"} size={handle_size} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.top_handle){\r\n      const dtop = modelStore.cm? modelStore.dtop: modelStore.dtop * conv\r\n      sections.push(<BunnyOrHandle key={key} caption={\"top handle\"} size={dtop} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.arms){\r\n      const diameter = modelStore.cm? modelStore.diameter : modelStore.diameter * conv\r\n      const size = diameter <= 15? \"small\": diameter >= 35? \"big\":\"med\"\r\n      sections.push(<Arm key={key} caption={\"arm\"} size={size} formObject={formObject}/>)\r\n      key += 1\r\n      sections.push(<Arm key={key} caption={\"arm\"} size={size} formObject={formObject}/>)\r\n      key += 1\r\n    }\r\n    if (modelStore.ears !== \"\"){\r\n      const ear_scale = 2\r\n      const diameter = modelStore.cm? modelStore.diameter : modelStore.diameter * conv\r\n      const ear_d = Math.ceil(diameter/ear_scale)\r\n      if (modelStore.ears === \"bear\"){\r\n        sections.push(<Rim key={key} full={false} caption={\"bear ear\"} length={ear_d*1.3} upsize={modelStore.upsize}/>)\r\n        key += 1\r\n        sections.push(<Rim key={key} full={false} caption={\"bear ear\"} length={ear_d*1.3} upsize={modelStore.upsize}/>)\r\n        key += 1 \r\n      }\r\n      else if (modelStore.ears === \"bunny\"){\r\n        sections.push(<BunnyOrHandle key={key} caption={\"bunny ear\"} size={ear_d} formObject={formObject}/>)\r\n        key += 1\r\n        sections.push(<BunnyOrHandle key={key} caption={\"bunny ear\"} size={ear_d} formObject={formObject}/>)\r\n      }\r\n      else if (modelStore.ears === \"sphere\"){\r\n        sections.push(<Sphere key={key} caption={\"round ear\"} size={diameter <= 15? \"small\": diameter >= 35? \"big\":\"med\"} formObject={formObject}/>)\r\n        key += 1\r\n        sections.push(<Sphere key={key} caption={\"round ear\"} size={diameter <= 15? \"small\": diameter  >= 35? \"big\":\"med\"} formObject={formObject}/>)\r\n      }\r\n      else if (modelStore.ears === \"cat\"){\r\n        sections.push(<TriangleSection key={key} caption={\"cat ear\"} width={ear_d} formObject={formObject} elevation={0} firstRowDisplay={true} inverted={false} />)\r\n        key += 1\r\n        sections.push(<TriangleSection key={key} caption={\"cat ear\"} width={ear_d} formObject={formObject} elevation={0} firstRowDisplay={true} inverted={false} />)\r\n      }\r\n      key += 1\r\n    }\r\n    if (modelStore.side_handles){\r\n      const dtop = modelStore.cm? modelStore.dtop : modelStore.dtop * conv\r\n      const half_circ = Math.round(dtop/4) // half the circumference of the handle, ie. length of handle\r\n      rims.push(<Rim key={key} full={false} caption={\"side handle\"} length={half_circ} upsize={modelStore.upsize}/>) // static picture\r\n      key += 1\r\n      rims.push(<Rim key={key} full={false} caption={\"side handle\"} length={half_circ} upsize={modelStore.upsize}/>) \r\n      key += 1\r\n    }\r\n    if (modelStore.top_rim){\r\n      const dtop = modelStore.cm? modelStore.dtop : modelStore.dtop * conv\r\n      rims.push(<Rim key={key} full={true} caption={\"top rim\"} length={dtop} upsize={modelStore.upsize}/>) // static picture\r\n      key += 1\r\n    }\r\n    if (formObject.model === \"swan\"){\r\n      if (modelStore.bottom_rim){\r\n        const dbottom = modelStore.cm? modelStore.diameter * modelStore.bottom_scale : modelStore.diameter * modelStore.bottom_scale * conv\r\n        rims.push(<Rim key={key} full={true} caption={\"bottom rim\"} length={dbottom} upsize={modelStore.upsize}/>) // static picture\r\n        key += 1\r\n      }\r\n      const diameter = modelStore.cm? modelStore.diameter : modelStore.diameter * conv\r\n      rims.push(<Rim key={key} swan={true} caption={\"neck\"} length={diameter} upsize={modelStore.upsize}/>) // static picture\r\n      key += 1\r\n    }\r\n    if (formObject.model !== \"swan\" && modelStore.bottom_rim){\r\n      const dbottom = modelStore.cm? modelStore.dbottom : modelStore.dbottom * conv\r\n      rims.push(<Rim key={key} full={true} caption={\"bottom rim\"} length={dbottom} upsize={modelStore.upsize}/>) // static picture\r\n      key += 1\r\n    }\r\n\r\n    return (\r\n      <div id=\"Appendages\">\r\n        <div style={{display:\"inline-block\", marginLeft: 10.5, marginBottom: 3}}>\r\n          {bottoms}\r\n          <div style={{display:\"flex\", alignItems:\"flex-start\", marginLeft: 10.5, marginBottom: 3, justifyContent:\"flex-start\"}}>\r\n            {sections}\r\n            {rims}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default observer(Appendages)","import React, {useState, useRef, useEffect, useMemo} from 'react';\r\nimport { TwitterPicker } from \"react-color\";\r\nimport OrigamiObject from \"../components/OrigamiObject\";\r\nimport \"./colouringPage.css\";\r\n// import premade from \"./premade\";\r\nimport Sticky from 'react-stickynode';\r\nimport { observer } from \"mobx-react\";\r\nimport logo from \"../assets/complex-logo.png\"\r\n// import {PlainLink as Link} from '../components/Navbar/NavbarElements';\r\nimport { AiOutlineInfo } from \"react-icons/ai\";\r\nimport { FiTrash } from \"react-icons/fi\";\r\nimport { IoChevronForward, IoChevronBack } from \"react-icons/io5\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport {useStores} from \"../models/RootStoreContext\"\r\nimport DelayLink from 'react-delay-link';\r\nimport {Link} from 'react-router-dom'\r\nimport Appendages from \"../components/Appendages\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nconst Colouring = () => {\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [showPickerDefault, setShowPickerDefault] = useState(false);\r\n  const [colorPaletteIdx, setColorIdx] = useState(0);\r\n  const [dColorPaletteIdx, setDColorIdx] = useState(0);\r\n  const [colorPalette, setColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']) \r\n  const [dColorPalette, setDColorPalette] = useState(['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'])\r\n  \r\n  // useEffect(() => {\r\n  //   // // coloringFormData = drawing sections\r\n  //   // // drawingSectionData = rows\r\n  //   // // rowData = pixels\r\n  //   // if (coloringFormStore.preload){\r\n  //   //   for (let i = 0; i < premade[\"swan1\"][0].length; i++){\r\n  //   //     const curr_px = premade[\"swan1\"][0][i]\r\n  //   //     coloringFormStore.coloringFormData[curr_px[0]].drawingSectionData[curr_px[1]].rowData[curr_px[2]].setPixelColor(curr_px[3])\r\n  //   //   }\r\n  //   // }\r\n  //   coloringFormStore.setMsg(\"error\")\r\n  // }, [])\r\n\r\n  const diagramRef = useRef();\r\n  const appendagesRef = useRef();\r\n  const {coloringFormStore, vaseStore, swanStore, figStore, basketStore} = useStores();\r\n  let modelStore;\r\n  if (coloringFormStore.model === \"vase\") modelStore = vaseStore\r\n  if (coloringFormStore.model === \"swan\") modelStore = swanStore\r\n  else if (coloringFormStore.model === \"fig\") modelStore = figStore\r\n  else if (coloringFormStore.model === \"basket\") modelStore = basketStore\r\n\r\n  function changeColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setColor(search);\r\n    if (!colorPalette.includes(search)){\r\n      let new_palette = colorPalette\r\n      new_palette[colorPaletteIdx] = search\r\n      setColorPalette(new_palette)\r\n      const new_idx = (colorPaletteIdx + 1) % 10\r\n      setColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  function changeDefaultColor(color) {\r\n    const search = (color.hex).toString().toUpperCase()\r\n    coloringFormStore.setDefaultColor(search);\r\n    if (!dColorPalette.includes(search)){\r\n      let new_palette = dColorPalette\r\n      new_palette[dColorPaletteIdx] = search\r\n      setDColorPalette(new_palette)\r\n      const new_idx = (dColorPaletteIdx + 1) % 10\r\n      setDColorIdx(new_idx)\r\n    }\r\n  }\r\n\r\n  const myDimensions = useMemo(() => modelStore.getDimensions(), []);\r\n  const { width } = useWindowDimensions();\r\n  const absolute = modelStore.maxWidth > (width-200)/21 ? true : false \r\n\r\n  let myHeight = 10000\r\n  \r\n  const colorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">pixel color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={()=> setShowPicker(!showPicker)} \r\n        style={{background: coloringFormStore.selectedColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette\">\r\n        {showPicker &&  <TwitterPicker colors={colorPalette} triangle=\"top-left\" color={coloringFormStore.selectedColor} onChangeComplete={changeColor} />}\r\n      </div>\r\n    </div>\r\n  \r\n  const defaultColorPicker = <div className = \"color-picker-object\">\r\n      <p className = \"label-big\">primary color</p>\r\n      <div className = \"color-picker-cover\"\r\n        onClick={() => setShowPickerDefault(!showPickerDefault)} \r\n        style={{background: coloringFormStore.defaultColor}}\r\n      >\r\n        <br />\r\n      </div>\r\n      <div className = \"color-picker-palette-d\" >\r\n        {showPickerDefault &&  <TwitterPicker colors={dColorPalette} triangle=\"top-left\" color={coloringFormStore.defaultColor} onChangeComplete={changeDefaultColor} />}\r\n      </div>\r\n    </div>\r\n\r\n  const paintByPixel = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(false)}> \r\n      <p className = \"label-inside\">paint by pixel</p>\r\n    </div>\r\n  </div>\r\n\r\n  const sprayPaint = \r\n  <div className = \"mode-object\">\r\n    <div className = \"mode-button\"\r\n      onClick={() => coloringFormStore.setMode(true)}> \r\n      <p className = \"label-inside\">spray paint</p>\r\n    </div>\r\n  </div>\r\n\r\n  const logoObject = <div className = \"logo-object\">\r\n    <p className = \"label\" >3d-o</p>\r\n    <img className = \"logo\" src={logo} onClick={() => savePics()} alt=\"\"/>\r\n    {showInfo && <div className=\"info-popup\">info here</div>}\r\n  </div>  \r\n\r\n  function savePics(){\r\n    exportComponentAsPNG(diagramRef, {fileName: \"3do-diagram\"})\r\n    exportComponentAsPNG(appendagesRef, {fileName: \"3do-diagram-appendages\"})\r\n  }\r\n\r\n  let prevPageRoute = \"\"\r\n  switch(coloringFormStore.model){\r\n    case \"vase\": \r\n      prevPageRoute = \"/create-vase\"\r\n      break;\r\n    case \"swan\": \r\n      prevPageRoute = \"/create-swan\"\r\n      break;\r\n    case \"fig\":\r\n      prevPageRoute = \"/create-figurine\"\r\n      break;\r\n    case \"basket\":\r\n      prevPageRoute = \"/create-basket\"\r\n      break;\r\n  }\r\n\r\n  const backButton = \r\n  <div className = \"back\">\r\n    <Link delay={0} to={prevPageRoute} replace={false}>\r\n      <div className = \"nav\"> \r\n        <IoChevronBack size={25} style={{color: 'white'}}/>\r\n      </div>\r\n    </Link>\r\n  </div>\r\n\r\n\r\n  const nextButton = \r\n  <div className = \"next\">\r\n    <DelayLink delay={0} to=\"/result\" clickAction={nextPage} replace={false}>\r\n      <div className = \"nav\"> \r\n          <IoChevronForward size={25} style={{color: 'white'}}/>\r\n      </div>\r\n    </DelayLink>\r\n  </div>\r\n\r\n  function nextPage(){\r\n    coloringFormStore.setMsg(true)\r\n    coloringFormStore.exportComponent(diagramRef)\r\n    coloringFormStore.exportComponent(appendagesRef, true)\r\n    }\r\n\r\n  const clear = <div className = \"logo-object\">\r\n    <p className = \"label\">clear</p>\r\n    <div className = \"icon\"\r\n      onClick={()=> coloringFormStore.clearAll()} >\r\n      <FiTrash  size={20} style={{color: 'white'}}/>\r\n      <br />\r\n    </div>\r\n  </div>\r\n\r\n  const info = <div className = \"logo-object\">\r\n  <p className = \"label\">info</p>\r\n  <div className = \"icon\"\r\n    onClick={()=> setShowInfo(!showInfo)} \r\n    >\r\n    <AiOutlineInfo size={23} style={{color: 'white'}}/>\r\n  </div>\r\n  </div>\r\n\r\n  let caption = `${coloringFormStore.model}`\r\n  if (coloringFormStore.model === \"fig\"){\r\n    caption = \"figurine head\"\r\n  }\r\n  else if (coloringFormStore.model === \"swan\"){\r\n    caption = \"swan wings + body\"\r\n  }\r\n\r\n  function colorEntry(key, col, num){\r\n    let sheets = Math.ceil(parseInt(num)/coloringFormStore.size)\r\n    let sheetsString = \"\"\r\n    sheets > 1 ? sheetsString = \"sheets\" : sheetsString = \"sheet\"\r\n    let pieces = \"\"\r\n    parseInt(num) > 1 ? pieces = \"pieces\" : pieces = \"piece\"\r\n    return <div key={key} style={{display:'inline-block', width: '100%'}}>\r\n      \r\n      <p style={{marginTop:10, marginBottom:0, marginLeft:20, float:\"right\"}}>{num} {pieces}, {sheets} {sheetsString}</p>\r\n      <div style={{marginTop:5, marginBottom:5, borderRadius: 25, height: 35, width: 35, background: col, float:\"right\"}}></div>\r\n    </div>\r\n  }\r\n\r\n  const pc_size = modelStore.upsize ? \"1 / 16\" : \"1 / 32\"\r\n\r\n  //\"#FFE7E5\"\r\n  const stats = \r\n  <div>\r\n    <p id=\"text\">instructions + overview</p>\r\n    <div style={{width: '100%', display:'inline-block'}}>\r\n      <div id=\"text\" style={{marginTop:0, marginBottom:0, marginRight: 0, width: '500px', background: \"#FFE7E5\", float:\"left\"}}>Piece Size: <span style={{fontWeight: \"bold\"}}>{pc_size}</span></div>\r\n      <div id=\"text\" style={{marginTop:0, marginBottom:0, marginLeft: 0, width: '500px', background: \"#FFE7E5\", float:\"right\"}}>\r\n        <div>\r\n          {coloringFormStore.counter.map((col, i) => (\r\n          colorEntry(i, col[0], col[1])\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  const canvas = absolute? \r\n  <div className = \"canvas\">\r\n    <div ref = {diagramRef}>\r\n      {stats}\r\n      <OrigamiObject \r\n        caption={`${caption}`}\r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n  </div> : \r\n  <div className = \"canvas-relative\">\r\n    <div ref = {diagramRef}>\r\n      {stats}\r\n      <OrigamiObject \r\n        caption={`${caption}`}\r\n        dimensions={myDimensions}  \r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n    <div ref = {appendagesRef}>\r\n      <Appendages \r\n        dimensions={myDimensions}\r\n        modelStore={modelStore}\r\n        formObject={coloringFormStore}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <Sticky innerZ={3}>\r\n        <div className = \"toolbar\">\r\n          {backButton}\r\n          {paintByPixel}\r\n          {clear}\r\n          {colorPicker}\r\n          {logoObject}\r\n          {defaultColorPicker}\r\n          {info}\r\n          {sprayPaint}\r\n          {nextButton}\r\n        </div>\r\n      </Sticky>\r\n      <div style={{position: 'relative', overflowX:'scroll', overflowY:'hidden', height: myHeight, background:\"#FFE7E5\"}}>\r\n        {canvas}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Colouring);","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport '../App.css'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport Home from '../pages';\r\nimport Colouring from '../pages/colouring'\r\n// import makeInspectable from \"mobx-devtools-mst\";\r\nimport RootStore from \"../models/RootStore\";\r\nimport {RootStoreProvider} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst rootStore = RootStore.create()\r\n\r\n// makeInspectable(vase);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{background: \"#FFE7E5\"}}>\r\n        <RootStoreProvider value={rootStore}>\r\n          <Router>\r\n            <Switch>\r\n              <Route path='/colouring'>\r\n                {rootStore.coloringFormStore.msg === \"error\" ? <Redirect to=\"/create\"/> : <Colouring />}\r\n              </Route>\r\n              <Route path='/'>\r\n                <Home/>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </RootStoreProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\"\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById(\"root\"));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}