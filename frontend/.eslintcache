[{"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\colouring.js":"1","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\browse.js":"2","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\DrawingSection\\index.js":"3","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\BunnyOrHandle\\index.js":"4","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Basket\\index.js":"5","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Wing\\index.js":"6","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\UntrackedRow\\index.js":"7","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\UntrackedPixel\\index.js":"8","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\App.jsx":"9","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\models\\SwanStore.js":"10","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\learn.js":"11","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\contact.js":"12","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\create-vase.js":"13","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\create-swan.js":"14","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\OrigamiObject\\index.js":"15","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\models\\DrawingSectionModel.js":"16","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\models\\RowModel.js":"17","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Swan\\index.js":"18","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\ResultBasket\\index.js":"19","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Arm\\index.js":"20","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Rim\\index.js":"21","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Sphere\\index.js":"22","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\SpecialRow\\index.js":"23","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Pixel\\index.js":"24","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\models\\ColoringForm.js":"25","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\result.js":"26","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\create-basket.js":"27","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\create.js":"28","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\create-figurine.js":"29","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\models\\FigurineStore.js":"30","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Navbar\\index.js":"31","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\ResultVase\\index.js":"32","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\SpecialPixel\\index.js":"33"},{"size":10299,"mtime":1617657354360,"results":"34","hashOfConfig":"35"},{"size":892,"mtime":1617614583402,"results":"36","hashOfConfig":"35"},{"size":4225,"mtime":1617580201161,"results":"37","hashOfConfig":"35"},{"size":1386,"mtime":1616230247348,"results":"38","hashOfConfig":"35"},{"size":9132,"mtime":1615331148284,"results":"39","hashOfConfig":"35"},{"size":3993,"mtime":1614070100256,"results":"40","hashOfConfig":"35"},{"size":774,"mtime":1617489340144,"results":"41","hashOfConfig":"35"},{"size":2251,"mtime":1617571278456,"results":"42","hashOfConfig":"35"},{"size":1079,"mtime":1617580766909,"results":"43","hashOfConfig":"35"},{"size":4086,"mtime":1617579680880,"results":"44","hashOfConfig":"35"},{"size":291,"mtime":1608011948611,"results":"45","hashOfConfig":"35"},{"size":1180,"mtime":1617579783940,"results":"46","hashOfConfig":"35"},{"size":13162,"mtime":1617657741561,"results":"47","hashOfConfig":"35"},{"size":6575,"mtime":1617657710589,"results":"48","hashOfConfig":"35"},{"size":4809,"mtime":1617656855869,"results":"49","hashOfConfig":"35"},{"size":651,"mtime":1617516847222,"results":"50","hashOfConfig":"35"},{"size":685,"mtime":1617516838935,"results":"51","hashOfConfig":"35"},{"size":12024,"mtime":1615331780109,"results":"52","hashOfConfig":"35"},{"size":9369,"mtime":1616132631514,"results":"53","hashOfConfig":"35"},{"size":554,"mtime":1616230247336,"results":"54","hashOfConfig":"35"},{"size":718,"mtime":1617090707280,"results":"55","hashOfConfig":"35"},{"size":657,"mtime":1617086122404,"results":"56","hashOfConfig":"35"},{"size":1069,"mtime":1609716554127,"results":"57","hashOfConfig":"35"},{"size":2161,"mtime":1617580288542,"results":"58","hashOfConfig":"35"},{"size":5872,"mtime":1617658091967,"results":"59","hashOfConfig":"35"},{"size":5751,"mtime":1617657475373,"results":"60","hashOfConfig":"35"},{"size":11218,"mtime":1617657630323,"results":"61","hashOfConfig":"35"},{"size":1815,"mtime":1617657593792,"results":"62","hashOfConfig":"35"},{"size":6648,"mtime":1617657679816,"results":"63","hashOfConfig":"35"},{"size":4739,"mtime":1617579655031,"results":"64","hashOfConfig":"35"},{"size":1510,"mtime":1609891263039,"results":"65","hashOfConfig":"35"},{"size":4730,"mtime":1616231194191,"results":"66","hashOfConfig":"35"},{"size":1243,"mtime":1615191345966,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ub3yuq",{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"73"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"73"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\colouring.js",["146"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\browse.js",["147","148"],"import React from 'react';\r\nimport DelayLink from 'react-delay-link';\r\nimport {useStores} from \"../models/RootStoreContext\"\r\n\r\n\r\nconst Browse = () => {\r\n  const {coloringFormStore, swanStore} = useStores();\r\n\r\n  // function loadColoringPage(model){\r\n  //   if (model === \"swan\"){\r\n  //     coloringFormStore.setPreload()\r\n  //     coloringFormStore.preloadDefaultColor(\"#000000\")\r\n  //     coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  //     // set swan dimensions so SwanStore can do the calcs to getDimensions\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n    <DelayLink delay={0} to=\"/colouring\" clickAction={console.log(\"hi\")} replace={false}>\r\n      <h1>Browse</h1>\r\n    </DelayLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Browse;",["149","150"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\DrawingSection\\index.js",["151"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\BunnyOrHandle\\index.js",["152"],"import React from \"react\";\r\nimport UntrackedDrawingSection from \"../UntrackedDrawingSection\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst BunnyOrHandle = (props) => {\r\n    const {caption, size, formObject} = props;\r\n    let object = <div></div>\r\n    let sz = 0\r\n    let w_sz = 0\r\n    let input_sz = 0\r\n    const lim = 50\r\n\r\n    if (caption == \"bunny ear\"){\r\n        // height has to be odd number\r\n        object = <UntrackedDrawingSection bunny={true} open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[size,11]} />\r\n    }\r\n    else {\r\n        sz = size*21\r\n        input_sz = Math.min(sz, lim)\r\n        w_sz = size/2 \r\n        object = <UntrackedDrawingSection open={true} specialTop={[]} specialBottom={[]} formObject={formObject} dimensions={[w_sz,input_sz]} />\r\n    }\r\n\r\n    return (\r\n      // <div style={{width: (w_sz+2)*21*1.5, marginBottom: -input_sz*(Math.min(6.5, 0.08*input_sz)), marginTop: -input_sz*(Math.min(6.5, 0.08*input_sz)), marginLeft: (input_sz*7)}}>\r\n      //   <div id=\"drawingSectionRotated\">\r\n      //     {sz > lim && <p id=\"text\">+ {sz-lim} more rows ...</p>}\r\n      //     {object}\r\n      //   </div>\r\n      // </div>    \r\n      <div>\r\n        <p id=\"text\">{caption}</p>\r\n        {object}\r\n        {sz > lim && <p id=\"text\">+ {sz-lim} more rows ...</p>}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default BunnyOrHandle;","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Basket\\index.js",["153","154","155","156"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Wing\\index.js",["157","158","159","160","161","162","163","164"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\UntrackedRow\\index.js",["165"],"import React, {useEffect} from \"react\";\r\nimport \"../Row/row.css\";\r\nimport UntrackedPixel from \"../UntrackedPixel\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nconst UntrackedRow = (props) => {\r\n  const {wing, formObject, numPx, offset, display, inverted} = props;\r\n  let pixels = [];\r\n\r\n  if(display) pixels.push(<SpecialPixel key={-1} on={false} displayRowNum={display}/>)\r\n\r\n  for (let i = 0; i < numPx; i++) {\r\n    pixels.push(<UntrackedPixel key={i} formObject={formObject} inverted={inverted} />);\r\n  }\r\n\r\n  if (!wing) pixels.push(<SpecialPixel key={numPx} on={false} displayRowNum={display} />)\r\n  \r\n  return <div style={{marginLeft: offset}} className=\"row\">{pixels}</div>;\r\n  \r\n}\r\n\r\nexport default observer(UntrackedRow)","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\UntrackedPixel\\index.js",["166","167","168","169","170"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\App.jsx",[],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\models\\SwanStore.js",[],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\learn.js",[],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\contact.js",[],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\create-vase.js",["171","172","173","174","175","176"],"import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Vase from \"../components/Vase\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\nconst CreateVase = () => {\r\n\r\n  const { vaseStore, coloringFormStore} = useStores();\r\n  \r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"vase\")\r\n  }, [])\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  function MultiHandle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    if (id == \"$$-0\" || id == \"$$-4\"){\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 2,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className = \"straw\"\r\n          style={{\r\n            left: `${percent}%`,\r\n            position: 'absolute',\r\n            marginLeft: -15,\r\n            marginTop: -20,\r\n            zIndex: 3,\r\n            textAlign: 'right',\r\n            cursor: 'pointer',\r\n          }}\r\n          {...getHandleProps(id)}\r\n        >\r\n          <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 4, color: \"#fff\"}}>\r\n            {value}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  const sliderHeight = <Slider rootStyle={sliderStyle} domain={[10, 100]} step={1} mode={2} values={[vaseStore.height]} onUpdate={(val) => vaseStore.update_height(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dtop = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.dtop]} onUpdate={(val) => vaseStore.update_dtop(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d3 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d3]} onUpdate={(val) => vaseStore.update_d3(val[0])} >\r\n    <Rail>\r\n    {({ getRailProps }) => (\r\n      <div style={railStyle} {...getRailProps()} />\r\n    )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d2 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d2]} onUpdate={(val) => vaseStore.update_d2(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_d1 = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.d1]} onUpdate={(val) => vaseStore.update_d1(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const slider_dbottom = <Slider rootStyle={sliderStyle} domain={[1, 100]} step={1} mode={2} values={[vaseStore.dbottom]} onUpdate={(val) => vaseStore.update_dbottom(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n  \r\n  const dSlider = <Slider\r\n  rootStyle={sliderStyle}\r\n  domain={[0, 100]}\r\n  mode={2}\r\n  values={[0, vaseStore.d1_h, vaseStore.d2_h, vaseStore.d3_h, 100] /* three values = three handles */}\r\n  onUpdate={(val)=>vaseStore.update_d_heights(val)}\r\n  step={5}\r\n  >\r\n  <div style={railStyle} />\r\n  <Handles>\r\n    {({ handles, getHandleProps }) => (\r\n      <div className=\"slider-handles\">\r\n        {handles.map(handle => (\r\n          <MultiHandle\r\n            key={handle.id}\r\n            handle={handle}\r\n            getHandleProps={getHandleProps}\r\n          />\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Handles>\r\n  </Slider>\r\n  \r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const top_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_top_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.top_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_bottom_rim(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.bottom_rim ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const flat_bottom_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_flat_bottom(val)}\r\n          options={options}\r\n          initialSelectedIndex={vaseStore.flat_bottom ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => vaseStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={vaseStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 120], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '80%', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            {/* <ambientLight intensity={0} /> */}\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.3}/>\r\n            <spotLight position={[100, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n             {/* <spotLight position={[1, 10, 10]} angle={0.15} penumbra={1} /> */}\r\n            {/* <pointLight position={[-10, -10, -10]} /> */}\r\n            <Vase vase={vaseStore} />\r\n          </Canvas>\r\n          <div className=\"containerCaption\">\r\n            <br/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{background: '#FFE7E5', width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <div style={{display:'inline-block', width: '100%'}}>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'left', marginBottom:30, marginLeft:25, marginTop:15}}>\r\n              <p className=\"text\">height</p>\r\n              {sliderHeight}\r\n              <p className=\"text\">2nd diameter</p>\r\n              {slider_d3}\r\n              <p className=\"text\">4th diameter</p>\r\n              {slider_d1}\r\n            </div>\r\n            <div style={{background: '#FFE7E5', width: '40.5%', float: 'right', marginBottom:30, marginRight:30, marginTop:15}}>\r\n              <p className=\"text\">top diameter</p>\r\n              {slider_dtop}\r\n              <p className=\"text\">3rd diameter</p>\r\n              {slider_d2}\r\n              <p className=\"text\">bottom diameter</p>\r\n              {slider_dbottom}\r\n            </div>\r\n          </div>\r\n          <p className=\"text\">diameter heights ( % )</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {dSlider}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">top rim</p>\r\n            {top_rim_switch}\r\n          </div>\r\n          <div style={{float: 'left', width: '33.3%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom rim</p>\r\n            {bottom_rim_switch}\r\n          </div>\r\n          <div style={{float: 'right', width: '33.4%', overflow:'visible', marginTop:25, marginBottom:10}}>\r\n            <p className=\"textSwitch\">bottom cover</p>\r\n            {flat_bottom_switch}\r\n          </div>\r\n          <div style={{width: 80, marginBottom:35, display:'inline-block', marginTop: 30}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateVase);","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\create-swan.js",["177","178"],"import React, {useEffect} from \"react\";\r\nimport {\r\n  NavBtn,\r\n  NavBtnLink\r\n} from '../components/Navbar/NavbarElements';\r\nimport { Canvas} from \"react-three-fiber\";\r\nimport Swan from \"../components/Swan\"\r\nimport './create-vase.css'\r\nimport { Slider, Rail, Handles} from \"react-compound-slider\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../models/RootStoreContext\"\r\n\r\n\r\nconst CreateSwan = () => {\r\n\r\n  const { swanStore, coloringFormStore } = useStores();\r\n\r\n  useEffect(() => {\r\n    coloringFormStore.setMsg(true, \"error\")\r\n    coloringFormStore.clearColoringForm()\r\n    coloringFormStore.setModel(\"swan\", swanStore.wings)\r\n  }, [swanStore.wings])\r\n\r\n  const ears_options = [\r\n    {\r\n        label: \"∧ ∧\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"∧\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const options = [\r\n    {\r\n        label: \"y\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"n\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n  \r\n  const unitOptions = [\r\n    {\r\n        label: \"cm\",\r\n        value: true,\r\n        selectedBackgroundColor: \"#E28988\",\r\n    },  {\r\n        label: \"in\",\r\n        value: false,\r\n        selectedBackgroundColor: \"#E28988\"\r\n    }\r\n  ];\r\n\r\n  const sliderStyle = {  // Give the slider some width\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: 15,\r\n    // border: '1px solid steelblue',\r\n  }\r\n  \r\n  const railStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: 9,\r\n    // marginTop: 35,\r\n    borderRadius: 5,\r\n    backgroundColor: 'pink',\r\n  }\r\n  \r\n  function Handle({\r\n    handle: { id, value, percent },\r\n    getHandleProps\r\n  }) {\r\n    return (\r\n      <div className = \"straw\"\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          marginLeft: -15,\r\n          marginTop: -20,\r\n          zIndex: 2,\r\n          textAlign: 'right',\r\n          cursor: 'pointer',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      >\r\n        <div style={{ fontFamily: 'Arial', fontSize: 16, marginTop: 15, marginLeft: 5, position:'absolute', zIndex: 3, color: \"#fff\"}}>\r\n          {value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    \r\n  const slider_diameter = <Slider rootStyle={sliderStyle} domain={[1, 50]} step={1} mode={2} values={[swanStore.diameter]} onUpdate={(val) => swanStore.update_diameter(val[0])} >\r\n    <Rail>\r\n      {({ getRailProps }) => (\r\n        <div style={railStyle} {...getRailProps()} />\r\n      )}\r\n    </Rail>\r\n    <Handles>\r\n      {({ handles, getHandleProps }) => (\r\n        <div className=\"slider-handles\">\r\n          {handles.map(handle => (\r\n            <Handle\r\n              key={handle.id}\r\n              handle={handle}\r\n              getHandleProps={getHandleProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Handles>\r\n  </Slider>\r\n\r\nconst bottom_rim_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_bottom_rim(val)}\r\n    options={options}\r\n    initialSelectedIndex={swanStore.bottom_rim ? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\nconst wings_switch = <div className=\"switch\"  style={{width: 100, height: 50}}>\r\n<SwitchSelector\r\n    onChange={(val) => swanStore.update_wings(val)}\r\n    options={ears_options}\r\n    initialSelectedIndex={swanStore.wings? 0 : 1}\r\n    backgroundColor={\"#FFE7E5\"}\r\n    fontColor={\"#D75A58\"}\r\n    optionBorderRadius={30}\r\n/>\r\n</div>\r\n  \r\n  const units_switch = <div className=\"switch\" style={{width: 100, height: 50}}>\r\n      <SwitchSelector\r\n          onChange={(val) => swanStore.update_units(val)}\r\n          options={unitOptions}\r\n          initialSelectedIndex={swanStore.units ? 0 : 1}\r\n          backgroundColor={\"#FFE7E5\"}\r\n          fontColor={\"#D75A58\"}\r\n          optionBorderRadius={30}\r\n      />\r\n  </div>\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{background: '#FFE7E5', display: 'flex', flexDirection:'row', width: 'auto', height: 'auto'}}>\r\n        <div className=\"containerLeft\" style={{background: '#FFE7E5', width: '57%', height: 'auto',float:'left'}}>\r\n          <Canvas camera={{position:[0, 0, 80], fov:30, aspect: 800/600, near: 0.1,far: 1000}} style={{background: \"pink\", height: '400px', borderRadius:30, marginTop:'1%', marginLeft:'1%',width:'99%'}}>\r\n            <spotLight position={[-275, 150, 90]} intensity = {1.5}/>\r\n            <spotLight position={[10, 25, 90]} intensity = {1.3}/>\r\n            <spotLight position={[-150, -150, 110]} intensity = {0.6} />\r\n            <spotLight position={[150, -150, 110]} intensity={0.6} />\r\n            <spotLight position={[-10, 0, 25]} intensity={0.6} />\r\n            <Swan swanStore={swanStore} result={false}/>\r\n          </Canvas>\r\n          <div className=\"containerCaption-fig\">\r\n            <div style={{height: 13}}/>\r\n            <a>Press <span>x</span> , <span>y</span> , and <span>z</span> to rotate the object ,<br/><span>q</span> and <span>w</span> to zoom in and out , <br/>and <span>space</span> to reset view to default . </a>\r\n            <div style={{height: 13}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"containerRight\" style={{width: '43%', height: '100%', overflow: 'visible', float:'right'}}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <p className=\"textSwitch\">units</p>\r\n          {units_switch}\r\n          <br/>\r\n          <p className=\"text\">body diameter</p>\r\n          <div style={{width:'88%', marginLeft:'5%'}}>\r\n            {slider_diameter}\r\n          </div>\r\n          <br/>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">wings</p>\r\n          {wings_switch}\r\n          </div>\r\n          <div style={{display: \"inline-block\", width: \"50%\"}}>\r\n          <p className=\"text\">bottom_rim</p>\r\n          {bottom_rim_switch}\r\n          </div>\r\n          <div className=\"done-basket\" style={{width: 80, marginBottom:35}}>\r\n            <NavBtn>\r\n              <NavBtnLink style={{background: \"#D14240\"}} onClick={() => coloringFormStore.setMsg()} to='/colouring'>\r\n                <p className = \"buttonText\">done</p>\r\n              </NavBtnLink>\r\n            </NavBtn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>  \r\n  );\r\n};\r\n\r\nexport default observer(CreateSwan);","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\OrigamiObject\\index.js",["179"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\models\\DrawingSectionModel.js",[],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\models\\RowModel.js",[],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Swan\\index.js",["180","181","182","183","184","185"],"import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\nimport grid from \"../../assets/paper.PNG\";\r\nimport Wing from \"../Wing\"\r\n\r\nconst Swan = (props) => {\r\n    const {swanStore, result} = props\r\n    const image = result ? swanStore.texture : grid\r\n    const texture = useMemo(() => new THREE.TextureLoader().load(image), []) \r\n\r\n    function getInputMarker(rad, height){\r\n        return (\r\n            <mesh position = {[0,height,0]}>\r\n                <cylinderGeometry args={[rad, rad, 0.25, 40, 1, true,0, Math.PI * 2]}/>\r\n                <meshPhongMaterial color=\"red\" />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const swan_pts = swanStore.swanBodyPts()\r\n\r\n    const swan_body = \r\n    <group>\r\n        <mesh >\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n        </mesh>\r\n        <mesh>\r\n            <latheGeometry args={[swan_pts, 30, 0, 2*Math.PI]}/>\r\n            <meshPhongMaterial map = {texture}  side = {THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const bottom = swanStore.diameter * swanStore.height_scale * 0.8 * -1\r\n    const rim_mesh = <mesh position = {[0,bottom-0.1,0]} rotation = {[1.57,0,0]}> \r\n    <torusGeometry args={[(swanStore.diameter * swanStore.bottom_scale/2)+0.1, swanStore.diameter/70, 10, 50]}/>\r\n    <meshPhongMaterial color={result? swanStore.default_color : \"#FF7E98\"} />\r\n    </mesh>\r\n\r\n    function getX(angle, radius){\r\n        return  radius * Math.cos(angle)\r\n    }\r\n\r\n    function getY(angle, radius){\r\n        return radius * Math.sin(angle)\r\n    }\r\n\r\n    const bottomRad = swanStore.diameter * swanStore.top_scale * 0.5\r\n    const midRad = swanStore.diameter * swanStore.top_scale * 0.5 * 0.73\r\n    const midHeight = swanStore.diameter * swanStore.height_scale * 1.7 * 0.5\r\n    const topHeight = swanStore.diameter * swanStore.height_scale * 1.9\r\n\r\n    const vertices =\r\n    [\r\n        // bottom row\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [getX(Math.PI/3.7, bottomRad), 0, getY(Math.PI/3.7, bottomRad)],  // 1\r\n        [getX(Math.PI/6, bottomRad), 0, getY(Math.PI/6, bottomRad)],  // 2\r\n        [getX(Math.PI/12, bottomRad), 0, getY(Math.PI/12, bottomRad)],  // 3\r\n        [getX(0, bottomRad), 0, getY(0, bottomRad)],  // 4\r\n        [getX(Math.PI/12, bottomRad), 0, -getY(Math.PI/12, bottomRad)],  // 5\r\n        [getX(Math.PI/6, bottomRad), 0, -getY(Math.PI/6, bottomRad)],  // 6\r\n        [getX(Math.PI/3.7, bottomRad), 0, -getY(Math.PI/3.7, bottomRad)],  // 7\r\n        [getX(Math.PI/2.8, bottomRad), 0, -getY(Math.PI/2.8, bottomRad)],  // 8\r\n        // middle row\r\n        [getX(Math.PI/2.8, midRad), midHeight, getY(Math.PI/2.8, midRad)],  // 9\r\n        [getX(Math.PI/3.7, midRad), midHeight, getY(Math.PI/3.7, midRad)],  // 10\r\n        [getX(Math.PI/6, midRad), midHeight, getY(Math.PI/6, midRad)],  // 11\r\n        [getX(Math.PI/12, midRad), midHeight, getY(Math.PI/12, midRad)],  // 12\r\n        [getX(0, midRad), midHeight, getY(0, midRad)],  // 13\r\n        [getX(Math.PI/12, midRad), midHeight, -getY(Math.PI/12, midRad)],  // 14\r\n        [getX(Math.PI/6, midRad), midHeight, -getY(Math.PI/6, midRad)],  // 15\r\n        [getX(Math.PI/3.7, midRad), midHeight, -getY(Math.PI/3.7, midRad)],  // 16\r\n        [getX(Math.PI/2.8, midRad), midHeight, -getY(Math.PI/2.8, midRad)],  // 17\r\n        // heights\r\n        [bottomRad/6, topHeight, 0]  // 18\r\n    ];\r\n\r\n    const big_vertices = \r\n    [\r\n        [-getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 0\r\n        [-getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 1\r\n        [-getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 2\r\n        [-getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 3        \r\n        [getX(Math.PI/2, bottomRad), 0, -getY(Math.PI/2, bottomRad)],  // 4\r\n        [getX(5*Math.PI/16, bottomRad), 0, -getY(5*Math.PI/16, bottomRad)],  // 5  \r\n        [getX(Math.PI/8, bottomRad), 0, -getY(Math.PI/8, bottomRad)],  // 6\r\n        [getX(0, bottomRad), 0, -getY(0, bottomRad)],  // 7\r\n        [getX(-Math.PI/6, bottomRad), 0, -getY(-Math.PI/6, bottomRad)],  // 8\r\n        [0, topHeight*1.1, -bottomRad*1.25]  // 9\r\n    ];\r\n\r\n    const F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 0\r\n        [-getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/2.4, bottomRad), 0, getY(Math.PI/2.4, bottomRad)],  // 3\r\n        [getX(Math.PI/2.8, bottomRad), 0, getY(Math.PI/2.8, bottomRad)],  // 4\r\n        [0, topHeight/3, bottomRad/1.3]  // 5\r\n    ];\r\n\r\n    const big_F_vertices = [\r\n        // bottom row\r\n        [-getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 0\r\n        [-getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 1\r\n        [getX(Math.PI/2, bottomRad), 0, getY(Math.PI/2, bottomRad)],  // 2\r\n        [getX(Math.PI/3, bottomRad), 0, getY(Math.PI/3, bottomRad)],  // 3\r\n        [getX(Math.PI/4, bottomRad), 0, getY(Math.PI/4, bottomRad)],  // 4\r\n        [0, topHeight/1.7, bottomRad/1.8]  // 5\r\n    ];\r\n\r\n    const L_vertices = []\r\n    for (let i = 0; i < vertices.length; i++){\r\n        let temp = []\r\n        temp.push(-1 * vertices[i][0],vertices[i][1],vertices[i][2])\r\n        L_vertices.push(temp)\r\n    }\r\n\r\n    const B_vertices = []\r\n    for (let i = 0; i < F_vertices.length-1; i++){\r\n        let temp = []\r\n        temp.push(F_vertices[i][0],F_vertices[i][1], -1 * F_vertices[i][2])\r\n        B_vertices.push(temp)\r\n    }\r\n    B_vertices.push([0, topHeight/4, -bottomRad * 1.1])\r\n\r\n    const y_pos_wing = swanStore.diameter * swanStore.height_scale\r\n    const wings = \r\n    <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={L_vertices} purpose={\"wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={B_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const one_wing = <group>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_vertices} purpose={\"one-wing\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26} />\r\n        </mesh>\r\n        <mesh position={[0,y_pos_wing,0]}>\r\n            <Wing vertices={big_F_vertices} purpose={\"front-back\"}/>\r\n            <meshPhongMaterial color={swanStore.default_color} side={THREE.BackSide} />\r\n        </mesh>\r\n    </group>\r\n\r\n    const shape = useMemo( () => new THREE.Shape(), [swanStore.diameter]);\r\n    const param = swanStore.diameter * 0.3\r\n    const t = param * 0.4\r\n    shape.moveTo(0, -param*1.3);\r\n    shape.lineTo(param*0.9, 0)\r\n    shape.quadraticCurveTo(param + param/3, param*1.5/2,param, param * 1.4)\r\n    shape.quadraticCurveTo(param/2, param * 1.9, -param/3,param)\r\n    shape.lineTo(-param/2.5, param - (1.5*t))\r\n    shape.quadraticCurveTo(param/2 , (param * 1.9) - t, param -t/1.5 , (param * 1.5) - t/1.5)\r\n    shape.quadraticCurveTo((param + param/3.5) -t/1.5, (param*1.5/2) + t/1.5, param -t/1.5, t/1.5)\r\n    \r\n    const depth = param/6\r\n\r\n    const extrudeSettings = {\r\n        steps: 100,  \r\n        depth: depth,  \r\n        bevelEnabled: false,   \r\n      };\r\n      \r\n\r\n    const offset = swanStore.diameter * swanStore.height_scale + (param*1.3) + ((topHeight/3) * 0)\r\n    const neck_mesh = <mesh position={[-depth/2,offset,(bottomRad/1)]} rotation={[0, Math.PI/2, 0]}>\r\n        <extrudeGeometry args={[shape, extrudeSettings]}/>\r\n        <meshPhongMaterial color={swanStore.default_color} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n    </mesh>\r\n\r\n\r\n    const diameter_marker = getInputMarker((swanStore.diameter/2) + 0.1, 0)\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-7,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            {swan_body}\r\n            {!swanStore.wings && one_wing}\r\n            {swanStore.wings && wings}\r\n            {!result && diameter_marker}\r\n            {swanStore.bottom_rim && rim_mesh}\r\n            {neck_mesh}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(Swan);","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\ResultBasket\\index.js",["186","187","188","189","190"],"import React, { useRef, useState, useMemo, useEffect} from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst ResultBasket = (props) => {\r\n    const {basketStore} = props\r\n    const itemsRef = useRef([]);\r\n    const insideRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        itemsRef.current = itemsRef.current.slice(0, basketStore.modelDimensions.length);\r\n        insideRef.current = insideRef.current.slice(0, basketStore.modelDimensions.length);\r\n     }, []);\r\n\r\n    useEffect(() => {\r\n        const len = basketStore.modelDimensions.length\r\n        for(let i = 0; i < len; i += 1){\r\n            itemsRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            insideRef.current[i].map = new THREE.TextureLoader().load(basketStore.textures[len-i-1])\r\n            // console.log(basketStore.textures[len-i-1])\r\n        }\r\n    }, [])\r\n\r\n    const s_dtop_h = basketStore.scale_h/2\r\n    const s_dbottom_h = -1 * s_dtop_h\r\n    const scale_factor = basketStore.scale_h/basketStore.height\r\n\r\n    const s_dtop = Math.max(1,basketStore.dtop * scale_factor)\r\n    const s_dbottom = Math.max(1,basketStore.dbottom * scale_factor)\r\n\r\n    let top_rim_mesh = <mesh/>\r\n    let bottom_rim_mesh = <mesh />\r\n    let handle = <mesh /> // handle options: 1 top, 2 sides, none \r\n    let lid = <mesh/> // true false\r\n    let side_handles = <mesh/>\r\n    let flat_bottom_mesh = <mesh />\r\n    let curved_bottom = <mesh />\r\n\r\n    if (basketStore.top_rim){\r\n        top_rim_mesh = <mesh position = {[0,s_dtop_h+0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dtop/2)+0.15,0.25,10,50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n    if (basketStore.bottom_rim){\r\n        bottom_rim_mesh = <mesh position = {[0,s_dbottom_h-0.1,0]} rotation = {[1.57,0,0]}> \r\n        <torusGeometry args={[(s_dbottom/2)+0.15, 0.25, 10, 50]}/>\r\n        <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    if (basketStore.top_handle){\r\n        const phi_len = Math.PI * 1\r\n        const theta_len = 0.1 * Math.PI\r\n        const theta_start = Math.PI * 0.45\r\n\r\n        handle = \r\n        <group>\r\n            <mesh position={[0,s_dtop_h,0]} rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,s_dtop_h,0]}  rotation={[-Math.PI/2,0,0]}>\r\n                <sphereGeometry args={[s_dtop/2, 20, 10, 0, phi_len, theta_start, theta_len]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.flat_bottom){\r\n        flat_bottom_mesh = <mesh position = {[0,s_dbottom_h,0]}>\r\n            <cylinderGeometry args={[s_dbottom/2, s_dbottom/2, 0.8, 32]}/>\r\n            <meshPhongMaterial color={basketStore.default_color} />\r\n        </mesh>\r\n    }\r\n\r\n    class CustomCircleCurve extends THREE.Curve {\r\n        constructor(scale) {\r\n          super();\r\n          this.scale = scale;\r\n        }\r\n        getPoint(t) {\r\n          const tx = 0;\r\n          const ty = Math.max(-0.5, Math.sin(2 * Math.PI * t));\r\n          const tz = Math.cos(2 * Math.PI * t);\r\n          return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n        }\r\n      }\r\n\r\n    if (basketStore.side_handles){\r\n        const tube_scale = s_dtop/5\r\n        const path = new CustomCircleCurve(tube_scale)\r\n        const segs = 40\r\n        const tube_rad = Math.min(0.5, tube_scale/10)\r\n        const rad_segs = 7\r\n        const closed = false\r\n\r\n        side_handles =  \r\n        <group>\r\n        <mesh position={[(-s_dtop/2)+(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]} >\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        <mesh position={[(s_dtop/2)-(tube_rad*2), s_dtop_h + tube_rad + (0.5*tube_scale), 0]}>\r\n            <tubeGeometry args={[path, segs, tube_rad, rad_segs, closed]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (basketStore.lid){\r\n        const lid_scale = 1\r\n        const percent_lid = 0.25\r\n        const rad_lid = (s_dtop * lid_scale/2) / Math.sin(Math.PI * percent_lid)\r\n        const lid_dist = s_dtop_h - (s_dtop* lid_scale/2) / Math.tan(Math.PI * percent_lid)\r\n        const deco_r = rad_lid/15\r\n        const deco_dist = lid_dist + rad_lid + deco_r - 0.2\r\n\r\n        lid = \r\n        <group>\r\n            <mesh position={[0,lid_dist+0.1,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n            <mesh position={[0,lid_dist,0]}>\r\n                <sphereGeometry args={[rad_lid, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_lid]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n            </mesh>\r\n            <mesh position={[0,deco_dist,0]}>\r\n                <sphereGeometry args={[deco_r, 20, 10]} />\r\n                <meshPhongMaterial color={basketStore.default_color} side = {THREE.FrontSide} />\r\n            </mesh>\r\n        </group>\r\n    }\r\n\r\n    if (!basketStore.flat_bottom){\r\n        const percent_sphere = 0.2\r\n        const rad_bottom = (s_dbottom/2) / Math.sin(Math.PI * percent_sphere)\r\n        const bottom_dist = s_dbottom_h - (s_dbottom/2) / Math.tan(Math.PI * percent_sphere)\r\n\r\n        curved_bottom = <group>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side={THREE.FrontSide}/>\r\n        </mesh>\r\n        <mesh position={[0,bottom_dist-0.1,0]}>\r\n            <sphereGeometry args={[rad_bottom, 20, 10, 0, Math.PI * 2, 0, Math.PI * percent_sphere]} />\r\n            <meshPhongMaterial color={basketStore.default_color} side = {THREE.BackSide} />\r\n        </mesh>\r\n        </group>\r\n    }\r\n\r\n    // const points = basketStore.updateCurvedPts()\r\n    const points = useMemo(() => basketStore.updateCurvedPts(true), [basketStore.cm]);\r\n\r\n    let [x_rot,changeXrot] = useState(0);\r\n    let [y_rot,changeYrot] = useState(0);\r\n    let [z_rot,changeZrot] = useState(0);\r\n    let [dist,changeDist] = useState(0);\r\n\r\n    const handleKeyDown = (event) => {\r\n        switch(event.key)\r\n        {\r\n            case \"x\":\r\n                    x_rot = x_rot + 0.1\r\n                    changeXrot(x_rot);\r\n                    break;\r\n            case \"y\": \r\n                    y_rot = y_rot + 0.1\r\n                    changeYrot(y_rot);\r\n                    break;\r\n            case \"z\": \r\n                    z_rot = z_rot + 0.1\r\n                    changeZrot(z_rot);\r\n                    break;\r\n            case \"w\": \r\n                    dist = Math.max(dist - 5,-300)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \"q\": \r\n                    dist = Math.min(dist + 5,50)\r\n                    changeDist(dist)\r\n                    break;\r\n            case \" \": \r\n                    event.preventDefault()\r\n                    x_rot = 0\r\n                    y_rot = 0\r\n                    z_rot = 0 \r\n                    dist = 0\r\n                    changeXrot(x_rot)\r\n                    changeYrot(y_rot)\r\n                    changeZrot(z_rot)\r\n                    changeDist(dist)\r\n            default: \r\n                    break;\r\n        }\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        // cleanup this component\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <group position={[0,-5,dist]} rotation={[x_rot,y_rot,z_rot]}> \r\n            <group>\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => itemsRef.current[i] = el} side={THREE.FrontSide} specular=\"#121212\" shininess = {26}/>\r\n                </mesh>\r\n            ))}\r\n            {points.map((_, i) => (\r\n                <mesh key={i}>\r\n                    <latheGeometry args={[points[i], 30, 0, 2*Math.PI]}/>\r\n                    <meshPhongMaterial ref={el => insideRef.current[i] = el} side = {THREE.BackSide} />\r\n                </mesh>\r\n            ))}\r\n            </group>   \r\n            {basketStore.lid && lid}\r\n            {basketStore.top_rim && top_rim_mesh}\r\n            {basketStore.bottom_rim && bottom_rim_mesh}\r\n            {basketStore.top_handle && handle}\r\n            {basketStore.side_handles && side_handles}\r\n            {basketStore.flat_bottom && flat_bottom_mesh}\r\n            {!basketStore.flat_bottom && curved_bottom}\r\n        </group>\r\n    )\r\n  }\r\n\r\nexport default observer(ResultBasket);","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Arm\\index.js",["191"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Rim\\index.js",["192","193","194"],"import React from \"react\";\r\nimport rim_image from \"../../assets/rim.png\";\r\nimport half_rim_image from \"../../assets/halfRim.png\";\r\nimport neck_image from \"../../assets/neck.png\"\r\nimport \"./rim.css\"\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\n\r\nconst Rim = (props) => {\r\n    const {swan, full, caption, circ} = props \r\n    return (\r\n        <div className=\"rimDiv\">\r\n            <p id=\"text\">{caption}</p>\r\n            {full && <img src={rim_image} className=\"rim\" />}\r\n            {!full && !swan  && <img src={half_rim_image} className=\"half_rim\" />}\r\n            {swan && <img src={neck_image} className=\"neck\" />} \r\n            <p id=\"text\">{circ} pieces</p>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Rim;","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Sphere\\index.js",["195"],"import React from \"react\";\r\nimport UntrackedOrigamiObject from \"../UntrackedOrigamiObject\";\r\nimport \"../DrawingSection/drawingSection.css\"\r\n\r\nconst Sphere = (props) => {\r\n    const {size, caption, formObject} = props \r\n    let object = <div></div>\r\n    let dimensions = []\r\n\r\n    function calc(){\r\n        return [[6,5],[8,5],[5,5]]\r\n    }\r\n\r\n    // curved Sphere/lid for basket\r\n    dimensions = calc() // top to Sphere \r\n    object = <UntrackedOrigamiObject dimensions={dimensions} formObject={formObject} />\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"text\">{caption}</p>\r\n            {object}\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Sphere;","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\SpecialRow\\index.js",["196","197","198","199"],"import React from \"react\";\r\nimport \"./specialRow.css\";\r\nimport SpecialPixel from \"../SpecialPixel\";\r\n\r\nexport default function SpecialRow(props) {\r\n  const { width, offset, specialTop, specialBottom } = props;\r\n\r\n  let pixels = [];\r\n\r\n  const my_dict = specialBottom ? specialBottom : specialTop\r\n  let count = 0 \r\n\r\n  pixels.push(<SpecialPixel key={-1} on={false} num={\"\"}/>)\r\n\r\n  for (let i = 0; i < width; i++) {\r\n    if (i in my_dict){\r\n      if (my_dict[i] == 1){\r\n        count += 1\r\n        pixels.push(<SpecialPixel key={i} on={true} markerNum={count}/>);\r\n      }\r\n      else if (my_dict[i] == -1){\r\n        pixels.push(<SpecialPixel key={i} on={true} rounded={true}/>);\r\n      }\r\n      else if (i == width-1 && my_dict[i] == 0){\r\n        pixels[0] = <SpecialPixel key={i} on={true}/>\r\n      }\r\n      else{\r\n        pixels.push(<SpecialPixel key={i} on={true}/>);\r\n      }\r\n    }\r\n    else{\r\n        pixels.push(<SpecialPixel key={i} on={false} num = {i+1}/>);\r\n    }\r\n  }\r\n\r\n  return <div style={{marginLeft: offset}} className=\"specialRow\">{pixels}</div>;\r\n}","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Pixel\\index.js",["200","201"],"import React, { useEffect} from \"react\";\r\nimport \"./pixel.css\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Pixel = (props) => {\r\n  const {formObject, PxModel} = props;\r\n\r\n  function borderColor() {\r\n    var color = PxModel.pixelColor.substring(1, 8);\r\n    var r = parseInt(color.substring(0, 2), 16); // hexToR\r\n    var g = parseInt(color.substring(2, 4), 16); // hexToG\r\n    var b = parseInt(color.substring(4, 6), 16); // hexToB\r\n    return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 90) ?\r\n      \"#000000\" : \"#FFFFFF\";\r\n  }\r\n\r\n  useEffect(()=>{\r\n    formObject.addPc()\r\n    formObject.updateCounterDefault(true)\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    if (formObject.clear){\r\n      formObject.updateCounterDefault(true)\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n    else if(PxModel.pixelColor === formObject.oldDefault) {\r\n      formObject.updateCounterDefault()\r\n      PxModel.setPixelColor(formObject.defaultColor)\r\n    }\r\n  }, [formObject.defaultColor])\r\n\r\n  function applyColor() {\r\n    formObject.unsetClear();\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n    if (PxModel.pixelColor !== PxModel.oldColor){\r\n      formObject.updateCounter(PxModel.oldColor, PxModel.pixelColor)\r\n      PxModel.setOldColor(PxModel.pixelColor)\r\n    } \r\n    PxModel.setCanChangeColor(false);\r\n  }\r\n\r\n  function applyColorSpray() {\r\n    if (formObject.mode){\r\n      applyColor()\r\n    }\r\n  }\r\n\r\n  function changeColorOnHover() {\r\n    PxModel.setOldColor(PxModel.pixelColor);\r\n    PxModel.setPixelColor(formObject.selectedColor);\r\n  }\r\n\r\n  function resetColor() {\r\n    if (PxModel.canChangeColor) {\r\n      PxModel.setPixelColor(PxModel.oldColor);\r\n    }\r\n\r\n    PxModel.setCanChangeColor(true);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pixel\"\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onMouseOver={applyColorSpray}\r\n      style={{ background: PxModel.pixelColor, borderColor: borderColor(), borderStyle: \"solid\"}}\r\n    >\r\n      {PxModel.inverted && <div className=\"inverted\" style={{color: borderColor()}}>-</div>}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default observer(Pixel);","C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\models\\ColoringForm.js",[],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\result.js",["202","203"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\create-basket.js",["204","205"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\create.js",["206"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\pages\\create-figurine.js",["207","208"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\models\\FigurineStore.js",["209"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\Navbar\\index.js",["210","211","212"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\ResultVase\\index.js",["213","214","215","216","217"],"C:\\Users\\Lina\\Downloads\\3D-O\\frontend\\src\\components\\SpecialPixel\\index.js",["218"],{"ruleId":"219","severity":1,"message":"220","line":1,"column":34,"nodeType":"221","messageId":"222","endLine":1,"endColumn":43},{"ruleId":"219","severity":1,"message":"223","line":7,"column":10,"nodeType":"221","messageId":"222","endLine":7,"endColumn":27},{"ruleId":"219","severity":1,"message":"224","line":7,"column":29,"nodeType":"221","messageId":"222","endLine":7,"endColumn":38},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":41,"column":24,"nodeType":"231","messageId":"232","endLine":41,"endColumn":26},{"ruleId":"229","severity":1,"message":"233","line":13,"column":17,"nodeType":"231","messageId":"232","endLine":13,"endColumn":19},{"ruleId":"219","severity":1,"message":"234","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":23},{"ruleId":"219","severity":1,"message":"220","line":1,"column":44,"nodeType":"221","messageId":"222","endLine":1,"endColumn":53},{"ruleId":"235","severity":1,"message":"236","line":197,"column":13,"nodeType":"237","messageId":"238","endLine":198,"endColumn":27},{"ruleId":"239","severity":1,"message":"240","line":209,"column":8,"nodeType":"241","endLine":209,"endColumn":10,"suggestions":"242"},{"ruleId":"219","severity":1,"message":"234","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":23},{"ruleId":"219","severity":1,"message":"243","line":1,"column":25,"nodeType":"221","messageId":"222","endLine":1,"endColumn":33},{"ruleId":"219","severity":1,"message":"220","line":1,"column":44,"nodeType":"221","messageId":"222","endLine":1,"endColumn":53},{"ruleId":"219","severity":1,"message":"244","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":12},{"ruleId":"239","severity":1,"message":"245","line":8,"column":83,"nodeType":"241","endLine":8,"endColumn":85,"suggestions":"246"},{"ruleId":"229","severity":1,"message":"233","line":11,"column":17,"nodeType":"231","messageId":"232","endLine":11,"endColumn":19},{"ruleId":"229","severity":1,"message":"233","line":40,"column":22,"nodeType":"231","messageId":"232","endLine":40,"endColumn":24},{"ruleId":"229","severity":1,"message":"233","line":49,"column":22,"nodeType":"231","messageId":"232","endLine":49,"endColumn":24},{"ruleId":"219","severity":1,"message":"220","line":1,"column":16,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"234","line":1,"column":38,"nodeType":"221","messageId":"222","endLine":1,"endColumn":44},{"ruleId":"239","severity":1,"message":"247","line":24,"column":6,"nodeType":"241","endLine":24,"endColumn":8,"suggestions":"248"},{"ruleId":"229","severity":1,"message":"233","line":31,"column":24,"nodeType":"231","messageId":"232","endLine":31,"endColumn":26},{"ruleId":"239","severity":1,"message":"249","line":35,"column":6,"nodeType":"241","endLine":35,"endColumn":31,"suggestions":"250"},{"ruleId":"229","severity":1,"message":"230","line":41,"column":20,"nodeType":"231","messageId":"232","endLine":41,"endColumn":22},{"ruleId":"219","severity":1,"message":"251","line":9,"column":33,"nodeType":"221","messageId":"222","endLine":9,"endColumn":39},{"ruleId":"219","severity":1,"message":"252","line":9,"column":41,"nodeType":"221","messageId":"222","endLine":9,"endColumn":46},{"ruleId":"239","severity":1,"message":"253","line":22,"column":6,"nodeType":"241","endLine":22,"endColumn":8,"suggestions":"254"},{"ruleId":"229","severity":1,"message":"233","line":68,"column":12,"nodeType":"231","messageId":"232","endLine":68,"endColumn":14},{"ruleId":"229","severity":1,"message":"233","line":68,"column":28,"nodeType":"231","messageId":"232","endLine":68,"endColumn":30},{"ruleId":"255","severity":1,"message":"256","line":343,"column":13,"nodeType":"257","endLine":343,"endColumn":16},{"ruleId":"239","severity":1,"message":"253","line":23,"column":6,"nodeType":"241","endLine":23,"endColumn":23,"suggestions":"258"},{"ruleId":"255","severity":1,"message":"256","line":169,"column":13,"nodeType":"257","endLine":169,"endColumn":16},{"ruleId":"229","severity":1,"message":"233","line":115,"column":44,"nodeType":"231","messageId":"232","endLine":115,"endColumn":46},{"ruleId":"219","severity":1,"message":"234","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":23},{"ruleId":"219","severity":1,"message":"220","line":1,"column":44,"nodeType":"221","messageId":"222","endLine":1,"endColumn":53},{"ruleId":"239","severity":1,"message":"259","line":10,"column":74,"nodeType":"241","endLine":10,"endColumn":76,"suggestions":"260"},{"ruleId":"239","severity":1,"message":"261","line":185,"column":53,"nodeType":"241","endLine":185,"endColumn":73,"suggestions":"262"},{"ruleId":"235","severity":1,"message":"236","line":252,"column":13,"nodeType":"237","messageId":"238","endLine":253,"endColumn":27},{"ruleId":"239","severity":1,"message":"240","line":264,"column":8,"nodeType":"241","endLine":264,"endColumn":10,"suggestions":"263"},{"ruleId":"239","severity":1,"message":"264","line":13,"column":9,"nodeType":"241","endLine":13,"endColumn":11,"suggestions":"265"},{"ruleId":"239","severity":1,"message":"266","line":22,"column":8,"nodeType":"241","endLine":22,"endColumn":10,"suggestions":"267"},{"ruleId":"239","severity":1,"message":"268","line":154,"column":69,"nodeType":"241","endLine":154,"endColumn":85,"suggestions":"269"},{"ruleId":"235","severity":1,"message":"236","line":194,"column":13,"nodeType":"237","messageId":"238","endLine":195,"endColumn":27},{"ruleId":"239","severity":1,"message":"240","line":206,"column":8,"nodeType":"241","endLine":206,"endColumn":10,"suggestions":"270"},{"ruleId":"219","severity":1,"message":"271","line":6,"column":21,"nodeType":"221","messageId":"222","endLine":6,"endColumn":25},{"ruleId":"272","severity":1,"message":"273","line":14,"column":22,"nodeType":"257","endLine":14,"endColumn":61},{"ruleId":"272","severity":1,"message":"273","line":15,"column":33,"nodeType":"257","endLine":15,"endColumn":82},{"ruleId":"272","severity":1,"message":"273","line":16,"column":22,"nodeType":"257","endLine":16,"endColumn":63},{"ruleId":"219","severity":1,"message":"271","line":6,"column":12,"nodeType":"221","messageId":"222","endLine":6,"endColumn":16},{"ruleId":"229","severity":1,"message":"233","line":17,"column":22,"nodeType":"231","messageId":"232","endLine":17,"endColumn":24},{"ruleId":"229","severity":1,"message":"233","line":21,"column":27,"nodeType":"231","messageId":"232","endLine":21,"endColumn":29},{"ruleId":"229","severity":1,"message":"233","line":24,"column":18,"nodeType":"231","messageId":"232","endLine":24,"endColumn":20},{"ruleId":"229","severity":1,"message":"233","line":24,"column":43,"nodeType":"231","messageId":"232","endLine":24,"endColumn":45},{"ruleId":"239","severity":1,"message":"247","line":20,"column":6,"nodeType":"241","endLine":20,"endColumn":8,"suggestions":"274"},{"ruleId":"239","severity":1,"message":"275","line":31,"column":6,"nodeType":"241","endLine":31,"endColumn":31,"suggestions":"276"},{"ruleId":"239","severity":1,"message":"277","line":62,"column":6,"nodeType":"241","endLine":62,"endColumn":8,"suggestions":"278"},{"ruleId":"255","severity":1,"message":"256","line":83,"column":13,"nodeType":"257","endLine":83,"endColumn":16},{"ruleId":"239","severity":1,"message":"253","line":22,"column":6,"nodeType":"241","endLine":22,"endColumn":8,"suggestions":"279"},{"ruleId":"255","severity":1,"message":"256","line":263,"column":13,"nodeType":"257","endLine":263,"endColumn":16},{"ruleId":"239","severity":1,"message":"253","line":19,"column":6,"nodeType":"241","endLine":19,"endColumn":8,"suggestions":"280"},{"ruleId":"239","severity":1,"message":"253","line":23,"column":6,"nodeType":"241","endLine":23,"endColumn":8,"suggestions":"281"},{"ruleId":"255","severity":1,"message":"256","line":182,"column":13,"nodeType":"257","endLine":182,"endColumn":16},{"ruleId":"282","severity":1,"message":"283","line":96,"column":5,"nodeType":"284","messageId":"232","endLine":96,"endColumn":13},{"ruleId":"219","severity":1,"message":"285","line":5,"column":3,"nodeType":"221","messageId":"222","endLine":5,"endColumn":7},{"ruleId":"219","severity":1,"message":"286","line":7,"column":3,"nodeType":"221","messageId":"222","endLine":7,"endColumn":9},{"ruleId":"219","severity":1,"message":"287","line":8,"column":3,"nodeType":"221","messageId":"222","endLine":8,"endColumn":13},{"ruleId":"239","severity":1,"message":"288","line":13,"column":9,"nodeType":"241","endLine":13,"endColumn":11,"suggestions":"289"},{"ruleId":"239","severity":1,"message":"290","line":22,"column":8,"nodeType":"241","endLine":22,"endColumn":10,"suggestions":"291"},{"ruleId":"239","severity":1,"message":"292","line":49,"column":67,"nodeType":"241","endLine":49,"endColumn":81,"suggestions":"293"},{"ruleId":"235","severity":1,"message":"236","line":96,"column":13,"nodeType":"237","messageId":"238","endLine":97,"endColumn":27},{"ruleId":"239","severity":1,"message":"240","line":108,"column":8,"nodeType":"241","endLine":108,"endColumn":10,"suggestions":"294"},{"ruleId":"219","severity":1,"message":"243","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'coloringFormStore' is assigned a value but never used.","'swanStore' is assigned a value but never used.","no-native-reassign",["295"],"no-negated-in-lhs",["296"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useRef' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'handleKeyDown'. Either include it or remove the dependency array.","ArrayExpression",["297"],"'useState' is defined but never used.","'grid' is defined but never used.","React Hook useMemo has a missing dependency: 'vertices'. Either include it or remove the dependency array.",["298"],"React Hook useEffect has a missing dependency: 'formObject'. Either include it or remove the dependency array.",["299"],"React Hook useEffect has missing dependencies: 'formObject' and 'pixelColor'. Either include them or remove the dependency array.",["300"],"'Tracks' is defined but never used.","'Ticks' is defined but never used.","React Hook useEffect has a missing dependency: 'coloringFormStore'. Either include it or remove the dependency array.",["301"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["302"],"React Hook useMemo has a missing dependency: 'image'. Either include it or remove the dependency array.",["303"],"React Hook useMemo has an unnecessary dependency: 'swanStore.diameter'. Either exclude it or remove the dependency array.",["304"],["305"],"React Hook useEffect has a missing dependency: 'basketStore.modelDimensions.length'. Either include it or remove the dependency array.",["306"],"React Hook useEffect has missing dependencies: 'basketStore.modelDimensions.length' and 'basketStore.textures'. Either include them or remove the dependency array.",["307"],"React Hook useMemo has a missing dependency: 'basketStore'. Either include it or remove the dependency array.",["308"],["309"],"'size' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["310"],"React Hook useEffect has missing dependencies: 'PxModel' and 'formObject'. Either include them or remove the dependency array.",["311"],"React Hook useEffect has missing dependencies: 'coloringFormStore' and 'modelStore'. Either include them or remove the dependency array.",["312"],["313"],["314"],["315"],"no-dupe-keys","Duplicate key 'storePic'.","ObjectExpression","'Bars' is defined but never used.","'NavBtn' is defined but never used.","'NavBtnLink' is defined but never used.","React Hook useEffect has a missing dependency: 'vaseStore.modelDimensions.length'. Either include it or remove the dependency array.",["316"],"React Hook useEffect has missing dependencies: 'vaseStore.modelDimensions.length' and 'vaseStore.textures'. Either include them or remove the dependency array.",["317"],"React Hook useMemo has a missing dependency: 'vaseStore'. Either include it or remove the dependency array.",["318"],["319"],"no-global-assign","no-unsafe-negation",{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"320","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"320","fix":"343"},{"desc":"324","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"328","fix":"349"},{"desc":"328","fix":"350"},{"desc":"328","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"320","fix":"358"},"Update the dependencies array to be: [handleKeyDown]",{"range":"359","text":"360"},"Update the dependencies array to be: [vertices]",{"range":"361","text":"362"},"Update the dependencies array to be: [formObject]",{"range":"363","text":"364"},"Update the dependencies array to be: [formObject, formObject.defaultColor, pixelColor]",{"range":"365","text":"366"},"Update the dependencies array to be: [coloringFormStore]",{"range":"367","text":"368"},"Update the dependencies array to be: [coloringFormStore, swanStore.wings]",{"range":"369","text":"370"},"Update the dependencies array to be: [image]",{"range":"371","text":"372"},"Update the dependencies array to be: []",{"range":"373","text":"374"},{"range":"375","text":"360"},"Update the dependencies array to be: [basketStore.modelDimensions.length]",{"range":"376","text":"377"},"Update the dependencies array to be: [basketStore.modelDimensions.length, basketStore.textures]",{"range":"378","text":"379"},"Update the dependencies array to be: [basketStore]",{"range":"380","text":"381"},{"range":"382","text":"360"},{"range":"383","text":"364"},"Update the dependencies array to be: [PxModel, formObject, formObject.defaultColor]",{"range":"384","text":"385"},"Update the dependencies array to be: [coloringFormStore, modelStore]",{"range":"386","text":"387"},{"range":"388","text":"368"},{"range":"389","text":"368"},{"range":"390","text":"368"},"Update the dependencies array to be: [vaseStore.modelDimensions.length]",{"range":"391","text":"392"},"Update the dependencies array to be: [vaseStore.modelDimensions.length, vaseStore.textures]",{"range":"393","text":"394"},"Update the dependencies array to be: [vaseStore]",{"range":"395","text":"396"},{"range":"397","text":"360"},[8107,8109],"[handleKeyDown]",[336,338],"[vertices]",[852,854],"[formObject]",[1163,1188],"[formObject, formObject.defaultColor, pixelColor]",[708,710],"[coloringFormStore]",[710,727],"[coloringFormStore, swanStore.wings]",[408,410],"[image]",[8862,8882],"[]",[11644,11646],[498,500],"[basketStore.modelDimensions.length]",[907,909],"[basketStore.modelDimensions.length, basketStore.textures]",[6566,6582],"[basketStore]",[8178,8180],[629,631],[957,982],"[PxModel, formObject, formObject.defaultColor]",[3061,3063],"[coloringFormStore, modelStore]",[700,702],[547,549],[702,704],[489,491],"[vaseStore.modelDimensions.length]",[890,892],"[vaseStore.modelDimensions.length, vaseStore.textures]",[1869,1883],"[vaseStore]",[3747,3749]]